{
    "meta": {
        "format": "1",
        "required plugins": [
            "Plugin"
        ]
    },
    "steps": {
        "cedar.dynamics.NeuralField": {
            "name": "Action Concepts",
            "activation as output": "false",
            "discrete metric (workaround)": "true",
            "update stepIcon according to output": "true",
            "threshold for updating the stepIcon": "0.80000000000000004",
            "dimensionality": "1",
            "sizes": [
                "3"
            ],
            "time scale": "100",
            "resting level": "-0.75",
            "input noise gain": "0.10000000000000001",
            "multiplicative noise (input)": "false",
            "multiplicative noise (activation)": "false",
            "sigmoid": {
                "type": "cedar.aux.math.HeavisideSigmoid",
                "threshold": "0"
            },
            "global inhibition": "0",
            "lateral kernels": "",
            "lateral kernel convolution": {
                "borderType": "Zero",
                "mode": "Same",
                "engine": {
                    "type": "cedar.aux.conv.OpenCV"
                },
                "alternate even kernel center": "false"
            },
            "noise correlation kernel": {
                "dimensionality": "1",
                "anchor": [
                    "0"
                ],
                "amplitude": "0",
                "sigmas": [
                    "3"
                ],
                "normalize": "true",
                "shifts": [
                    "0"
                ],
                "limit": "5"
            },
            "comments": ""
        },
        "cedar.dynamics.NeuralField": {
            "name": "Action role Field",
            "activation as output": "false",
            "discrete metric (workaround)": "true",
            "update stepIcon according to output": "true",
            "threshold for updating the stepIcon": "0.80000000000000004",
            "dimensionality": "1",
            "sizes": [
                "3"
            ],
            "time scale": "100",
            "resting level": "-2.25",
            "input noise gain": "0.10000000000000001",
            "multiplicative noise (input)": "false",
            "multiplicative noise (activation)": "false",
            "sigmoid": {
                "type": "cedar.aux.math.HeavisideSigmoid",
                "threshold": "0"
            },
            "global inhibition": "-0.5",
            "lateral kernels": {
                "cedar.aux.kernel.Gauss": {
                    "dimensionality": "1",
                    "anchor": [
                        "0"
                    ],
                    "amplitude": "0.50000000000000011",
                    "sigmas": [
                        "0.01"
                    ],
                    "normalize": "true",
                    "shifts": [
                        "0"
                    ],
                    "limit": "5"
                }
            },
            "lateral kernel convolution": {
                "borderType": "Zero",
                "mode": "Same",
                "engine": {
                    "type": "cedar.aux.conv.OpenCV"
                },
                "alternate even kernel center": "false"
            },
            "noise correlation kernel": {
                "dimensionality": "1",
                "anchor": [
                    "0"
                ],
                "amplitude": "0",
                "sigmas": [
                    "3"
                ],
                "normalize": "true",
                "shifts": [
                    "0"
                ],
                "limit": "5"
            },
            "comments": ""
        },
        "cedar.dynamics.NeuralField": {
            "name": "Action-Change-Inhibition",
            "activation as output": "false",
            "discrete metric (workaround)": "true",
            "update stepIcon according to output": "true",
            "threshold for updating the stepIcon": "0.80000000000000004",
            "dimensionality": "1",
            "sizes": [
                "3"
            ],
            "time scale": "4000",
            "resting level": "-0.75",
            "input noise gain": "0.10000000000000001",
            "multiplicative noise (input)": "false",
            "multiplicative noise (activation)": "false",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0",
                "beta": "100"
            },
            "global inhibition": "0",
            "lateral kernels": "",
            "lateral kernel convolution": {
                "borderType": "Zero",
                "mode": "Same",
                "engine": {
                    "type": "cedar.aux.conv.OpenCV"
                },
                "alternate even kernel center": "false"
            },
            "noise correlation kernel": {
                "dimensionality": "1",
                "anchor": [
                    "0"
                ],
                "amplitude": "0",
                "sigmas": [
                    "3"
                ],
                "normalize": "true",
                "shifts": [
                    "0"
                ],
                "limit": "5"
            },
            "comments": ""
        },
        "cedar.dynamics.NeuralField": {
            "name": "Action-Color-Projection",
            "activation as output": "false",
            "discrete metric (workaround)": "true",
            "update stepIcon according to output": "true",
            "threshold for updating the stepIcon": "0.80000000000000004",
            "dimensionality": "1",
            "sizes": [
                "6"
            ],
            "time scale": "100",
            "resting level": "-0.75",
            "input noise gain": "0.10000000000000001",
            "multiplicative noise (input)": "false",
            "multiplicative noise (activation)": "false",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0",
                "beta": "100"
            },
            "global inhibition": "0",
            "lateral kernels": "",
            "lateral kernel convolution": {
                "borderType": "Zero",
                "mode": "Same",
                "engine": {
                    "type": "cedar.aux.conv.OpenCV"
                },
                "alternate even kernel center": "false"
            },
            "noise correlation kernel": {
                "dimensionality": "1",
                "anchor": [
                    "0"
                ],
                "amplitude": "0",
                "sigmas": [
                    "3"
                ],
                "normalize": "true",
                "shifts": [
                    "0"
                ],
                "limit": "5"
            },
            "comments": ""
        },
        "cedar.dynamics.Preshape": {
            "name": "Action-Habituation",
            "dimensionality": "2",
            "sizes": [
                "6",
                "3"
            ],
            "time scale build up": "15000",
            "time scale decay": "150000",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0.5",
                "beta": "1000"
            },
            "comments": ""
        },
        "cedar.dynamics.NeuralField": {
            "name": "Action-Outcome-Detectio",
            "activation as output": "false",
            "discrete metric (workaround)": "false",
            "update stepIcon according to output": "true",
            "threshold for updating the stepIcon": "0.80000000000000004",
            "dimensionality": "0",
            "sizes": "",
            "time scale": "100",
            "resting level": "-1.75",
            "input noise gain": "0.10000000000000001",
            "multiplicative noise (input)": "false",
            "multiplicative noise (activation)": "false",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0",
                "beta": "100"
            },
            "global inhibition": "0",
            "lateral kernels": "",
            "lateral kernel convolution": {
                "borderType": "Zero",
                "mode": "Same",
                "engine": {
                    "type": "cedar.aux.conv.OpenCV"
                },
                "alternate even kernel center": "false"
            },
            "noise correlation kernel": {
                "dimensionality": "1",
                "anchor": [
                    "0"
                ],
                "amplitude": "0",
                "sigmas": [
                    "3"
                ],
                "normalize": "true",
                "shifts": [
                    "0"
                ],
                "limit": "5"
            },
            "comments": ""
        },
        "cedar.dynamics.Preshape": {
            "name": "Action-Perseveration",
            "dimensionality": "2",
            "sizes": [
                "6",
                "3"
            ],
            "time scale build up": "1000",
            "time scale decay": "150000",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0.5",
                "beta": "1000"
            },
            "comments": ""
        },
        "cedar.dynamics.NeuralField": {
            "name": "Action-Projection",
            "activation as output": "false",
            "discrete metric (workaround)": "true",
            "update stepIcon according to output": "true",
            "threshold for updating the stepIcon": "0.80000000000000004",
            "dimensionality": "1",
            "sizes": [
                "3"
            ],
            "time scale": "100",
            "resting level": "-0.75",
            "input noise gain": "0.10000000000000001",
            "multiplicative noise (input)": "false",
            "multiplicative noise (activation)": "false",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0",
                "beta": "100"
            },
            "global inhibition": "0",
            "lateral kernels": "",
            "lateral kernel convolution": {
                "borderType": "Zero",
                "mode": "Same",
                "engine": {
                    "type": "cedar.aux.conv.OpenCV"
                },
                "alternate even kernel center": "false"
            },
            "noise correlation kernel": {
                "dimensionality": "1",
                "anchor": [
                    "0"
                ],
                "amplitude": "0",
                "sigmas": [
                    "3"
                ],
                "normalize": "true",
                "shifts": [
                    "0"
                ],
                "limit": "5"
            },
            "comments": ""
        },
        "cedar.dynamics.NeuralField": {
            "name": "Action-Recall",
            "activation as output": "false",
            "discrete metric (workaround)": "false",
            "update stepIcon according to output": "true",
            "threshold for updating the stepIcon": "0.80000000000000004",
            "dimensionality": "2",
            "sizes": [
                "6",
                "3"
            ],
            "time scale": "100",
            "resting level": "-2.75",
            "input noise gain": "0.10000000000000001",
            "multiplicative noise (input)": "false",
            "multiplicative noise (activation)": "false",
            "sigmoid": {
                "type": "cedar.aux.math.HeavisideSigmoid",
                "threshold": "0"
            },
            "global inhibition": "0",
            "lateral kernels": {
                "cedar.aux.kernel.Gauss": {
                    "dimensionality": "2",
                    "anchor": [
                        "0",
                        "0"
                    ],
                    "amplitude": "2.7999999999999998",
                    "sigmas": [
                        "0.01",
                        "0.01"
                    ],
                    "normalize": "true",
                    "shifts": [
                        "0",
                        "0"
                    ],
                    "limit": "5"
                }
            },
            "lateral kernel convolution": {
                "borderType": "Zero",
                "mode": "Same",
                "engine": {
                    "type": "cedar.aux.conv.OpenCV"
                },
                "alternate even kernel center": "false"
            },
            "noise correlation kernel": {
                "dimensionality": "2",
                "anchor": [
                    "0",
                    "0"
                ],
                "amplitude": "0",
                "sigmas": [
                    "3",
                    "3"
                ],
                "normalize": "true",
                "shifts": [
                    "0",
                    "0"
                ],
                "limit": "5"
            },
            "comments": ""
        },
        "cedar.dynamics.NeuralField": {
            "name": "Action-Reset",
            "activation as output": "false",
            "discrete metric (workaround)": "false",
            "update stepIcon according to output": "true",
            "threshold for updating the stepIcon": "0.80000000000000004",
            "dimensionality": "0",
            "sizes": "",
            "time scale": "1000",
            "resting level": "-0.75",
            "input noise gain": "0.10000000000000001",
            "multiplicative noise (input)": "false",
            "multiplicative noise (activation)": "false",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0",
                "beta": "100"
            },
            "global inhibition": "0",
            "lateral kernels": "",
            "lateral kernel convolution": {
                "borderType": "Zero",
                "mode": "Same",
                "engine": {
                    "type": "cedar.aux.conv.OpenCV"
                },
                "alternate even kernel center": "false"
            },
            "noise correlation kernel": {
                "dimensionality": "1",
                "anchor": [
                    "0"
                ],
                "amplitude": "0",
                "sigmas": [
                    "3"
                ],
                "normalize": "true",
                "shifts": [
                    "0"
                ],
                "limit": "5"
            },
            "comments": ""
        },
        "cedar.dynamics.NeuralField": {
            "name": "Action-Task",
            "activation as output": "false",
            "discrete metric (workaround)": "false",
            "update stepIcon according to output": "true",
            "threshold for updating the stepIcon": "0.80000000000000004",
            "dimensionality": "0",
            "sizes": "",
            "time scale": "100",
            "resting level": "-5",
            "input noise gain": "0.10000000000000001",
            "multiplicative noise (input)": "false",
            "multiplicative noise (activation)": "false",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0",
                "beta": "100"
            },
            "global inhibition": "0",
            "lateral kernels": {
                "cedar.aux.kernel.Box": {
                    "dimensionality": "1",
                    "anchor": [
                        "0"
                    ],
                    "amplitude": "1",
                    "widths": [
                        "1"
                    ]
                }
            },
            "lateral kernel convolution": {
                "borderType": "Zero",
                "mode": "Same",
                "engine": {
                    "type": "cedar.aux.conv.OpenCV"
                },
                "alternate even kernel center": "false"
            },
            "noise correlation kernel": {
                "dimensionality": "1",
                "anchor": [
                    "0"
                ],
                "amplitude": "0",
                "sigmas": [
                    "3"
                ],
                "normalize": "true",
                "shifts": [
                    "0"
                ],
                "limit": "5"
            },
            "comments": ""
        },
        "cedar.dynamics.NeuralField": {
            "name": "Action-Timeout",
            "activation as output": "false",
            "discrete metric (workaround)": "false",
            "update stepIcon according to output": "true",
            "threshold for updating the stepIcon": "0.80000000000000004",
            "dimensionality": "0",
            "sizes": "",
            "time scale": "100",
            "resting level": "-0.75",
            "input noise gain": "0.10000000000000001",
            "multiplicative noise (input)": "false",
            "multiplicative noise (activation)": "false",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0",
                "beta": "100"
            },
            "global inhibition": "0",
            "lateral kernels": {
                "cedar.aux.kernel.Box": {
                    "dimensionality": "1",
                    "anchor": [
                        "0"
                    ],
                    "amplitude": "1",
                    "widths": [
                        "1"
                    ]
                }
            },
            "lateral kernel convolution": {
                "borderType": "Zero",
                "mode": "Same",
                "engine": {
                    "type": "cedar.aux.conv.OpenCV"
                },
                "alternate even kernel center": "false"
            },
            "noise correlation kernel": {
                "dimensionality": "1",
                "anchor": [
                    "0"
                ],
                "amplitude": "0",
                "sigmas": [
                    "3"
                ],
                "normalize": "true",
                "shifts": [
                    "0"
                ],
                "limit": "5"
            },
            "comments": ""
        },
        "cedar.dynamics.NeuralField": {
            "name": "Action-Working-Memory",
            "activation as output": "false",
            "discrete metric (workaround)": "true",
            "update stepIcon according to output": "true",
            "threshold for updating the stepIcon": "0.80000000000000004",
            "dimensionality": "1",
            "sizes": [
                "3"
            ],
            "time scale": "100",
            "resting level": "-0.75",
            "input noise gain": "0.10000000000000001",
            "multiplicative noise (input)": "false",
            "multiplicative noise (activation)": "false",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0",
                "beta": "100"
            },
            "global inhibition": "0",
            "lateral kernels": {
                "cedar.aux.kernel.Gauss": {
                    "dimensionality": "1",
                    "anchor": [
                        "0"
                    ],
                    "amplitude": "1",
                    "sigmas": [
                        "0.01"
                    ],
                    "normalize": "true",
                    "shifts": [
                        "0"
                    ],
                    "limit": "5"
                }
            },
            "lateral kernel convolution": {
                "borderType": "Zero",
                "mode": "Same",
                "engine": {
                    "type": "cedar.aux.conv.OpenCV"
                },
                "alternate even kernel center": "false"
            },
            "noise correlation kernel": {
                "dimensionality": "1",
                "anchor": [
                    "0"
                ],
                "amplitude": "0",
                "sigmas": [
                    "3"
                ],
                "normalize": "true",
                "shifts": [
                    "0"
                ],
                "limit": "5"
            },
            "comments": ""
        },
        "cedar.dynamics.NeuralField": {
            "name": "Action1-Match",
            "activation as output": "false",
            "discrete metric (workaround)": "true",
            "update stepIcon according to output": "true",
            "threshold for updating the stepIcon": "0.80000000000000004",
            "dimensionality": "1",
            "sizes": [
                "3"
            ],
            "time scale": "100",
            "resting level": "-1.75",
            "input noise gain": "0.10000000000000001",
            "multiplicative noise (input)": "false",
            "multiplicative noise (activation)": "false",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0",
                "beta": "100"
            },
            "global inhibition": "0",
            "lateral kernels": "",
            "lateral kernel convolution": {
                "borderType": "Zero",
                "mode": "Same",
                "engine": {
                    "type": "cedar.aux.conv.OpenCV"
                },
                "alternate even kernel center": "false"
            },
            "noise correlation kernel": {
                "dimensionality": "1",
                "anchor": [
                    "0"
                ],
                "amplitude": "0",
                "sigmas": [
                    "3"
                ],
                "normalize": "true",
                "shifts": [
                    "0"
                ],
                "limit": "5"
            },
            "comments": ""
        },
        "cedar.dynamics.NeuralField": {
            "name": "Action2-Match",
            "activation as output": "false",
            "discrete metric (workaround)": "false",
            "update stepIcon according to output": "true",
            "threshold for updating the stepIcon": "0.80000000000000004",
            "dimensionality": "1",
            "sizes": [
                "3"
            ],
            "time scale": "100",
            "resting level": "-1.75",
            "input noise gain": "0.10000000000000001",
            "multiplicative noise (input)": "false",
            "multiplicative noise (activation)": "false",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0",
                "beta": "100"
            },
            "global inhibition": "0",
            "lateral kernels": "",
            "lateral kernel convolution": {
                "borderType": "Zero",
                "mode": "Same",
                "engine": {
                    "type": "cedar.aux.conv.OpenCV"
                },
                "alternate even kernel center": "false"
            },
            "noise correlation kernel": {
                "dimensionality": "1",
                "anchor": [
                    "0"
                ],
                "amplitude": "0",
                "sigmas": [
                    "3"
                ],
                "normalize": "true",
                "shifts": [
                    "0"
                ],
                "limit": "5"
            },
            "comments": ""
        },
        "cedar.dynamics.NeuralField": {
            "name": "Action3-Match",
            "activation as output": "false",
            "discrete metric (workaround)": "false",
            "update stepIcon according to output": "true",
            "threshold for updating the stepIcon": "0.80000000000000004",
            "dimensionality": "1",
            "sizes": [
                "3"
            ],
            "time scale": "100",
            "resting level": "-1.75",
            "input noise gain": "0.10000000000000001",
            "multiplicative noise (input)": "false",
            "multiplicative noise (activation)": "false",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0",
                "beta": "100"
            },
            "global inhibition": "0",
            "lateral kernels": "",
            "lateral kernel convolution": {
                "borderType": "Zero",
                "mode": "Same",
                "engine": {
                    "type": "cedar.aux.conv.OpenCV"
                },
                "alternate even kernel center": "false"
            },
            "noise correlation kernel": {
                "dimensionality": "1",
                "anchor": [
                    "0"
                ],
                "amplitude": "0",
                "sigmas": [
                    "3"
                ],
                "normalize": "true",
                "shifts": [
                    "0"
                ],
                "limit": "5"
            },
            "comments": ""
        },
        "cedar.dynamics.NeuralField": {
            "name": "Attention-Color-Binding-Field",
            "activation as output": "false",
            "discrete metric (workaround)": "false",
            "update stepIcon according to output": "true",
            "threshold for updating the stepIcon": "0.80000000000000004",
            "dimensionality": "2",
            "sizes": [
                "20",
                "52"
            ],
            "time scale": "100",
            "resting level": "-1.75",
            "input noise gain": "0.10000000000000001",
            "multiplicative noise (input)": "false",
            "multiplicative noise (activation)": "false",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0",
                "beta": "100"
            },
            "global inhibition": "0",
            "lateral kernels": "",
            "lateral kernel convolution": {
                "borderType": "Cyclic",
                "mode": "Same",
                "engine": {
                    "type": "cedar.aux.conv.OpenCV"
                },
                "alternate even kernel center": "false"
            },
            "noise correlation kernel": {
                "dimensionality": "2",
                "anchor": [
                    "0",
                    "0"
                ],
                "amplitude": "0",
                "sigmas": [
                    "3",
                    "3"
                ],
                "normalize": "true",
                "shifts": [
                    "0",
                    "0"
                ],
                "limit": "5"
            },
            "comments": ""
        },
        "cedar.dynamics.NeuralField": {
            "name": "Belief-Active",
            "activation as output": "false",
            "discrete metric (workaround)": "false",
            "update stepIcon according to output": "true",
            "threshold for updating the stepIcon": "0.80000000000000004",
            "dimensionality": "0",
            "sizes": "",
            "time scale": "600",
            "resting level": "-0.75",
            "input noise gain": "0.10000000000000001",
            "multiplicative noise (input)": "false",
            "multiplicative noise (activation)": "false",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0",
                "beta": "100"
            },
            "global inhibition": "0",
            "lateral kernels": "",
            "lateral kernel convolution": {
                "borderType": "Zero",
                "mode": "Same",
                "engine": {
                    "type": "cedar.aux.conv.OpenCV"
                },
                "alternate even kernel center": "false"
            },
            "noise correlation kernel": {
                "dimensionality": "1",
                "anchor": [
                    "0"
                ],
                "amplitude": "0",
                "sigmas": [
                    "3"
                ],
                "normalize": "true",
                "shifts": [
                    "0"
                ],
                "limit": "5"
            },
            "comments": ""
        },
        "cedar.processing.sources.Boost": {
            "name": "Belief-Boost",
            "strength": "1",
            "active": "true",
            "deactivate on reset": "false",
            "comments": ""
        },
        "cedar.dynamics.NeuralField": {
            "name": "Belief-Network-Node",
            "activation as output": "false",
            "discrete metric (workaround)": "false",
            "update stepIcon according to output": "true",
            "threshold for updating the stepIcon": "0.80000000000000004",
            "dimensionality": "0",
            "sizes": "",
            "time scale": "100",
            "resting level": "-0.75",
            "input noise gain": "0.10000000000000001",
            "multiplicative noise (input)": "false",
            "multiplicative noise (activation)": "false",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0",
                "beta": "100"
            },
            "global inhibition": "0",
            "lateral kernels": {
                "cedar.aux.kernel.Box": {
                    "dimensionality": "1",
                    "anchor": [
                        "0"
                    ],
                    "amplitude": "1",
                    "widths": [
                        "1"
                    ]
                }
            },
            "lateral kernel convolution": {
                "borderType": "Zero",
                "mode": "Same",
                "engine": {
                    "type": "cedar.aux.conv.OpenCV"
                },
                "alternate even kernel center": "false"
            },
            "noise correlation kernel": {
                "dimensionality": "1",
                "anchor": [
                    "0"
                ],
                "amplitude": "0",
                "sigmas": [
                    "3"
                ],
                "normalize": "true",
                "shifts": [
                    "0"
                ],
                "limit": "5"
            },
            "comments": ""
        },
        "cedar.dynamics.NeuralField": {
            "name": "Belief-Node 1",
            "activation as output": "false",
            "discrete metric (workaround)": "false",
            "update stepIcon according to output": "true",
            "threshold for updating the stepIcon": "0.80000000000000004",
            "dimensionality": "0",
            "sizes": "",
            "time scale": "100",
            "resting level": "-0.01",
            "input noise gain": "0",
            "multiplicative noise (input)": "false",
            "multiplicative noise (activation)": "false",
            "sigmoid": {
                "type": "cedar.aux.math.HeavisideSigmoid",
                "threshold": "0"
            },
            "global inhibition": "0",
            "lateral kernels": "",
            "lateral kernel convolution": {
                "borderType": "Zero",
                "mode": "Same",
                "engine": {
                    "type": "cedar.aux.conv.OpenCV"
                },
                "alternate even kernel center": "false"
            },
            "noise correlation kernel": {
                "dimensionality": "1",
                "anchor": [
                    "0"
                ],
                "amplitude": "0",
                "sigmas": [
                    "3"
                ],
                "normalize": "true",
                "shifts": [
                    "0"
                ],
                "limit": "5"
            },
            "comments": ""
        },
        "cedar.dynamics.NeuralField": {
            "name": "Belief-Node 2",
            "activation as output": "false",
            "discrete metric (workaround)": "false",
            "update stepIcon according to output": "true",
            "threshold for updating the stepIcon": "0.80000000000000004",
            "dimensionality": "0",
            "sizes": "",
            "time scale": "100",
            "resting level": "-0.01",
            "input noise gain": "0",
            "multiplicative noise (input)": "false",
            "multiplicative noise (activation)": "false",
            "sigmoid": {
                "type": "cedar.aux.math.HeavisideSigmoid",
                "threshold": "0"
            },
            "global inhibition": "0",
            "lateral kernels": "",
            "lateral kernel convolution": {
                "borderType": "Zero",
                "mode": "Same",
                "engine": {
                    "type": "cedar.aux.conv.OpenCV"
                },
                "alternate even kernel center": "false"
            },
            "noise correlation kernel": {
                "dimensionality": "1",
                "anchor": [
                    "0"
                ],
                "amplitude": "0",
                "sigmas": [
                    "3"
                ],
                "normalize": "true",
                "shifts": [
                    "0"
                ],
                "limit": "5"
            },
            "comments": ""
        },
        "cedar.dynamics.NeuralField": {
            "name": "Belief-Node 3",
            "activation as output": "false",
            "discrete metric (workaround)": "false",
            "update stepIcon according to output": "true",
            "threshold for updating the stepIcon": "0.80000000000000004",
            "dimensionality": "0",
            "sizes": "",
            "time scale": "100",
            "resting level": "-0.01",
            "input noise gain": "0",
            "multiplicative noise (input)": "false",
            "multiplicative noise (activation)": "false",
            "sigmoid": {
                "type": "cedar.aux.math.HeavisideSigmoid",
                "threshold": "0"
            },
            "global inhibition": "0",
            "lateral kernels": "",
            "lateral kernel convolution": {
                "borderType": "Zero",
                "mode": "Same",
                "engine": {
                    "type": "cedar.aux.conv.OpenCV"
                },
                "alternate even kernel center": "false"
            },
            "noise correlation kernel": {
                "dimensionality": "1",
                "anchor": [
                    "0"
                ],
                "amplitude": "0",
                "sigmas": [
                    "3"
                ],
                "normalize": "true",
                "shifts": [
                    "0"
                ],
                "limit": "5"
            },
            "comments": ""
        },
        "cedar.dynamics.NeuralField": {
            "name": "Belief-Node 4",
            "activation as output": "false",
            "discrete metric (workaround)": "false",
            "update stepIcon according to output": "true",
            "threshold for updating the stepIcon": "0.80000000000000004",
            "dimensionality": "0",
            "sizes": "",
            "time scale": "100",
            "resting level": "-0.01",
            "input noise gain": "0",
            "multiplicative noise (input)": "false",
            "multiplicative noise (activation)": "false",
            "sigmoid": {
                "type": "cedar.aux.math.HeavisideSigmoid",
                "threshold": "0"
            },
            "global inhibition": "0",
            "lateral kernels": "",
            "lateral kernel convolution": {
                "borderType": "Zero",
                "mode": "Same",
                "engine": {
                    "type": "cedar.aux.conv.OpenCV"
                },
                "alternate even kernel center": "false"
            },
            "noise correlation kernel": {
                "dimensionality": "1",
                "anchor": [
                    "0"
                ],
                "amplitude": "0",
                "sigmas": [
                    "3"
                ],
                "normalize": "true",
                "shifts": [
                    "0"
                ],
                "limit": "5"
            },
            "comments": ""
        },
        "cedar.dynamics.NeuralField": {
            "name": "Belief-Node 5",
            "activation as output": "false",
            "discrete metric (workaround)": "false",
            "update stepIcon according to output": "true",
            "threshold for updating the stepIcon": "0.80000000000000004",
            "dimensionality": "0",
            "sizes": "",
            "time scale": "100",
            "resting level": "-0.01",
            "input noise gain": "0",
            "multiplicative noise (input)": "false",
            "multiplicative noise (activation)": "false",
            "sigmoid": {
                "type": "cedar.aux.math.HeavisideSigmoid",
                "threshold": "0"
            },
            "global inhibition": "0",
            "lateral kernels": "",
            "lateral kernel convolution": {
                "borderType": "Zero",
                "mode": "Same",
                "engine": {
                    "type": "cedar.aux.conv.OpenCV"
                },
                "alternate even kernel center": "false"
            },
            "noise correlation kernel": {
                "dimensionality": "1",
                "anchor": [
                    "0"
                ],
                "amplitude": "0",
                "sigmas": [
                    "3"
                ],
                "normalize": "true",
                "shifts": [
                    "0"
                ],
                "limit": "5"
            },
            "comments": ""
        },
        "cedar.dynamics.NeuralField": {
            "name": "Belief-Node 6",
            "activation as output": "false",
            "discrete metric (workaround)": "false",
            "update stepIcon according to output": "true",
            "threshold for updating the stepIcon": "0.80000000000000004",
            "dimensionality": "0",
            "sizes": "",
            "time scale": "100",
            "resting level": "-0.01",
            "input noise gain": "0",
            "multiplicative noise (input)": "false",
            "multiplicative noise (activation)": "false",
            "sigmoid": {
                "type": "cedar.aux.math.HeavisideSigmoid",
                "threshold": "0"
            },
            "global inhibition": "0",
            "lateral kernels": "",
            "lateral kernel convolution": {
                "borderType": "Zero",
                "mode": "Same",
                "engine": {
                    "type": "cedar.aux.conv.OpenCV"
                },
                "alternate even kernel center": "false"
            },
            "noise correlation kernel": {
                "dimensionality": "1",
                "anchor": [
                    "0"
                ],
                "amplitude": "0",
                "sigmas": [
                    "3"
                ],
                "normalize": "true",
                "shifts": [
                    "0"
                ],
                "limit": "5"
            },
            "comments": ""
        },
        "cedar.processing.sources.TCPReader": {
            "name": "Camera TCP Reader",
            "buffer size": "32768",
            "port": "50020",
            "packet timeout (ms)": "500",
            "message timeout (ms)": "50",
            "accept interval (steps)": "30",
            "comments": ""
        },
        "cedar.processing.steps.ChannelSplit": {
            "name": "Channel Split",
            "comments": ""
        },
        "cedar.dynamics.NeuralField": {
            "name": "CoS-Action1",
            "activation as output": "false",
            "discrete metric (workaround)": "false",
            "update stepIcon according to output": "true",
            "threshold for updating the stepIcon": "0.80000000000000004",
            "dimensionality": "0",
            "sizes": "",
            "time scale": "100",
            "resting level": "-1.75",
            "input noise gain": "0.10000000000000001",
            "multiplicative noise (input)": "false",
            "multiplicative noise (activation)": "false",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0",
                "beta": "100"
            },
            "global inhibition": "0",
            "lateral kernels": {
                "cedar.aux.kernel.Box": {
                    "dimensionality": "1",
                    "anchor": [
                        "0"
                    ],
                    "amplitude": "1",
                    "widths": [
                        "5"
                    ]
                }
            },
            "lateral kernel convolution": {
                "borderType": "Zero",
                "mode": "Same",
                "engine": {
                    "type": "cedar.aux.conv.OpenCV"
                },
                "alternate even kernel center": "false"
            },
            "noise correlation kernel": {
                "dimensionality": "1",
                "anchor": [
                    "0"
                ],
                "amplitude": "0",
                "sigmas": [
                    "3"
                ],
                "normalize": "true",
                "shifts": [
                    "0"
                ],
                "limit": "5"
            },
            "comments": ""
        },
        "cedar.dynamics.NeuralField": {
            "name": "CoS-Action2",
            "activation as output": "false",
            "discrete metric (workaround)": "false",
            "update stepIcon according to output": "true",
            "threshold for updating the stepIcon": "0.80000000000000004",
            "dimensionality": "0",
            "sizes": "",
            "time scale": "100",
            "resting level": "-1.75",
            "input noise gain": "0.10000000000000001",
            "multiplicative noise (input)": "false",
            "multiplicative noise (activation)": "false",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0",
                "beta": "100"
            },
            "global inhibition": "0",
            "lateral kernels": {
                "cedar.aux.kernel.Box": {
                    "dimensionality": "1",
                    "anchor": [
                        "0"
                    ],
                    "amplitude": "1",
                    "widths": [
                        "5"
                    ]
                }
            },
            "lateral kernel convolution": {
                "borderType": "Zero",
                "mode": "Same",
                "engine": {
                    "type": "cedar.aux.conv.OpenCV"
                },
                "alternate even kernel center": "false"
            },
            "noise correlation kernel": {
                "dimensionality": "1",
                "anchor": [
                    "0"
                ],
                "amplitude": "0",
                "sigmas": [
                    "3"
                ],
                "normalize": "true",
                "shifts": [
                    "0"
                ],
                "limit": "5"
            },
            "comments": ""
        },
        "cedar.dynamics.NeuralField": {
            "name": "CoS-Action3",
            "activation as output": "false",
            "discrete metric (workaround)": "false",
            "update stepIcon according to output": "true",
            "threshold for updating the stepIcon": "0.80000000000000004",
            "dimensionality": "0",
            "sizes": "",
            "time scale": "100",
            "resting level": "-1.75",
            "input noise gain": "0.10000000000000001",
            "multiplicative noise (input)": "false",
            "multiplicative noise (activation)": "false",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0",
                "beta": "100"
            },
            "global inhibition": "0",
            "lateral kernels": {
                "cedar.aux.kernel.Box": {
                    "dimensionality": "1",
                    "anchor": [
                        "0"
                    ],
                    "amplitude": "1",
                    "widths": [
                        "5"
                    ]
                }
            },
            "lateral kernel convolution": {
                "borderType": "Zero",
                "mode": "Same",
                "engine": {
                    "type": "cedar.aux.conv.OpenCV"
                },
                "alternate even kernel center": "false"
            },
            "noise correlation kernel": {
                "dimensionality": "1",
                "anchor": [
                    "0"
                ],
                "amplitude": "0",
                "sigmas": [
                    "3"
                ],
                "normalize": "true",
                "shifts": [
                    "0"
                ],
                "limit": "5"
            },
            "comments": ""
        },
        "cedar.dynamics.NeuralField": {
            "name": "CoS-Break",
            "activation as output": "false",
            "discrete metric (workaround)": "false",
            "update stepIcon according to output": "true",
            "threshold for updating the stepIcon": "0.80000000000000004",
            "dimensionality": "0",
            "sizes": "",
            "time scale": "100",
            "resting level": "-1.75",
            "input noise gain": "0.10000000000000001",
            "multiplicative noise (input)": "false",
            "multiplicative noise (activation)": "false",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0",
                "beta": "100"
            },
            "global inhibition": "0",
            "lateral kernels": "",
            "lateral kernel convolution": {
                "borderType": "Zero",
                "mode": "Same",
                "engine": {
                    "type": "cedar.aux.conv.OpenCV"
                },
                "alternate even kernel center": "false"
            },
            "noise correlation kernel": {
                "dimensionality": "1",
                "anchor": [
                    "0"
                ],
                "amplitude": "0",
                "sigmas": [
                    "3"
                ],
                "normalize": "true",
                "shifts": [
                    "0"
                ],
                "limit": "5"
            },
            "comments": ""
        },
        "cedar.dynamics.NeuralField": {
            "name": "CoS-Color In Attention",
            "activation as output": "false",
            "discrete metric (workaround)": "false",
            "update stepIcon according to output": "true",
            "threshold for updating the stepIcon": "0.80000000000000004",
            "dimensionality": "0",
            "sizes": "",
            "time scale": "100",
            "resting level": "-1.75",
            "input noise gain": "0.10000000000000001",
            "multiplicative noise (input)": "false",
            "multiplicative noise (activation)": "false",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0",
                "beta": "100"
            },
            "global inhibition": "0",
            "lateral kernels": "",
            "lateral kernel convolution": {
                "borderType": "Zero",
                "mode": "Same",
                "engine": {
                    "type": "cedar.aux.conv.OpenCV"
                },
                "alternate even kernel center": "false"
            },
            "noise correlation kernel": {
                "dimensionality": "1",
                "anchor": [
                    "0"
                ],
                "amplitude": "0",
                "sigmas": [
                    "3"
                ],
                "normalize": "true",
                "shifts": [
                    "0"
                ],
                "limit": "5"
            },
            "comments": ""
        },
        "cedar.dynamics.NeuralField": {
            "name": "CoS-Is In Front Of",
            "activation as output": "false",
            "discrete metric (workaround)": "false",
            "update stepIcon according to output": "true",
            "threshold for updating the stepIcon": "0.80000000000000004",
            "dimensionality": "0",
            "sizes": "",
            "time scale": "100",
            "resting level": "-1.75",
            "input noise gain": "0.10000000000000001",
            "multiplicative noise (input)": "false",
            "multiplicative noise (activation)": "false",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0",
                "beta": "100"
            },
            "global inhibition": "0",
            "lateral kernels": "",
            "lateral kernel convolution": {
                "borderType": "Zero",
                "mode": "Same",
                "engine": {
                    "type": "cedar.aux.conv.OpenCV"
                },
                "alternate even kernel center": "false"
            },
            "noise correlation kernel": {
                "dimensionality": "1",
                "anchor": [
                    "0"
                ],
                "amplitude": "0",
                "sigmas": [
                    "3"
                ],
                "normalize": "true",
                "shifts": [
                    "0"
                ],
                "limit": "5"
            },
            "comments": ""
        },
        "cedar.dynamics.NeuralField": {
            "name": "CoS-Orient To Object",
            "activation as output": "false",
            "discrete metric (workaround)": "false",
            "update stepIcon according to output": "true",
            "threshold for updating the stepIcon": "0.80000000000000004",
            "dimensionality": "0",
            "sizes": "",
            "time scale": "100",
            "resting level": "-1.75",
            "input noise gain": "0.10000000000000001",
            "multiplicative noise (input)": "false",
            "multiplicative noise (activation)": "false",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0",
                "beta": "100"
            },
            "global inhibition": "0",
            "lateral kernels": "",
            "lateral kernel convolution": {
                "borderType": "Zero",
                "mode": "Same",
                "engine": {
                    "type": "cedar.aux.conv.OpenCV"
                },
                "alternate even kernel center": "false"
            },
            "noise correlation kernel": {
                "dimensionality": "1",
                "anchor": [
                    "0"
                ],
                "amplitude": "0",
                "sigmas": [
                    "3"
                ],
                "normalize": "true",
                "shifts": [
                    "0"
                ],
                "limit": "5"
            },
            "comments": ""
        },
        "cedar.dynamics.NeuralField": {
            "name": "CoS-Timer",
            "activation as output": "false",
            "discrete metric (workaround)": "false",
            "update stepIcon according to output": "true",
            "threshold for updating the stepIcon": "0.80000000000000004",
            "dimensionality": "0",
            "sizes": "",
            "time scale": "5000",
            "resting level": "-0.75",
            "input noise gain": "0.10000000000000001",
            "multiplicative noise (input)": "false",
            "multiplicative noise (activation)": "false",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0",
                "beta": "100"
            },
            "global inhibition": "0",
            "lateral kernels": "",
            "lateral kernel convolution": {
                "borderType": "Zero",
                "mode": "Same",
                "engine": {
                    "type": "cedar.aux.conv.OpenCV"
                },
                "alternate even kernel center": "false"
            },
            "noise correlation kernel": {
                "dimensionality": "1",
                "anchor": [
                    "0"
                ],
                "amplitude": "0",
                "sigmas": [
                    "3"
                ],
                "normalize": "true",
                "shifts": [
                    "0"
                ],
                "limit": "5"
            },
            "comments": ""
        },
        "cedar.dynamics.NeuralField": {
            "name": "CoS-loaded-strategy",
            "activation as output": "false",
            "discrete metric (workaround)": "false",
            "update stepIcon according to output": "true",
            "threshold for updating the stepIcon": "0.80000000000000004",
            "dimensionality": "0",
            "sizes": "",
            "time scale": "100",
            "resting level": "-1.75",
            "input noise gain": "0.10000000000000001",
            "multiplicative noise (input)": "false",
            "multiplicative noise (activation)": "false",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0",
                "beta": "100"
            },
            "global inhibition": "0",
            "lateral kernels": "",
            "lateral kernel convolution": {
                "borderType": "Zero",
                "mode": "Same",
                "engine": {
                    "type": "cedar.aux.conv.OpenCV"
                },
                "alternate even kernel center": "false"
            },
            "noise correlation kernel": {
                "dimensionality": "1",
                "anchor": [
                    "0"
                ],
                "amplitude": "0",
                "sigmas": [
                    "3"
                ],
                "normalize": "true",
                "shifts": [
                    "0"
                ],
                "limit": "5"
            },
            "comments": ""
        },
        "cedar.processing.steps.ColorConversion": {
            "name": "Color Conversion",
            "source type": "BGR",
            "target type": "HSV",
            "comments": ""
        },
        "cedar.dynamics.NeuralField": {
            "name": "Color Role Field",
            "activation as output": "false",
            "discrete metric (workaround)": "true",
            "update stepIcon according to output": "true",
            "threshold for updating the stepIcon": "0.80000000000000004",
            "dimensionality": "1",
            "sizes": [
                "6"
            ],
            "time scale": "100",
            "resting level": "-2.25",
            "input noise gain": "0.10000000000000001",
            "multiplicative noise (input)": "false",
            "multiplicative noise (activation)": "false",
            "sigmoid": {
                "type": "cedar.aux.math.HeavisideSigmoid",
                "threshold": "0"
            },
            "global inhibition": "-0.5",
            "lateral kernels": {
                "cedar.aux.kernel.Gauss": {
                    "dimensionality": "1",
                    "anchor": [
                        "0"
                    ],
                    "amplitude": "0.50000000000000011",
                    "sigmas": [
                        "0.01"
                    ],
                    "normalize": "true",
                    "shifts": [
                        "0"
                    ],
                    "limit": "5"
                }
            },
            "lateral kernel convolution": {
                "borderType": "Zero",
                "mode": "Same",
                "engine": {
                    "type": "cedar.aux.conv.OpenCV"
                },
                "alternate even kernel center": "false"
            },
            "noise correlation kernel": {
                "dimensionality": "1",
                "anchor": [
                    "0"
                ],
                "amplitude": "0",
                "sigmas": [
                    "3"
                ],
                "normalize": "true",
                "shifts": [
                    "0"
                ],
                "limit": "5"
            },
            "comments": ""
        },
        "cedar.dynamics.NeuralField": {
            "name": "Color-Attention-Field",
            "activation as output": "false",
            "discrete metric (workaround)": "false",
            "update stepIcon according to output": "true",
            "threshold for updating the stepIcon": "0.80000000000000004",
            "dimensionality": "1",
            "sizes": [
                "20"
            ],
            "time scale": "100",
            "resting level": "-2.75",
            "input noise gain": "0.10000000000000001",
            "multiplicative noise (input)": "false",
            "multiplicative noise (activation)": "false",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0",
                "beta": "100"
            },
            "global inhibition": "-0.50000000000000022",
            "lateral kernels": {
                "cedar.aux.kernel.Gauss": {
                    "dimensionality": "1",
                    "anchor": [
                        "0"
                    ],
                    "amplitude": "1.5",
                    "sigmas": [
                        "1"
                    ],
                    "normalize": "true",
                    "shifts": [
                        "0"
                    ],
                    "limit": "5"
                }
            },
            "lateral kernel convolution": {
                "borderType": "Cyclic",
                "mode": "Same",
                "engine": {
                    "type": "cedar.aux.conv.OpenCV"
                },
                "alternate even kernel center": "false"
            },
            "noise correlation kernel": {
                "dimensionality": "1",
                "anchor": [
                    "0"
                ],
                "amplitude": "0",
                "sigmas": [
                    "3"
                ],
                "normalize": "true",
                "shifts": [
                    "0"
                ],
                "limit": "5"
            },
            "comments": ""
        },
        "cedar.dynamics.NeuralField": {
            "name": "Color-Change-Detection",
            "activation as output": "false",
            "discrete metric (workaround)": "true",
            "update stepIcon according to output": "true",
            "threshold for updating the stepIcon": "0.80000000000000004",
            "dimensionality": "1",
            "sizes": [
                "6"
            ],
            "time scale": "100",
            "resting level": "-0.75",
            "input noise gain": "0.10000000000000001",
            "multiplicative noise (input)": "false",
            "multiplicative noise (activation)": "false",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0",
                "beta": "100"
            },
            "global inhibition": "0",
            "lateral kernels": "",
            "lateral kernel convolution": {
                "borderType": "Zero",
                "mode": "Same",
                "engine": {
                    "type": "cedar.aux.conv.OpenCV"
                },
                "alternate even kernel center": "false"
            },
            "noise correlation kernel": {
                "dimensionality": "1",
                "anchor": [
                    "0"
                ],
                "amplitude": "0",
                "sigmas": [
                    "3"
                ],
                "normalize": "true",
                "shifts": [
                    "0"
                ],
                "limit": "5"
            },
            "comments": ""
        },
        "cedar.dynamics.NeuralField": {
            "name": "Color-Change-Inhibition",
            "activation as output": "false",
            "discrete metric (workaround)": "true",
            "update stepIcon according to output": "true",
            "threshold for updating the stepIcon": "0.80000000000000004",
            "dimensionality": "1",
            "sizes": [
                "6"
            ],
            "time scale": "2000",
            "resting level": "-0.75",
            "input noise gain": "0.10000000000000001",
            "multiplicative noise (input)": "false",
            "multiplicative noise (activation)": "false",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0",
                "beta": "100"
            },
            "global inhibition": "0",
            "lateral kernels": "",
            "lateral kernel convolution": {
                "borderType": "Zero",
                "mode": "Same",
                "engine": {
                    "type": "cedar.aux.conv.OpenCV"
                },
                "alternate even kernel center": "false"
            },
            "noise correlation kernel": {
                "dimensionality": "1",
                "anchor": [
                    "0"
                ],
                "amplitude": "0",
                "sigmas": [
                    "3"
                ],
                "normalize": "true",
                "shifts": [
                    "0"
                ],
                "limit": "5"
            },
            "comments": ""
        },
        "cedar.dynamics.NeuralField": {
            "name": "Color-Memory",
            "activation as output": "false",
            "discrete metric (workaround)": "true",
            "update stepIcon according to output": "true",
            "threshold for updating the stepIcon": "0.80000000000000004",
            "dimensionality": "1",
            "sizes": [
                "6"
            ],
            "time scale": "100",
            "resting level": "-0.75",
            "input noise gain": "0.10000000000000001",
            "multiplicative noise (input)": "false",
            "multiplicative noise (activation)": "false",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0",
                "beta": "100"
            },
            "global inhibition": "0",
            "lateral kernels": {
                "cedar.aux.kernel.Gauss": {
                    "dimensionality": "1",
                    "anchor": [
                        "0"
                    ],
                    "amplitude": "1",
                    "sigmas": [
                        "0.01"
                    ],
                    "normalize": "true",
                    "shifts": [
                        "0"
                    ],
                    "limit": "5"
                }
            },
            "lateral kernel convolution": {
                "borderType": "Zero",
                "mode": "Same",
                "engine": {
                    "type": "cedar.aux.conv.OpenCV"
                },
                "alternate even kernel center": "false"
            },
            "noise correlation kernel": {
                "dimensionality": "1",
                "anchor": [
                    "0"
                ],
                "amplitude": "0",
                "sigmas": [
                    "3"
                ],
                "normalize": "true",
                "shifts": [
                    "0"
                ],
                "limit": "5"
            },
            "comments": ""
        },
        "cedar.dynamics.NeuralField": {
            "name": "Color-Recall-CoD",
            "activation as output": "false",
            "discrete metric (workaround)": "false",
            "update stepIcon according to output": "true",
            "threshold for updating the stepIcon": "0.80000000000000004",
            "dimensionality": "0",
            "sizes": "",
            "time scale": "400",
            "resting level": "-0.75",
            "input noise gain": "0.10000000000000001",
            "multiplicative noise (input)": "false",
            "multiplicative noise (activation)": "false",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0",
                "beta": "100"
            },
            "global inhibition": "0",
            "lateral kernels": "",
            "lateral kernel convolution": {
                "borderType": "Zero",
                "mode": "Same",
                "engine": {
                    "type": "cedar.aux.conv.OpenCV"
                },
                "alternate even kernel center": "false"
            },
            "noise correlation kernel": {
                "dimensionality": "1",
                "anchor": [
                    "0"
                ],
                "amplitude": "0",
                "sigmas": [
                    "3"
                ],
                "normalize": "true",
                "shifts": [
                    "0"
                ],
                "limit": "5"
            },
            "comments": ""
        },
        "cedar.dynamics.NeuralField": {
            "name": "Color-Recall-CoS",
            "activation as output": "false",
            "discrete metric (workaround)": "false",
            "update stepIcon according to output": "true",
            "threshold for updating the stepIcon": "0.80000000000000004",
            "dimensionality": "0",
            "sizes": "",
            "time scale": "100",
            "resting level": "-1.75",
            "input noise gain": "0.10000000000000001",
            "multiplicative noise (input)": "false",
            "multiplicative noise (activation)": "false",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0",
                "beta": "100"
            },
            "global inhibition": "0",
            "lateral kernels": "",
            "lateral kernel convolution": {
                "borderType": "Zero",
                "mode": "Same",
                "engine": {
                    "type": "cedar.aux.conv.OpenCV"
                },
                "alternate even kernel center": "false"
            },
            "noise correlation kernel": {
                "dimensionality": "1",
                "anchor": [
                    "0"
                ],
                "amplitude": "0",
                "sigmas": [
                    "3"
                ],
                "normalize": "true",
                "shifts": [
                    "0"
                ],
                "limit": "5"
            },
            "comments": ""
        },
        "cedar.dynamics.NeuralField": {
            "name": "Color-Space-Perception",
            "activation as output": "false",
            "discrete metric (workaround)": "false",
            "update stepIcon according to output": "true",
            "threshold for updating the stepIcon": "0.80000000000000004",
            "dimensionality": "2",
            "sizes": [
                "20",
                "52"
            ],
            "time scale": "100",
            "resting level": "-5",
            "input noise gain": "0.10000000000000001",
            "multiplicative noise (input)": "false",
            "multiplicative noise (activation)": "false",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0",
                "beta": "100"
            },
            "global inhibition": "0",
            "lateral kernels": "",
            "lateral kernel convolution": {
                "borderType": "Cyclic",
                "mode": "Same",
                "engine": {
                    "type": "cedar.aux.conv.OpenCV"
                },
                "alternate even kernel center": "false"
            },
            "noise correlation kernel": {
                "dimensionality": "2",
                "anchor": [
                    "0",
                    "0"
                ],
                "amplitude": "0",
                "sigmas": [
                    "3",
                    "3"
                ],
                "normalize": "true",
                "shifts": [
                    "0",
                    "0"
                ],
                "limit": "5"
            },
            "comments": ""
        },
        "cedar.dynamics.NeuralField": {
            "name": "Color-matching-Field",
            "activation as output": "false",
            "discrete metric (workaround)": "true",
            "update stepIcon according to output": "true",
            "threshold for updating the stepIcon": "0.80000000000000004",
            "dimensionality": "1",
            "sizes": [
                "6"
            ],
            "time scale": "100",
            "resting level": "-1.75",
            "input noise gain": "0.10000000000000001",
            "multiplicative noise (input)": "false",
            "multiplicative noise (activation)": "false",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0",
                "beta": "100"
            },
            "global inhibition": "0",
            "lateral kernels": "",
            "lateral kernel convolution": {
                "borderType": "Cyclic",
                "mode": "Same",
                "engine": {
                    "type": "cedar.aux.conv.OpenCV"
                },
                "alternate even kernel center": "false"
            },
            "noise correlation kernel": {
                "dimensionality": "1",
                "anchor": [
                    "0"
                ],
                "amplitude": "0",
                "sigmas": [
                    "3"
                ],
                "normalize": "true",
                "shifts": [
                    "0"
                ],
                "limit": "5"
            },
            "comments": ""
        },
        "cedar.dynamics.NeuralField": {
            "name": "Color-memory-inhibition",
            "activation as output": "false",
            "discrete metric (workaround)": "true",
            "update stepIcon according to output": "true",
            "threshold for updating the stepIcon": "0.80000000000000004",
            "dimensionality": "1",
            "sizes": [
                "6"
            ],
            "time scale": "2000",
            "resting level": "-0.75",
            "input noise gain": "0.10000000000000001",
            "multiplicative noise (input)": "false",
            "multiplicative noise (activation)": "false",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0",
                "beta": "100"
            },
            "global inhibition": "-0.01",
            "lateral kernels": "",
            "lateral kernel convolution": {
                "borderType": "Zero",
                "mode": "Same",
                "engine": {
                    "type": "cedar.aux.conv.OpenCV"
                },
                "alternate even kernel center": "false"
            },
            "noise correlation kernel": {
                "dimensionality": "1",
                "anchor": [
                    "0"
                ],
                "amplitude": "0",
                "sigmas": [
                    "3"
                ],
                "normalize": "true",
                "shifts": [
                    "0"
                ],
                "limit": "5"
            },
            "comments": ""
        },
        "cedar.dynamics.NeuralField": {
            "name": "Commit Boost",
            "activation as output": "false",
            "discrete metric (workaround)": "false",
            "update stepIcon according to output": "true",
            "threshold for updating the stepIcon": "0.80000000000000004",
            "dimensionality": "0",
            "sizes": "",
            "time scale": "100",
            "resting level": "-0.75",
            "input noise gain": "0.10000000000000001",
            "multiplicative noise (input)": "false",
            "multiplicative noise (activation)": "false",
            "sigmoid": {
                "type": "cedar.aux.math.HeavisideSigmoid",
                "threshold": "0"
            },
            "global inhibition": "0",
            "lateral kernels": "",
            "lateral kernel convolution": {
                "borderType": "Zero",
                "mode": "Same",
                "engine": {
                    "type": "cedar.aux.conv.OpenCV"
                },
                "alternate even kernel center": "false"
            },
            "noise correlation kernel": {
                "dimensionality": "1",
                "anchor": [
                    "0"
                ],
                "amplitude": "0",
                "sigmas": [
                    "3"
                ],
                "normalize": "true",
                "shifts": [
                    "0"
                ],
                "limit": "5"
            },
            "comments": ""
        },
        "cedar.dynamics.NeuralField": {
            "name": "Commit-Node 1",
            "activation as output": "false",
            "discrete metric (workaround)": "false",
            "update stepIcon according to output": "true",
            "threshold for updating the stepIcon": "0.80000000000000004",
            "dimensionality": "0",
            "sizes": "",
            "time scale": "100",
            "resting level": "-1",
            "input noise gain": "0.10000000000000001",
            "multiplicative noise (input)": "false",
            "multiplicative noise (activation)": "false",
            "sigmoid": {
                "type": "cedar.aux.math.HeavisideSigmoid",
                "threshold": "0"
            },
            "global inhibition": "0",
            "lateral kernels": "",
            "lateral kernel convolution": {
                "borderType": "Zero",
                "mode": "Same",
                "engine": {
                    "type": "cedar.aux.conv.OpenCV"
                },
                "alternate even kernel center": "false"
            },
            "noise correlation kernel": {
                "dimensionality": "1",
                "anchor": [
                    "0"
                ],
                "amplitude": "0",
                "sigmas": [
                    "3"
                ],
                "normalize": "true",
                "shifts": [
                    "0"
                ],
                "limit": "5"
            },
            "comments": ""
        },
        "cedar.dynamics.NeuralField": {
            "name": "Commit-Node 2",
            "activation as output": "false",
            "discrete metric (workaround)": "false",
            "update stepIcon according to output": "true",
            "threshold for updating the stepIcon": "0.80000000000000004",
            "dimensionality": "0",
            "sizes": "",
            "time scale": "100",
            "resting level": "-1",
            "input noise gain": "0.10000000000000001",
            "multiplicative noise (input)": "false",
            "multiplicative noise (activation)": "false",
            "sigmoid": {
                "type": "cedar.aux.math.HeavisideSigmoid",
                "threshold": "0"
            },
            "global inhibition": "0",
            "lateral kernels": "",
            "lateral kernel convolution": {
                "borderType": "Zero",
                "mode": "Same",
                "engine": {
                    "type": "cedar.aux.conv.OpenCV"
                },
                "alternate even kernel center": "false"
            },
            "noise correlation kernel": {
                "dimensionality": "1",
                "anchor": [
                    "0"
                ],
                "amplitude": "0",
                "sigmas": [
                    "3"
                ],
                "normalize": "true",
                "shifts": [
                    "0"
                ],
                "limit": "5"
            },
            "comments": ""
        },
        "cedar.dynamics.NeuralField": {
            "name": "Commit-Node 3",
            "activation as output": "false",
            "discrete metric (workaround)": "false",
            "update stepIcon according to output": "true",
            "threshold for updating the stepIcon": "0.80000000000000004",
            "dimensionality": "0",
            "sizes": "",
            "time scale": "100",
            "resting level": "-1",
            "input noise gain": "0.10000000000000001",
            "multiplicative noise (input)": "false",
            "multiplicative noise (activation)": "false",
            "sigmoid": {
                "type": "cedar.aux.math.HeavisideSigmoid",
                "threshold": "0"
            },
            "global inhibition": "0",
            "lateral kernels": "",
            "lateral kernel convolution": {
                "borderType": "Zero",
                "mode": "Same",
                "engine": {
                    "type": "cedar.aux.conv.OpenCV"
                },
                "alternate even kernel center": "false"
            },
            "noise correlation kernel": {
                "dimensionality": "1",
                "anchor": [
                    "0"
                ],
                "amplitude": "0",
                "sigmas": [
                    "3"
                ],
                "normalize": "true",
                "shifts": [
                    "0"
                ],
                "limit": "5"
            },
            "comments": ""
        },
        "cedar.dynamics.NeuralField": {
            "name": "Commit-Node 4",
            "activation as output": "false",
            "discrete metric (workaround)": "false",
            "update stepIcon according to output": "true",
            "threshold for updating the stepIcon": "0.80000000000000004",
            "dimensionality": "0",
            "sizes": "",
            "time scale": "100",
            "resting level": "-1",
            "input noise gain": "0.10000000000000001",
            "multiplicative noise (input)": "false",
            "multiplicative noise (activation)": "false",
            "sigmoid": {
                "type": "cedar.aux.math.HeavisideSigmoid",
                "threshold": "0"
            },
            "global inhibition": "0",
            "lateral kernels": "",
            "lateral kernel convolution": {
                "borderType": "Zero",
                "mode": "Same",
                "engine": {
                    "type": "cedar.aux.conv.OpenCV"
                },
                "alternate even kernel center": "false"
            },
            "noise correlation kernel": {
                "dimensionality": "1",
                "anchor": [
                    "0"
                ],
                "amplitude": "0",
                "sigmas": [
                    "3"
                ],
                "normalize": "true",
                "shifts": [
                    "0"
                ],
                "limit": "5"
            },
            "comments": ""
        },
        "cedar.dynamics.NeuralField": {
            "name": "Commit-Node 5",
            "activation as output": "false",
            "discrete metric (workaround)": "false",
            "update stepIcon according to output": "true",
            "threshold for updating the stepIcon": "0.80000000000000004",
            "dimensionality": "0",
            "sizes": "",
            "time scale": "100",
            "resting level": "-1",
            "input noise gain": "0.10000000000000001",
            "multiplicative noise (input)": "false",
            "multiplicative noise (activation)": "false",
            "sigmoid": {
                "type": "cedar.aux.math.HeavisideSigmoid",
                "threshold": "0"
            },
            "global inhibition": "0",
            "lateral kernels": "",
            "lateral kernel convolution": {
                "borderType": "Zero",
                "mode": "Same",
                "engine": {
                    "type": "cedar.aux.conv.OpenCV"
                },
                "alternate even kernel center": "false"
            },
            "noise correlation kernel": {
                "dimensionality": "1",
                "anchor": [
                    "0"
                ],
                "amplitude": "0",
                "sigmas": [
                    "3"
                ],
                "normalize": "true",
                "shifts": [
                    "0"
                ],
                "limit": "5"
            },
            "comments": ""
        },
        "cedar.dynamics.NeuralField": {
            "name": "Commit-Node 6",
            "activation as output": "false",
            "discrete metric (workaround)": "false",
            "update stepIcon according to output": "true",
            "threshold for updating the stepIcon": "0.80000000000000004",
            "dimensionality": "0",
            "sizes": "",
            "time scale": "100",
            "resting level": "-1",
            "input noise gain": "0.10000000000000001",
            "multiplicative noise (input)": "false",
            "multiplicative noise (activation)": "false",
            "sigmoid": {
                "type": "cedar.aux.math.HeavisideSigmoid",
                "threshold": "0"
            },
            "global inhibition": "0",
            "lateral kernels": "",
            "lateral kernel convolution": {
                "borderType": "Zero",
                "mode": "Same",
                "engine": {
                    "type": "cedar.aux.conv.OpenCV"
                },
                "alternate even kernel center": "false"
            },
            "noise correlation kernel": {
                "dimensionality": "1",
                "anchor": [
                    "0"
                ],
                "amplitude": "0",
                "sigmas": [
                    "3"
                ],
                "normalize": "true",
                "shifts": [
                    "0"
                ],
                "limit": "5"
            },
            "comments": ""
        },
        "cedar.processing.ComponentMultiply": {
            "name": "Component Multiply",
            "comments": ""
        },
        "cedar.processing.ComponentMultiply": {
            "name": "Component Multiply 10",
            "comments": ""
        },
        "cedar.processing.ComponentMultiply": {
            "name": "Component Multiply 11",
            "comments": ""
        },
        "cedar.processing.ComponentMultiply": {
            "name": "Component Multiply 12",
            "comments": ""
        },
        "cedar.processing.ComponentMultiply": {
            "name": "Component Multiply 13",
            "comments": ""
        },
        "cedar.processing.ComponentMultiply": {
            "name": "Component Multiply 14",
            "comments": ""
        },
        "cedar.processing.ComponentMultiply": {
            "name": "Component Multiply 15",
            "comments": ""
        },
        "cedar.processing.ComponentMultiply": {
            "name": "Component Multiply 16",
            "comments": ""
        },
        "cedar.processing.ComponentMultiply": {
            "name": "Component Multiply 17",
            "comments": ""
        },
        "cedar.processing.ComponentMultiply": {
            "name": "Component Multiply 18",
            "comments": ""
        },
        "cedar.processing.ComponentMultiply": {
            "name": "Component Multiply 19",
            "comments": ""
        },
        "cedar.processing.ComponentMultiply": {
            "name": "Component Multiply 2",
            "comments": ""
        },
        "cedar.processing.ComponentMultiply": {
            "name": "Component Multiply 20",
            "comments": ""
        },
        "cedar.processing.ComponentMultiply": {
            "name": "Component Multiply 21",
            "comments": ""
        },
        "cedar.processing.ComponentMultiply": {
            "name": "Component Multiply 22",
            "comments": ""
        },
        "cedar.processing.ComponentMultiply": {
            "name": "Component Multiply 23",
            "comments": ""
        },
        "cedar.processing.ComponentMultiply": {
            "name": "Component Multiply 24",
            "comments": ""
        },
        "cedar.processing.ComponentMultiply": {
            "name": "Component Multiply 25",
            "comments": ""
        },
        "cedar.processing.ComponentMultiply": {
            "name": "Component Multiply 26",
            "comments": ""
        },
        "cedar.processing.ComponentMultiply": {
            "name": "Component Multiply 27",
            "comments": ""
        },
        "cedar.processing.ComponentMultiply": {
            "name": "Component Multiply 28",
            "comments": ""
        },
        "cedar.processing.ComponentMultiply": {
            "name": "Component Multiply 29",
            "comments": ""
        },
        "cedar.processing.ComponentMultiply": {
            "name": "Component Multiply 3",
            "comments": ""
        },
        "cedar.processing.ComponentMultiply": {
            "name": "Component Multiply 30",
            "comments": ""
        },
        "cedar.processing.ComponentMultiply": {
            "name": "Component Multiply 31",
            "comments": ""
        },
        "cedar.processing.ComponentMultiply": {
            "name": "Component Multiply 32",
            "comments": ""
        },
        "cedar.processing.ComponentMultiply": {
            "name": "Component Multiply 4",
            "comments": ""
        },
        "cedar.processing.ComponentMultiply": {
            "name": "Component Multiply 5",
            "comments": ""
        },
        "cedar.processing.ComponentMultiply": {
            "name": "Component Multiply 6",
            "comments": ""
        },
        "cedar.processing.ComponentMultiply": {
            "name": "Component Multiply 7",
            "comments": ""
        },
        "cedar.processing.ComponentMultiply": {
            "name": "Component Multiply 8",
            "comments": ""
        },
        "cedar.processing.ComponentMultiply": {
            "name": "Component Multiply 9",
            "comments": ""
        },
        "cedar.processing.steps.Convolution": {
            "name": "Convolution",
            "kernels": "",
            "convolution": {
                "borderType": "Cyclic",
                "mode": "Same",
                "engine": {
                    "type": "cedar.aux.conv.FFTW"
                },
                "alternate even kernel center": "false"
            },
            "comments": ""
        },
        "cedar.processing.steps.Convolution": {
            "name": "Convolution 2",
            "kernels": "",
            "convolution": {
                "borderType": "Zero",
                "mode": "Same",
                "engine": {
                    "type": "cedar.aux.conv.OpenCV"
                },
                "alternate even kernel center": "false"
            },
            "comments": ""
        },
        "cedar.processing.sources.GaussInput": {
            "name": "Distance-Matching-Field",
            "dimensionality": "1",
            "sizes": [
                "52"
            ],
            "amplitude": "0.029999999999999999",
            "centers": [
                "26"
            ],
            "sigma": [
                "12"
            ],
            "cyclic": "false",
            "comments": ""
        },
        "cedar.dynamics.NeuralField": {
            "name": "Distance-matching-Field",
            "activation as output": "false",
            "discrete metric (workaround)": "false",
            "update stepIcon according to output": "true",
            "threshold for updating the stepIcon": "0.80000000000000004",
            "dimensionality": "1",
            "sizes": [
                "52"
            ],
            "time scale": "100",
            "resting level": "-0.75",
            "input noise gain": "0.10000000000000001",
            "multiplicative noise (input)": "false",
            "multiplicative noise (activation)": "false",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0",
                "beta": "100"
            },
            "global inhibition": "-0.01",
            "lateral kernels": {
                "cedar.aux.kernel.Gauss": {
                    "dimensionality": "1",
                    "anchor": [
                        "0"
                    ],
                    "amplitude": "1",
                    "sigmas": [
                        "3"
                    ],
                    "normalize": "true",
                    "shifts": [
                        "0"
                    ],
                    "limit": "5"
                }
            },
            "lateral kernel convolution": {
                "borderType": "Zero",
                "mode": "Same",
                "engine": {
                    "type": "cedar.aux.conv.OpenCV"
                },
                "alternate even kernel center": "false"
            },
            "noise correlation kernel": {
                "dimensionality": "1",
                "anchor": [
                    "0"
                ],
                "amplitude": "0",
                "sigmas": [
                    "3"
                ],
                "normalize": "true",
                "shifts": [
                    "0"
                ],
                "limit": "5"
            },
            "comments": ""
        },
        "cedar.processing.sources.GaussInput": {
            "name": "Gauss Input 4",
            "dimensionality": "1",
            "sizes": [
                "3"
            ],
            "amplitude": "1",
            "centers": [
                "0"
            ],
            "sigma": [
                "0.01"
            ],
            "cyclic": "false",
            "comments": ""
        },
        "cedar.processing.sources.GaussInput": {
            "name": "Gauss Input 5",
            "dimensionality": "1",
            "sizes": [
                "3"
            ],
            "amplitude": "1",
            "centers": [
                "1"
            ],
            "sigma": [
                "0.01"
            ],
            "cyclic": "false",
            "comments": ""
        },
        "cedar.processing.sources.GaussInput": {
            "name": "Gauss Input 6",
            "dimensionality": "1",
            "sizes": [
                "3"
            ],
            "amplitude": "1",
            "centers": [
                "2"
            ],
            "sigma": [
                "0.01"
            ],
            "cyclic": "false",
            "comments": ""
        },
        "cedar.dynamics.NeuralField": {
            "name": "Goal-Change-CoS",
            "activation as output": "false",
            "discrete metric (workaround)": "false",
            "update stepIcon according to output": "true",
            "threshold for updating the stepIcon": "0.80000000000000004",
            "dimensionality": "0",
            "sizes": "",
            "time scale": "100",
            "resting level": "-1.75",
            "input noise gain": "0.10000000000000001",
            "multiplicative noise (input)": "false",
            "multiplicative noise (activation)": "false",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0",
                "beta": "100"
            },
            "global inhibition": "0",
            "lateral kernels": "",
            "lateral kernel convolution": {
                "borderType": "Zero",
                "mode": "Same",
                "engine": {
                    "type": "cedar.aux.conv.OpenCV"
                },
                "alternate even kernel center": "false"
            },
            "noise correlation kernel": {
                "dimensionality": "1",
                "anchor": [
                    "0"
                ],
                "amplitude": "0",
                "sigmas": [
                    "3"
                ],
                "normalize": "true",
                "shifts": [
                    "0"
                ],
                "limit": "5"
            },
            "comments": ""
        },
        "cedar.dynamics.NeuralField": {
            "name": "Goal-Change-Detection",
            "activation as output": "false",
            "discrete metric (workaround)": "true",
            "update stepIcon according to output": "true",
            "threshold for updating the stepIcon": "0.80000000000000004",
            "dimensionality": "1",
            "sizes": [
                "3"
            ],
            "time scale": "100",
            "resting level": "-0.75",
            "input noise gain": "0.10000000000000001",
            "multiplicative noise (input)": "false",
            "multiplicative noise (activation)": "false",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0",
                "beta": "100"
            },
            "global inhibition": "0",
            "lateral kernels": "",
            "lateral kernel convolution": {
                "borderType": "Zero",
                "mode": "Same",
                "engine": {
                    "type": "cedar.aux.conv.OpenCV"
                },
                "alternate even kernel center": "false"
            },
            "noise correlation kernel": {
                "dimensionality": "1",
                "anchor": [
                    "0"
                ],
                "amplitude": "0",
                "sigmas": [
                    "3"
                ],
                "normalize": "true",
                "shifts": [
                    "0"
                ],
                "limit": "5"
            },
            "comments": ""
        },
        "cedar.dynamics.NeuralField": {
            "name": "Goal-Change-Gate",
            "activation as output": "false",
            "discrete metric (workaround)": "false",
            "update stepIcon according to output": "true",
            "threshold for updating the stepIcon": "0.80000000000000004",
            "dimensionality": "1",
            "sizes": [
                "3"
            ],
            "time scale": "100",
            "resting level": "-1.75",
            "input noise gain": "0.10000000000000001",
            "multiplicative noise (input)": "false",
            "multiplicative noise (activation)": "false",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0",
                "beta": "100"
            },
            "global inhibition": "0",
            "lateral kernels": "",
            "lateral kernel convolution": {
                "borderType": "Zero",
                "mode": "Same",
                "engine": {
                    "type": "cedar.aux.conv.OpenCV"
                },
                "alternate even kernel center": "false"
            },
            "noise correlation kernel": {
                "dimensionality": "1",
                "anchor": [
                    "0"
                ],
                "amplitude": "0",
                "sigmas": [
                    "3"
                ],
                "normalize": "true",
                "shifts": [
                    "0"
                ],
                "limit": "5"
            },
            "comments": ""
        },
        "cedar.dynamics.NeuralField": {
            "name": "Goal-Change-Inhibition",
            "activation as output": "false",
            "discrete metric (workaround)": "true",
            "update stepIcon according to output": "true",
            "threshold for updating the stepIcon": "0.80000000000000004",
            "dimensionality": "1",
            "sizes": [
                "3"
            ],
            "time scale": "4000",
            "resting level": "-0.75",
            "input noise gain": "0.10000000000000001",
            "multiplicative noise (input)": "false",
            "multiplicative noise (activation)": "false",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0",
                "beta": "100"
            },
            "global inhibition": "0",
            "lateral kernels": "",
            "lateral kernel convolution": {
                "borderType": "Zero",
                "mode": "Same",
                "engine": {
                    "type": "cedar.aux.conv.OpenCV"
                },
                "alternate even kernel center": "false"
            },
            "noise correlation kernel": {
                "dimensionality": "1",
                "anchor": [
                    "0"
                ],
                "amplitude": "0",
                "sigmas": [
                    "3"
                ],
                "normalize": "true",
                "shifts": [
                    "0"
                ],
                "limit": "5"
            },
            "comments": ""
        },
        "cedar.dynamics.NeuralField": {
            "name": "Goal-Change-Precondition",
            "activation as output": "false",
            "discrete metric (workaround)": "false",
            "update stepIcon according to output": "true",
            "threshold for updating the stepIcon": "0.80000000000000004",
            "dimensionality": "0",
            "sizes": "",
            "time scale": "100",
            "resting level": "-0.75",
            "input noise gain": "0.10000000000000001",
            "multiplicative noise (input)": "false",
            "multiplicative noise (activation)": "false",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0",
                "beta": "100"
            },
            "global inhibition": "0",
            "lateral kernels": "",
            "lateral kernel convolution": {
                "borderType": "Zero",
                "mode": "Same",
                "engine": {
                    "type": "cedar.aux.conv.OpenCV"
                },
                "alternate even kernel center": "false"
            },
            "noise correlation kernel": {
                "dimensionality": "1",
                "anchor": [
                    "0"
                ],
                "amplitude": "0",
                "sigmas": [
                    "3"
                ],
                "normalize": "true",
                "shifts": [
                    "0"
                ],
                "limit": "5"
            },
            "comments": ""
        },
        "cedar.dynamics.NeuralField": {
            "name": "Goal-CoD",
            "activation as output": "false",
            "discrete metric (workaround)": "false",
            "update stepIcon according to output": "true",
            "threshold for updating the stepIcon": "0.80000000000000004",
            "dimensionality": "0",
            "sizes": "",
            "time scale": "3000",
            "resting level": "-0.75",
            "input noise gain": "0.10000000000000001",
            "multiplicative noise (input)": "false",
            "multiplicative noise (activation)": "false",
            "sigmoid": {
                "type": "cedar.aux.math.HeavisideSigmoid",
                "threshold": "0"
            },
            "global inhibition": "0",
            "lateral kernels": "",
            "lateral kernel convolution": {
                "borderType": "Zero",
                "mode": "Same",
                "engine": {
                    "type": "cedar.aux.conv.OpenCV"
                },
                "alternate even kernel center": "false"
            },
            "noise correlation kernel": {
                "dimensionality": "1",
                "anchor": [
                    "0"
                ],
                "amplitude": "0",
                "sigmas": [
                    "3"
                ],
                "normalize": "true",
                "shifts": [
                    "0"
                ],
                "limit": "5"
            },
            "comments": ""
        },
        "cedar.dynamics.NeuralField": {
            "name": "Goal-CoS",
            "activation as output": "false",
            "discrete metric (workaround)": "false",
            "update stepIcon according to output": "true",
            "threshold for updating the stepIcon": "0.80000000000000004",
            "dimensionality": "0",
            "sizes": "",
            "time scale": "100",
            "resting level": "-1.75",
            "input noise gain": "0.10000000000000001",
            "multiplicative noise (input)": "false",
            "multiplicative noise (activation)": "false",
            "sigmoid": {
                "type": "cedar.aux.math.HeavisideSigmoid",
                "threshold": "0"
            },
            "global inhibition": "0",
            "lateral kernels": "",
            "lateral kernel convolution": {
                "borderType": "Zero",
                "mode": "Same",
                "engine": {
                    "type": "cedar.aux.conv.OpenCV"
                },
                "alternate even kernel center": "false"
            },
            "noise correlation kernel": {
                "dimensionality": "1",
                "anchor": [
                    "0"
                ],
                "amplitude": "0",
                "sigmas": [
                    "3"
                ],
                "normalize": "true",
                "shifts": [
                    "0"
                ],
                "limit": "5"
            },
            "comments": ""
        },
        "cedar.dynamics.Preshape": {
            "name": "Goal-Habituation",
            "dimensionality": "1",
            "sizes": [
                "3"
            ],
            "time scale build up": "10000",
            "time scale decay": "5000",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0.5",
                "beta": "1000"
            },
            "comments": ""
        },
        "cedar.dynamics.NeuralField": {
            "name": "Goal-Habituation-Gate",
            "activation as output": "false",
            "discrete metric (workaround)": "false",
            "update stepIcon according to output": "true",
            "threshold for updating the stepIcon": "0.80000000000000004",
            "dimensionality": "0",
            "sizes": "",
            "time scale": "100",
            "resting level": "-0.75",
            "input noise gain": "0.10000000000000001",
            "multiplicative noise (input)": "false",
            "multiplicative noise (activation)": "false",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0",
                "beta": "100"
            },
            "global inhibition": "0",
            "lateral kernels": "",
            "lateral kernel convolution": {
                "borderType": "Zero",
                "mode": "Same",
                "engine": {
                    "type": "cedar.aux.conv.OpenCV"
                },
                "alternate even kernel center": "false"
            },
            "noise correlation kernel": {
                "dimensionality": "1",
                "anchor": [
                    "0"
                ],
                "amplitude": "0",
                "sigmas": [
                    "3"
                ],
                "normalize": "true",
                "shifts": [
                    "0"
                ],
                "limit": "5"
            },
            "comments": ""
        },
        "cedar.dynamics.NeuralField": {
            "name": "Goal-Intention",
            "activation as output": "false",
            "discrete metric (workaround)": "false",
            "update stepIcon according to output": "true",
            "threshold for updating the stepIcon": "0.80000000000000004",
            "dimensionality": "0",
            "sizes": "",
            "time scale": "100",
            "resting level": "-0.75",
            "input noise gain": "0.10000000000000001",
            "multiplicative noise (input)": "false",
            "multiplicative noise (activation)": "false",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0",
                "beta": "100"
            },
            "global inhibition": "0",
            "lateral kernels": "",
            "lateral kernel convolution": {
                "borderType": "Zero",
                "mode": "Same",
                "engine": {
                    "type": "cedar.aux.conv.OpenCV"
                },
                "alternate even kernel center": "false"
            },
            "noise correlation kernel": {
                "dimensionality": "1",
                "anchor": [
                    "0"
                ],
                "amplitude": "0",
                "sigmas": [
                    "3"
                ],
                "normalize": "true",
                "shifts": [
                    "0"
                ],
                "limit": "5"
            },
            "comments": ""
        },
        "cedar.dynamics.NeuralField": {
            "name": "Goal-Match",
            "activation as output": "false",
            "discrete metric (workaround)": "true",
            "update stepIcon according to output": "true",
            "threshold for updating the stepIcon": "0.80000000000000004",
            "dimensionality": "1",
            "sizes": [
                "3"
            ],
            "time scale": "100",
            "resting level": "-1.75",
            "input noise gain": "0.10000000000000001",
            "multiplicative noise (input)": "false",
            "multiplicative noise (activation)": "false",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0",
                "beta": "100"
            },
            "global inhibition": "0",
            "lateral kernels": "",
            "lateral kernel convolution": {
                "borderType": "Zero",
                "mode": "Same",
                "engine": {
                    "type": "cedar.aux.conv.OpenCV"
                },
                "alternate even kernel center": "false"
            },
            "noise correlation kernel": {
                "dimensionality": "1",
                "anchor": [
                    "0"
                ],
                "amplitude": "0",
                "sigmas": [
                    "3"
                ],
                "normalize": "true",
                "shifts": [
                    "0"
                ],
                "limit": "5"
            },
            "comments": ""
        },
        "cedar.dynamics.Preshape": {
            "name": "Goal-Perseveration",
            "dimensionality": "1",
            "sizes": [
                "3"
            ],
            "time scale build up": "3000",
            "time scale decay": "10000",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0.5",
                "beta": "1000"
            },
            "comments": ""
        },
        "cedar.dynamics.NeuralField": {
            "name": "Goal-Precondition",
            "activation as output": "false",
            "discrete metric (workaround)": "false",
            "update stepIcon according to output": "true",
            "threshold for updating the stepIcon": "0.80000000000000004",
            "dimensionality": "0",
            "sizes": "",
            "time scale": "100",
            "resting level": "-0.75",
            "input noise gain": "0.10000000000000001",
            "multiplicative noise (input)": "false",
            "multiplicative noise (activation)": "false",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0",
                "beta": "100"
            },
            "global inhibition": "0",
            "lateral kernels": "",
            "lateral kernel convolution": {
                "borderType": "Zero",
                "mode": "Same",
                "engine": {
                    "type": "cedar.aux.conv.OpenCV"
                },
                "alternate even kernel center": "false"
            },
            "noise correlation kernel": {
                "dimensionality": "1",
                "anchor": [
                    "0"
                ],
                "amplitude": "0",
                "sigmas": [
                    "3"
                ],
                "normalize": "true",
                "shifts": [
                    "0"
                ],
                "limit": "5"
            },
            "comments": ""
        },
        "cedar.dynamics.NeuralField": {
            "name": "Goal-Recall-CoDs",
            "activation as output": "false",
            "discrete metric (workaround)": "false",
            "update stepIcon according to output": "true",
            "threshold for updating the stepIcon": "0.80000000000000004",
            "dimensionality": "0",
            "sizes": "",
            "time scale": "400",
            "resting level": "-0.75",
            "input noise gain": "0.10000000000000001",
            "multiplicative noise (input)": "false",
            "multiplicative noise (activation)": "false",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0",
                "beta": "100"
            },
            "global inhibition": "0",
            "lateral kernels": {
                "cedar.aux.kernel.Gauss": {
                    "dimensionality": "1",
                    "anchor": [
                        "0"
                    ],
                    "amplitude": "1",
                    "sigmas": [
                        "0.01"
                    ],
                    "normalize": "true",
                    "shifts": [
                        "0"
                    ],
                    "limit": "5"
                }
            },
            "lateral kernel convolution": {
                "borderType": "Zero",
                "mode": "Same",
                "engine": {
                    "type": "cedar.aux.conv.OpenCV"
                },
                "alternate even kernel center": "false"
            },
            "noise correlation kernel": {
                "dimensionality": "1",
                "anchor": [
                    "0"
                ],
                "amplitude": "0",
                "sigmas": [
                    "3"
                ],
                "normalize": "true",
                "shifts": [
                    "0"
                ],
                "limit": "5"
            },
            "comments": ""
        },
        "cedar.dynamics.NeuralField": {
            "name": "Goal-Recall-CoS",
            "activation as output": "false",
            "discrete metric (workaround)": "false",
            "update stepIcon according to output": "true",
            "threshold for updating the stepIcon": "0.80000000000000004",
            "dimensionality": "0",
            "sizes": "",
            "time scale": "100",
            "resting level": "-1.75",
            "input noise gain": "0.10000000000000001",
            "multiplicative noise (input)": "false",
            "multiplicative noise (activation)": "false",
            "sigmoid": {
                "type": "cedar.aux.math.HeavisideSigmoid",
                "threshold": "0"
            },
            "global inhibition": "0",
            "lateral kernels": "",
            "lateral kernel convolution": {
                "borderType": "Zero",
                "mode": "Same",
                "engine": {
                    "type": "cedar.aux.conv.OpenCV"
                },
                "alternate even kernel center": "false"
            },
            "noise correlation kernel": {
                "dimensionality": "1",
                "anchor": [
                    "0"
                ],
                "amplitude": "0",
                "sigmas": [
                    "3"
                ],
                "normalize": "true",
                "shifts": [
                    "0"
                ],
                "limit": "5"
            },
            "comments": ""
        },
        "cedar.dynamics.NeuralField": {
            "name": "Goal-Recall-Intention",
            "activation as output": "false",
            "discrete metric (workaround)": "false",
            "update stepIcon according to output": "true",
            "threshold for updating the stepIcon": "0.80000000000000004",
            "dimensionality": "0",
            "sizes": "",
            "time scale": "100",
            "resting level": "-0.75",
            "input noise gain": "0.10000000000000001",
            "multiplicative noise (input)": "false",
            "multiplicative noise (activation)": "false",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0",
                "beta": "100"
            },
            "global inhibition": "0",
            "lateral kernels": "",
            "lateral kernel convolution": {
                "borderType": "Zero",
                "mode": "Same",
                "engine": {
                    "type": "cedar.aux.conv.OpenCV"
                },
                "alternate even kernel center": "false"
            },
            "noise correlation kernel": {
                "dimensionality": "1",
                "anchor": [
                    "0"
                ],
                "amplitude": "0",
                "sigmas": [
                    "3"
                ],
                "normalize": "true",
                "shifts": [
                    "0"
                ],
                "limit": "5"
            },
            "comments": ""
        },
        "cedar.dynamics.NeuralField": {
            "name": "Goal-Selection",
            "activation as output": "false",
            "discrete metric (workaround)": "true",
            "update stepIcon according to output": "true",
            "threshold for updating the stepIcon": "0.80000000000000004",
            "dimensionality": "1",
            "sizes": [
                "3"
            ],
            "time scale": "100",
            "resting level": "-2.75",
            "input noise gain": "0.10000000000000001",
            "multiplicative noise (input)": "false",
            "multiplicative noise (activation)": "false",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0",
                "beta": "50"
            },
            "global inhibition": "-0.5",
            "lateral kernels": {
                "cedar.aux.kernel.Gauss": {
                    "dimensionality": "1",
                    "anchor": [
                        "0"
                    ],
                    "amplitude": "1.6000000000000001",
                    "sigmas": [
                        "0.01"
                    ],
                    "normalize": "true",
                    "shifts": [
                        "0"
                    ],
                    "limit": "5"
                }
            },
            "lateral kernel convolution": {
                "borderType": "Zero",
                "mode": "Same",
                "engine": {
                    "type": "cedar.aux.conv.OpenCV"
                },
                "alternate even kernel center": "false"
            },
            "noise correlation kernel": {
                "dimensionality": "1",
                "anchor": [
                    "0"
                ],
                "amplitude": "0",
                "sigmas": [
                    "3"
                ],
                "normalize": "true",
                "shifts": [
                    "0"
                ],
                "limit": "5"
            },
            "comments": ""
        },
        "cedar.dynamics.NeuralField": {
            "name": "Goal-Selection-Signal",
            "activation as output": "false",
            "discrete metric (workaround)": "false",
            "update stepIcon according to output": "true",
            "threshold for updating the stepIcon": "0.80000000000000004",
            "dimensionality": "0",
            "sizes": "",
            "time scale": "1000",
            "resting level": "-0.75",
            "input noise gain": "0.10000000000000001",
            "multiplicative noise (input)": "false",
            "multiplicative noise (activation)": "false",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0",
                "beta": "100"
            },
            "global inhibition": "0",
            "lateral kernels": "",
            "lateral kernel convolution": {
                "borderType": "Zero",
                "mode": "Same",
                "engine": {
                    "type": "cedar.aux.conv.OpenCV"
                },
                "alternate even kernel center": "false"
            },
            "noise correlation kernel": {
                "dimensionality": "1",
                "anchor": [
                    "0"
                ],
                "amplitude": "0",
                "sigmas": [
                    "3"
                ],
                "normalize": "true",
                "shifts": [
                    "0"
                ],
                "limit": "5"
            },
            "comments": ""
        },
        "cedar.dynamics.NeuralField": {
            "name": "Goal-UnSelection-Signal",
            "activation as output": "false",
            "discrete metric (workaround)": "false",
            "update stepIcon according to output": "true",
            "threshold for updating the stepIcon": "0.80000000000000004",
            "dimensionality": "0",
            "sizes": "",
            "time scale": "100",
            "resting level": "-0.75",
            "input noise gain": "0.10000000000000001",
            "multiplicative noise (input)": "false",
            "multiplicative noise (activation)": "false",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0",
                "beta": "100"
            },
            "global inhibition": "0",
            "lateral kernels": "",
            "lateral kernel convolution": {
                "borderType": "Zero",
                "mode": "Same",
                "engine": {
                    "type": "cedar.aux.conv.OpenCV"
                },
                "alternate even kernel center": "false"
            },
            "noise correlation kernel": {
                "dimensionality": "1",
                "anchor": [
                    "0"
                ],
                "amplitude": "0",
                "sigmas": [
                    "3"
                ],
                "normalize": "true",
                "shifts": [
                    "0"
                ],
                "limit": "5"
            },
            "comments": ""
        },
        "cedar.dynamics.NeuralField": {
            "name": "High-Pitch-Task",
            "activation as output": "false",
            "discrete metric (workaround)": "false",
            "update stepIcon according to output": "true",
            "threshold for updating the stepIcon": "0.80000000000000004",
            "dimensionality": "0",
            "sizes": "",
            "time scale": "100",
            "resting level": "-0.75",
            "input noise gain": "0.10000000000000001",
            "multiplicative noise (input)": "false",
            "multiplicative noise (activation)": "false",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0",
                "beta": "100"
            },
            "global inhibition": "0",
            "lateral kernels": "",
            "lateral kernel convolution": {
                "borderType": "Zero",
                "mode": "Same",
                "engine": {
                    "type": "cedar.aux.conv.OpenCV"
                },
                "alternate even kernel center": "false"
            },
            "noise correlation kernel": {
                "dimensionality": "1",
                "anchor": [
                    "0"
                ],
                "amplitude": "0",
                "sigmas": [
                    "3"
                ],
                "normalize": "true",
                "shifts": [
                    "0"
                ],
                "limit": "5"
            },
            "comments": ""
        },
        "cedar.dynamics.NeuralField": {
            "name": "Intention In Action-Action1",
            "activation as output": "false",
            "discrete metric (workaround)": "false",
            "update stepIcon according to output": "true",
            "threshold for updating the stepIcon": "0.80000000000000004",
            "dimensionality": "0",
            "sizes": "",
            "time scale": "100",
            "resting level": "-0.75",
            "input noise gain": "0.10000000000000001",
            "multiplicative noise (input)": "false",
            "multiplicative noise (activation)": "false",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0",
                "beta": "100"
            },
            "global inhibition": "0",
            "lateral kernels": "",
            "lateral kernel convolution": {
                "borderType": "Zero",
                "mode": "Same",
                "engine": {
                    "type": "cedar.aux.conv.OpenCV"
                },
                "alternate even kernel center": "false"
            },
            "noise correlation kernel": {
                "dimensionality": "1",
                "anchor": [
                    "0"
                ],
                "amplitude": "0",
                "sigmas": [
                    "3"
                ],
                "normalize": "true",
                "shifts": [
                    "0"
                ],
                "limit": "5"
            },
            "comments": ""
        },
        "cedar.dynamics.NeuralField": {
            "name": "Intention In Action-Action2",
            "activation as output": "false",
            "discrete metric (workaround)": "false",
            "update stepIcon according to output": "true",
            "threshold for updating the stepIcon": "0.80000000000000004",
            "dimensionality": "0",
            "sizes": "",
            "time scale": "100",
            "resting level": "-0.75",
            "input noise gain": "0.10000000000000001",
            "multiplicative noise (input)": "false",
            "multiplicative noise (activation)": "false",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0",
                "beta": "100"
            },
            "global inhibition": "0",
            "lateral kernels": "",
            "lateral kernel convolution": {
                "borderType": "Zero",
                "mode": "Same",
                "engine": {
                    "type": "cedar.aux.conv.OpenCV"
                },
                "alternate even kernel center": "false"
            },
            "noise correlation kernel": {
                "dimensionality": "1",
                "anchor": [
                    "0"
                ],
                "amplitude": "0",
                "sigmas": [
                    "3"
                ],
                "normalize": "true",
                "shifts": [
                    "0"
                ],
                "limit": "5"
            },
            "comments": ""
        },
        "cedar.dynamics.NeuralField": {
            "name": "Intention In Action-Break",
            "activation as output": "false",
            "discrete metric (workaround)": "false",
            "update stepIcon according to output": "true",
            "threshold for updating the stepIcon": "0.80000000000000004",
            "dimensionality": "0",
            "sizes": "",
            "time scale": "100",
            "resting level": "-0.75",
            "input noise gain": "0.10000000000000001",
            "multiplicative noise (input)": "false",
            "multiplicative noise (activation)": "false",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0",
                "beta": "100"
            },
            "global inhibition": "0",
            "lateral kernels": "",
            "lateral kernel convolution": {
                "borderType": "Zero",
                "mode": "Same",
                "engine": {
                    "type": "cedar.aux.conv.OpenCV"
                },
                "alternate even kernel center": "false"
            },
            "noise correlation kernel": {
                "dimensionality": "1",
                "anchor": [
                    "0"
                ],
                "amplitude": "0",
                "sigmas": [
                    "3"
                ],
                "normalize": "true",
                "shifts": [
                    "0"
                ],
                "limit": "5"
            },
            "comments": ""
        },
        "cedar.dynamics.NeuralField": {
            "name": "Intention In Action-Orient To Object",
            "activation as output": "false",
            "discrete metric (workaround)": "false",
            "update stepIcon according to output": "true",
            "threshold for updating the stepIcon": "0.80000000000000004",
            "dimensionality": "0",
            "sizes": "",
            "time scale": "100",
            "resting level": "-0.75",
            "input noise gain": "0.10000000000000001",
            "multiplicative noise (input)": "false",
            "multiplicative noise (activation)": "false",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0",
                "beta": "100"
            },
            "global inhibition": "0",
            "lateral kernels": "",
            "lateral kernel convolution": {
                "borderType": "Zero",
                "mode": "Same",
                "engine": {
                    "type": "cedar.aux.conv.OpenCV"
                },
                "alternate even kernel center": "false"
            },
            "noise correlation kernel": {
                "dimensionality": "1",
                "anchor": [
                    "0"
                ],
                "amplitude": "0",
                "sigmas": [
                    "3"
                ],
                "normalize": "true",
                "shifts": [
                    "0"
                ],
                "limit": "5"
            },
            "comments": ""
        },
        "cedar.dynamics.NeuralField": {
            "name": "Intention-CoS",
            "activation as output": "false",
            "discrete metric (workaround)": "false",
            "update stepIcon according to output": "true",
            "threshold for updating the stepIcon": "0.80000000000000004",
            "dimensionality": "0",
            "sizes": "",
            "time scale": "100",
            "resting level": "-0.75",
            "input noise gain": "0.10000000000000001",
            "multiplicative noise (input)": "false",
            "multiplicative noise (activation)": "false",
            "sigmoid": {
                "type": "cedar.aux.math.HeavisideSigmoid",
                "threshold": "0"
            },
            "global inhibition": "0",
            "lateral kernels": {
                "cedar.aux.kernel.Gauss": {
                    "dimensionality": "1",
                    "anchor": [
                        "0"
                    ],
                    "amplitude": "1",
                    "sigmas": [
                        "0.01"
                    ],
                    "normalize": "true",
                    "shifts": [
                        "0"
                    ],
                    "limit": "5"
                }
            },
            "lateral kernel convolution": {
                "borderType": "Zero",
                "mode": "Same",
                "engine": {
                    "type": "cedar.aux.conv.OpenCV"
                },
                "alternate even kernel center": "false"
            },
            "noise correlation kernel": {
                "dimensionality": "1",
                "anchor": [
                    "0"
                ],
                "amplitude": "0",
                "sigmas": [
                    "3"
                ],
                "normalize": "true",
                "shifts": [
                    "0"
                ],
                "limit": "5"
            },
            "comments": ""
        },
        "cedar.dynamics.NeuralField": {
            "name": "Intention-Compare-Strategies",
            "activation as output": "false",
            "discrete metric (workaround)": "false",
            "update stepIcon according to output": "true",
            "threshold for updating the stepIcon": "0.80000000000000004",
            "dimensionality": "0",
            "sizes": "",
            "time scale": "100",
            "resting level": "-0.75",
            "input noise gain": "0.10000000000000001",
            "multiplicative noise (input)": "false",
            "multiplicative noise (activation)": "false",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0",
                "beta": "100"
            },
            "global inhibition": "0",
            "lateral kernels": "",
            "lateral kernel convolution": {
                "borderType": "Zero",
                "mode": "Same",
                "engine": {
                    "type": "cedar.aux.conv.OpenCV"
                },
                "alternate even kernel center": "false"
            },
            "noise correlation kernel": {
                "dimensionality": "1",
                "anchor": [
                    "0"
                ],
                "amplitude": "0",
                "sigmas": [
                    "3"
                ],
                "normalize": "true",
                "shifts": [
                    "0"
                ],
                "limit": "5"
            },
            "comments": ""
        },
        "cedar.dynamics.NeuralField": {
            "name": "Intention-In-Action-Action3",
            "activation as output": "false",
            "discrete metric (workaround)": "false",
            "update stepIcon according to output": "true",
            "threshold for updating the stepIcon": "0.80000000000000004",
            "dimensionality": "0",
            "sizes": "",
            "time scale": "100",
            "resting level": "-0.75",
            "input noise gain": "0.10000000000000001",
            "multiplicative noise (input)": "false",
            "multiplicative noise (activation)": "false",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0",
                "beta": "100"
            },
            "global inhibition": "0",
            "lateral kernels": "",
            "lateral kernel convolution": {
                "borderType": "Zero",
                "mode": "Same",
                "engine": {
                    "type": "cedar.aux.conv.OpenCV"
                },
                "alternate even kernel center": "false"
            },
            "noise correlation kernel": {
                "dimensionality": "1",
                "anchor": [
                    "0"
                ],
                "amplitude": "0",
                "sigmas": [
                    "3"
                ],
                "normalize": "true",
                "shifts": [
                    "0"
                ],
                "limit": "5"
            },
            "comments": ""
        },
        "cedar.dynamics.NeuralField": {
            "name": "Intention-Perform-Action",
            "activation as output": "false",
            "discrete metric (workaround)": "false",
            "update stepIcon according to output": "true",
            "threshold for updating the stepIcon": "0.80000000000000004",
            "dimensionality": "0",
            "sizes": "",
            "time scale": "100",
            "resting level": "-0.75",
            "input noise gain": "0.10000000000000001",
            "multiplicative noise (input)": "false",
            "multiplicative noise (activation)": "false",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0",
                "beta": "100"
            },
            "global inhibition": "0",
            "lateral kernels": "",
            "lateral kernel convolution": {
                "borderType": "Zero",
                "mode": "Same",
                "engine": {
                    "type": "cedar.aux.conv.OpenCV"
                },
                "alternate even kernel center": "false"
            },
            "noise correlation kernel": {
                "dimensionality": "1",
                "anchor": [
                    "0"
                ],
                "amplitude": "0",
                "sigmas": [
                    "3"
                ],
                "normalize": "true",
                "shifts": [
                    "0"
                ],
                "limit": "5"
            },
            "comments": ""
        },
        "cedar.dynamics.NeuralField": {
            "name": "Intention-Selection",
            "activation as output": "false",
            "discrete metric (workaround)": "true",
            "update stepIcon according to output": "true",
            "threshold for updating the stepIcon": "0.80000000000000004",
            "dimensionality": "2",
            "sizes": [
                "6",
                "3"
            ],
            "time scale": "100",
            "resting level": "-4",
            "input noise gain": "0.10000000000000001",
            "multiplicative noise (input)": "false",
            "multiplicative noise (activation)": "false",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0",
                "beta": "100"
            },
            "global inhibition": "-0.3000000000000001",
            "lateral kernels": {
                "cedar.aux.kernel.Box": {
                    "dimensionality": "2",
                    "anchor": [
                        "0",
                        "0"
                    ],
                    "amplitude": "0.5",
                    "widths": [
                        "1",
                        "1"
                    ]
                }
            },
            "lateral kernel convolution": {
                "borderType": "Zero",
                "mode": "Same",
                "engine": {
                    "type": "cedar.aux.conv.OpenCV"
                },
                "alternate even kernel center": "false"
            },
            "noise correlation kernel": {
                "dimensionality": "2",
                "anchor": [
                    "0",
                    "0"
                ],
                "amplitude": "0",
                "sigmas": [
                    "3",
                    "3"
                ],
                "normalize": "true",
                "shifts": [
                    "0",
                    "0"
                ],
                "limit": "5"
            },
            "comments": ""
        },
        "cedar.processing.sources.TCPReader": {
            "name": "LED TCP Reader",
            "buffer size": "32768",
            "port": "50022",
            "packet timeout (ms)": "500",
            "message timeout (ms)": "50",
            "accept interval (steps)": "30",
            "comments": ""
        },
        "cedar.dynamics.NeuralField": {
            "name": "LED-Perception-Field",
            "activation as output": "false",
            "discrete metric (workaround)": "true",
            "update stepIcon according to output": "true",
            "threshold for updating the stepIcon": "0.80000000000000004",
            "dimensionality": "1",
            "sizes": [
                "9"
            ],
            "time scale": "100",
            "resting level": "-0.75",
            "input noise gain": "0.10000000000000001",
            "multiplicative noise (input)": "false",
            "multiplicative noise (activation)": "false",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0",
                "beta": "100"
            },
            "global inhibition": "0",
            "lateral kernels": "",
            "lateral kernel convolution": {
                "borderType": "Zero",
                "mode": "Same",
                "engine": {
                    "type": "cedar.aux.conv.OpenCV"
                },
                "alternate even kernel center": "false"
            },
            "noise correlation kernel": {
                "dimensionality": "1",
                "anchor": [
                    "0"
                ],
                "amplitude": "0",
                "sigmas": [
                    "3"
                ],
                "normalize": "true",
                "shifts": [
                    "0"
                ],
                "limit": "5"
            },
            "comments": ""
        },
        "cedar.dynamics.NeuralField": {
            "name": "LED1",
            "activation as output": "false",
            "discrete metric (workaround)": "false",
            "update stepIcon according to output": "true",
            "threshold for updating the stepIcon": "0.80000000000000004",
            "dimensionality": "0",
            "sizes": "",
            "time scale": "1000",
            "resting level": "-0.75",
            "input noise gain": "0.10000000000000001",
            "multiplicative noise (input)": "false",
            "multiplicative noise (activation)": "false",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0",
                "beta": "100"
            },
            "global inhibition": "0",
            "lateral kernels": "",
            "lateral kernel convolution": {
                "borderType": "Zero",
                "mode": "Same",
                "engine": {
                    "type": "cedar.aux.conv.OpenCV"
                },
                "alternate even kernel center": "false"
            },
            "noise correlation kernel": {
                "dimensionality": "1",
                "anchor": [
                    "0"
                ],
                "amplitude": "0",
                "sigmas": [
                    "3"
                ],
                "normalize": "true",
                "shifts": [
                    "0"
                ],
                "limit": "5"
            },
            "comments": ""
        },
        "cedar.dynamics.NeuralField": {
            "name": "LED2",
            "activation as output": "false",
            "discrete metric (workaround)": "false",
            "update stepIcon according to output": "true",
            "threshold for updating the stepIcon": "0.80000000000000004",
            "dimensionality": "0",
            "sizes": "",
            "time scale": "1000",
            "resting level": "-0.75",
            "input noise gain": "0.10000000000000001",
            "multiplicative noise (input)": "false",
            "multiplicative noise (activation)": "false",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0",
                "beta": "100"
            },
            "global inhibition": "0",
            "lateral kernels": "",
            "lateral kernel convolution": {
                "borderType": "Zero",
                "mode": "Same",
                "engine": {
                    "type": "cedar.aux.conv.OpenCV"
                },
                "alternate even kernel center": "false"
            },
            "noise correlation kernel": {
                "dimensionality": "1",
                "anchor": [
                    "0"
                ],
                "amplitude": "0",
                "sigmas": [
                    "3"
                ],
                "normalize": "true",
                "shifts": [
                    "0"
                ],
                "limit": "5"
            },
            "comments": ""
        },
        "cedar.dynamics.NeuralField": {
            "name": "LED3",
            "activation as output": "false",
            "discrete metric (workaround)": "false",
            "update stepIcon according to output": "true",
            "threshold for updating the stepIcon": "0.80000000000000004",
            "dimensionality": "0",
            "sizes": "",
            "time scale": "1000",
            "resting level": "-0.75",
            "input noise gain": "0.10000000000000001",
            "multiplicative noise (input)": "false",
            "multiplicative noise (activation)": "false",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0",
                "beta": "100"
            },
            "global inhibition": "0",
            "lateral kernels": "",
            "lateral kernel convolution": {
                "borderType": "Zero",
                "mode": "Same",
                "engine": {
                    "type": "cedar.aux.conv.OpenCV"
                },
                "alternate even kernel center": "false"
            },
            "noise correlation kernel": {
                "dimensionality": "1",
                "anchor": [
                    "0"
                ],
                "amplitude": "0",
                "sigmas": [
                    "3"
                ],
                "normalize": "true",
                "shifts": [
                    "0"
                ],
                "limit": "5"
            },
            "comments": ""
        },
        "cedar.dynamics.NeuralField": {
            "name": "LED4",
            "activation as output": "false",
            "discrete metric (workaround)": "false",
            "update stepIcon according to output": "true",
            "threshold for updating the stepIcon": "0.80000000000000004",
            "dimensionality": "0",
            "sizes": "",
            "time scale": "1000",
            "resting level": "-0.75",
            "input noise gain": "0.10000000000000001",
            "multiplicative noise (input)": "false",
            "multiplicative noise (activation)": "false",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0",
                "beta": "100"
            },
            "global inhibition": "0",
            "lateral kernels": "",
            "lateral kernel convolution": {
                "borderType": "Zero",
                "mode": "Same",
                "engine": {
                    "type": "cedar.aux.conv.OpenCV"
                },
                "alternate even kernel center": "false"
            },
            "noise correlation kernel": {
                "dimensionality": "1",
                "anchor": [
                    "0"
                ],
                "amplitude": "0",
                "sigmas": [
                    "3"
                ],
                "normalize": "true",
                "shifts": [
                    "0"
                ],
                "limit": "5"
            },
            "comments": ""
        },
        "cedar.dynamics.NeuralField": {
            "name": "LED5",
            "activation as output": "false",
            "discrete metric (workaround)": "false",
            "update stepIcon according to output": "true",
            "threshold for updating the stepIcon": "0.80000000000000004",
            "dimensionality": "0",
            "sizes": "",
            "time scale": "1000",
            "resting level": "-0.75",
            "input noise gain": "0.10000000000000001",
            "multiplicative noise (input)": "false",
            "multiplicative noise (activation)": "false",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0",
                "beta": "100"
            },
            "global inhibition": "0",
            "lateral kernels": "",
            "lateral kernel convolution": {
                "borderType": "Zero",
                "mode": "Same",
                "engine": {
                    "type": "cedar.aux.conv.OpenCV"
                },
                "alternate even kernel center": "false"
            },
            "noise correlation kernel": {
                "dimensionality": "1",
                "anchor": [
                    "0"
                ],
                "amplitude": "0",
                "sigmas": [
                    "3"
                ],
                "normalize": "true",
                "shifts": [
                    "0"
                ],
                "limit": "5"
            },
            "comments": ""
        },
        "cedar.dynamics.NeuralField": {
            "name": "LED6",
            "activation as output": "false",
            "discrete metric (workaround)": "false",
            "update stepIcon according to output": "true",
            "threshold for updating the stepIcon": "0.80000000000000004",
            "dimensionality": "0",
            "sizes": "",
            "time scale": "1000",
            "resting level": "-0.75",
            "input noise gain": "0.10000000000000001",
            "multiplicative noise (input)": "false",
            "multiplicative noise (activation)": "false",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0",
                "beta": "100"
            },
            "global inhibition": "0",
            "lateral kernels": "",
            "lateral kernel convolution": {
                "borderType": "Zero",
                "mode": "Same",
                "engine": {
                    "type": "cedar.aux.conv.OpenCV"
                },
                "alternate even kernel center": "false"
            },
            "noise correlation kernel": {
                "dimensionality": "1",
                "anchor": [
                    "0"
                ],
                "amplitude": "0",
                "sigmas": [
                    "3"
                ],
                "normalize": "true",
                "shifts": [
                    "0"
                ],
                "limit": "5"
            },
            "comments": ""
        },
        "cedar.dynamics.NeuralField": {
            "name": "LED7",
            "activation as output": "false",
            "discrete metric (workaround)": "false",
            "update stepIcon according to output": "true",
            "threshold for updating the stepIcon": "0.80000000000000004",
            "dimensionality": "0",
            "sizes": "",
            "time scale": "1000",
            "resting level": "-0.75",
            "input noise gain": "0.10000000000000001",
            "multiplicative noise (input)": "false",
            "multiplicative noise (activation)": "false",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0",
                "beta": "100"
            },
            "global inhibition": "0",
            "lateral kernels": "",
            "lateral kernel convolution": {
                "borderType": "Zero",
                "mode": "Same",
                "engine": {
                    "type": "cedar.aux.conv.OpenCV"
                },
                "alternate even kernel center": "false"
            },
            "noise correlation kernel": {
                "dimensionality": "1",
                "anchor": [
                    "0"
                ],
                "amplitude": "0",
                "sigmas": [
                    "3"
                ],
                "normalize": "true",
                "shifts": [
                    "0"
                ],
                "limit": "5"
            },
            "comments": ""
        },
        "cedar.dynamics.NeuralField": {
            "name": "LED8",
            "activation as output": "false",
            "discrete metric (workaround)": "false",
            "update stepIcon according to output": "true",
            "threshold for updating the stepIcon": "0.80000000000000004",
            "dimensionality": "0",
            "sizes": "",
            "time scale": "1000",
            "resting level": "-0.75",
            "input noise gain": "0.10000000000000001",
            "multiplicative noise (input)": "false",
            "multiplicative noise (activation)": "false",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0",
                "beta": "100"
            },
            "global inhibition": "0",
            "lateral kernels": "",
            "lateral kernel convolution": {
                "borderType": "Zero",
                "mode": "Same",
                "engine": {
                    "type": "cedar.aux.conv.OpenCV"
                },
                "alternate even kernel center": "false"
            },
            "noise correlation kernel": {
                "dimensionality": "1",
                "anchor": [
                    "0"
                ],
                "amplitude": "0",
                "sigmas": [
                    "3"
                ],
                "normalize": "true",
                "shifts": [
                    "0"
                ],
                "limit": "5"
            },
            "comments": ""
        },
        "cedar.dynamics.NeuralField": {
            "name": "LED9",
            "activation as output": "false",
            "discrete metric (workaround)": "false",
            "update stepIcon according to output": "true",
            "threshold for updating the stepIcon": "0.80000000000000004",
            "dimensionality": "0",
            "sizes": "",
            "time scale": "1000",
            "resting level": "-0.75",
            "input noise gain": "0.10000000000000001",
            "multiplicative noise (input)": "false",
            "multiplicative noise (activation)": "false",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0",
                "beta": "100"
            },
            "global inhibition": "0",
            "lateral kernels": "",
            "lateral kernel convolution": {
                "borderType": "Zero",
                "mode": "Same",
                "engine": {
                    "type": "cedar.aux.conv.OpenCV"
                },
                "alternate even kernel center": "false"
            },
            "noise correlation kernel": {
                "dimensionality": "1",
                "anchor": [
                    "0"
                ],
                "amplitude": "0",
                "sigmas": [
                    "3"
                ],
                "normalize": "true",
                "shifts": [
                    "0"
                ],
                "limit": "5"
            },
            "comments": ""
        },
        "cedar.dynamics.NeuralField": {
            "name": "Learning-Gate",
            "activation as output": "false",
            "discrete metric (workaround)": "false",
            "update stepIcon according to output": "true",
            "threshold for updating the stepIcon": "0.80000000000000004",
            "dimensionality": "0",
            "sizes": "",
            "time scale": "100",
            "resting level": "-0.75",
            "input noise gain": "0.10000000000000001",
            "multiplicative noise (input)": "false",
            "multiplicative noise (activation)": "false",
            "sigmoid": {
                "type": "cedar.aux.math.HeavisideSigmoid",
                "threshold": "0"
            },
            "global inhibition": "0",
            "lateral kernels": "",
            "lateral kernel convolution": {
                "borderType": "Zero",
                "mode": "Same",
                "engine": {
                    "type": "cedar.aux.conv.OpenCV"
                },
                "alternate even kernel center": "false"
            },
            "noise correlation kernel": {
                "dimensionality": "1",
                "anchor": [
                    "0"
                ],
                "amplitude": "0",
                "sigmas": [
                    "3"
                ],
                "normalize": "true",
                "shifts": [
                    "0"
                ],
                "limit": "5"
            },
            "comments": ""
        },
        "cedar.dynamics.NeuralField": {
            "name": "Learning-Reward-Node",
            "activation as output": "false",
            "discrete metric (workaround)": "false",
            "update stepIcon according to output": "true",
            "threshold for updating the stepIcon": "0.80000000000000004",
            "dimensionality": "0",
            "sizes": "",
            "time scale": "200",
            "resting level": "-3.75",
            "input noise gain": "0.10000000000000001",
            "multiplicative noise (input)": "false",
            "multiplicative noise (activation)": "false",
            "sigmoid": {
                "type": "cedar.aux.math.HeavisideSigmoid",
                "threshold": "0"
            },
            "global inhibition": "0",
            "lateral kernels": "",
            "lateral kernel convolution": {
                "borderType": "Zero",
                "mode": "Same",
                "engine": {
                    "type": "cedar.aux.conv.OpenCV"
                },
                "alternate even kernel center": "false"
            },
            "noise correlation kernel": {
                "dimensionality": "1",
                "anchor": [
                    "0"
                ],
                "amplitude": "0",
                "sigmas": [
                    "3"
                ],
                "normalize": "true",
                "shifts": [
                    "0"
                ],
                "limit": "5"
            },
            "comments": ""
        },
        "cedar.dynamics.NeuralField": {
            "name": "Low-Pitch-Task",
            "activation as output": "false",
            "discrete metric (workaround)": "false",
            "update stepIcon according to output": "true",
            "threshold for updating the stepIcon": "0.80000000000000004",
            "dimensionality": "0",
            "sizes": "",
            "time scale": "100",
            "resting level": "-0.75",
            "input noise gain": "0.10000000000000001",
            "multiplicative noise (input)": "false",
            "multiplicative noise (activation)": "false",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0",
                "beta": "100"
            },
            "global inhibition": "0",
            "lateral kernels": "",
            "lateral kernel convolution": {
                "borderType": "Zero",
                "mode": "Same",
                "engine": {
                    "type": "cedar.aux.conv.OpenCV"
                },
                "alternate even kernel center": "false"
            },
            "noise correlation kernel": {
                "dimensionality": "1",
                "anchor": [
                    "0"
                ],
                "amplitude": "0",
                "sigmas": [
                    "3"
                ],
                "normalize": "true",
                "shifts": [
                    "0"
                ],
                "limit": "5"
            },
            "comments": ""
        },
        "cedar.processing.steps.MatrixTypeConverter": {
            "name": "Matrix Type Converter",
            "target type": "Float",
            "comments": ""
        },
        "cedar.dynamics.NeuralField": {
            "name": "Medium-Pitch-Task",
            "activation as output": "false",
            "discrete metric (workaround)": "false",
            "update stepIcon according to output": "true",
            "threshold for updating the stepIcon": "0.80000000000000004",
            "dimensionality": "0",
            "sizes": "",
            "time scale": "100",
            "resting level": "-0.75",
            "input noise gain": "0.10000000000000001",
            "multiplicative noise (input)": "false",
            "multiplicative noise (activation)": "false",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0",
                "beta": "100"
            },
            "global inhibition": "0",
            "lateral kernels": "",
            "lateral kernel convolution": {
                "borderType": "Zero",
                "mode": "Same",
                "engine": {
                    "type": "cedar.aux.conv.OpenCV"
                },
                "alternate even kernel center": "false"
            },
            "noise correlation kernel": {
                "dimensionality": "1",
                "anchor": [
                    "0"
                ],
                "amplitude": "0",
                "sigmas": [
                    "3"
                ],
                "normalize": "true",
                "shifts": [
                    "0"
                ],
                "limit": "5"
            },
            "comments": ""
        },
        "cedar.processing.sources.TCPReader": {
            "name": "Microphone TCP Reader",
            "buffer size": "32768",
            "port": "50021",
            "packet timeout (ms)": "500",
            "message timeout (ms)": "50",
            "accept interval (steps)": "30",
            "comments": ""
        },
        "cedar.dynamics.NeuralField": {
            "name": "Motor-Attractor",
            "activation as output": "false",
            "discrete metric (workaround)": "false",
            "update stepIcon according to output": "true",
            "threshold for updating the stepIcon": "0.80000000000000004",
            "dimensionality": "1",
            "sizes": [
                "52"
            ],
            "time scale": "100",
            "resting level": "-1.75",
            "input noise gain": "0.10000000000000001",
            "multiplicative noise (input)": "false",
            "multiplicative noise (activation)": "false",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0",
                "beta": "100"
            },
            "global inhibition": "0",
            "lateral kernels": "",
            "lateral kernel convolution": {
                "borderType": "Zero",
                "mode": "Same",
                "engine": {
                    "type": "cedar.aux.conv.OpenCV"
                },
                "alternate even kernel center": "false"
            },
            "noise correlation kernel": {
                "dimensionality": "1",
                "anchor": [
                    "0"
                ],
                "amplitude": "0",
                "sigmas": [
                    "3"
                ],
                "normalize": "true",
                "shifts": [
                    "0"
                ],
                "limit": "5"
            },
            "comments": ""
        },
        "cedar.dynamics.NeuralField": {
            "name": "Object-Gate",
            "activation as output": "false",
            "discrete metric (workaround)": "true",
            "update stepIcon according to output": "true",
            "threshold for updating the stepIcon": "0.80000000000000004",
            "dimensionality": "1",
            "sizes": [
                "6"
            ],
            "time scale": "100",
            "resting level": "-1.75",
            "input noise gain": "0.10000000000000001",
            "multiplicative noise (input)": "false",
            "multiplicative noise (activation)": "false",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0",
                "beta": "100"
            },
            "global inhibition": "0",
            "lateral kernels": "",
            "lateral kernel convolution": {
                "borderType": "Zero",
                "mode": "Same",
                "engine": {
                    "type": "cedar.aux.conv.OpenCV"
                },
                "alternate even kernel center": "false"
            },
            "noise correlation kernel": {
                "dimensionality": "1",
                "anchor": [
                    "0"
                ],
                "amplitude": "0",
                "sigmas": [
                    "3"
                ],
                "normalize": "true",
                "shifts": [
                    "0"
                ],
                "limit": "5"
            },
            "comments": ""
        },
        "cedar.dynamics.NeuralField": {
            "name": "Object-Recall-Intention",
            "activation as output": "false",
            "discrete metric (workaround)": "false",
            "update stepIcon according to output": "true",
            "threshold for updating the stepIcon": "0.80000000000000004",
            "dimensionality": "0",
            "sizes": "",
            "time scale": "100",
            "resting level": "-0.75",
            "input noise gain": "0.10000000000000001",
            "multiplicative noise (input)": "false",
            "multiplicative noise (activation)": "false",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0",
                "beta": "100"
            },
            "global inhibition": "0",
            "lateral kernels": "",
            "lateral kernel convolution": {
                "borderType": "Zero",
                "mode": "Same",
                "engine": {
                    "type": "cedar.aux.conv.OpenCV"
                },
                "alternate even kernel center": "false"
            },
            "noise correlation kernel": {
                "dimensionality": "1",
                "anchor": [
                    "0"
                ],
                "amplitude": "0",
                "sigmas": [
                    "3"
                ],
                "normalize": "true",
                "shifts": [
                    "0"
                ],
                "limit": "5"
            },
            "comments": ""
        },
        "cedar.dynamics.NeuralField": {
            "name": "ObjectColor Concepts",
            "activation as output": "false",
            "discrete metric (workaround)": "true",
            "update stepIcon according to output": "true",
            "threshold for updating the stepIcon": "0.80000000000000004",
            "dimensionality": "1",
            "sizes": [
                "6"
            ],
            "time scale": "100",
            "resting level": "-0.75",
            "input noise gain": "0.10000000000000001",
            "multiplicative noise (input)": "false",
            "multiplicative noise (activation)": "false",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0",
                "beta": "100"
            },
            "global inhibition": "0",
            "lateral kernels": "",
            "lateral kernel convolution": {
                "borderType": "Zero",
                "mode": "Same",
                "engine": {
                    "type": "cedar.aux.conv.OpenCV"
                },
                "alternate even kernel center": "false"
            },
            "noise correlation kernel": {
                "dimensionality": "1",
                "anchor": [
                    "0"
                ],
                "amplitude": "0",
                "sigmas": [
                    "3"
                ],
                "normalize": "true",
                "shifts": [
                    "0"
                ],
                "limit": "5"
            },
            "comments": ""
        },
        "cedar.dynamics.NeuralField": {
            "name": "Precondition-Break In Front Of Object",
            "activation as output": "false",
            "discrete metric (workaround)": "false",
            "update stepIcon according to output": "true",
            "threshold for updating the stepIcon": "0.80000000000000004",
            "dimensionality": "0",
            "sizes": "",
            "time scale": "100",
            "resting level": "-0.75",
            "input noise gain": "0.10000000000000001",
            "multiplicative noise (input)": "false",
            "multiplicative noise (activation)": "false",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0",
                "beta": "100"
            },
            "global inhibition": "0",
            "lateral kernels": "",
            "lateral kernel convolution": {
                "borderType": "Zero",
                "mode": "Same",
                "engine": {
                    "type": "cedar.aux.conv.OpenCV"
                },
                "alternate even kernel center": "false"
            },
            "noise correlation kernel": {
                "dimensionality": "1",
                "anchor": [
                    "0"
                ],
                "amplitude": "0",
                "sigmas": [
                    "3"
                ],
                "normalize": "true",
                "shifts": [
                    "0"
                ],
                "limit": "5"
            },
            "comments": ""
        },
        "cedar.dynamics.NeuralField": {
            "name": "Precondition-Color In Attention",
            "activation as output": "false",
            "discrete metric (workaround)": "false",
            "update stepIcon according to output": "true",
            "threshold for updating the stepIcon": "0.80000000000000004",
            "dimensionality": "0",
            "sizes": "",
            "time scale": "100",
            "resting level": "-0.75",
            "input noise gain": "0.10000000000000001",
            "multiplicative noise (input)": "false",
            "multiplicative noise (activation)": "false",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0",
                "beta": "100"
            },
            "global inhibition": "0",
            "lateral kernels": "",
            "lateral kernel convolution": {
                "borderType": "Zero",
                "mode": "Same",
                "engine": {
                    "type": "cedar.aux.conv.OpenCV"
                },
                "alternate even kernel center": "false"
            },
            "noise correlation kernel": {
                "dimensionality": "1",
                "anchor": [
                    "0"
                ],
                "amplitude": "0",
                "sigmas": [
                    "3"
                ],
                "normalize": "true",
                "shifts": [
                    "0"
                ],
                "limit": "5"
            },
            "comments": ""
        },
        "cedar.dynamics.NeuralField": {
            "name": "Precondition-Is In Front Of",
            "activation as output": "false",
            "discrete metric (workaround)": "false",
            "update stepIcon according to output": "true",
            "threshold for updating the stepIcon": "0.80000000000000004",
            "dimensionality": "0",
            "sizes": "",
            "time scale": "100",
            "resting level": "-0.75",
            "input noise gain": "0.10000000000000001",
            "multiplicative noise (input)": "false",
            "multiplicative noise (activation)": "false",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0",
                "beta": "100"
            },
            "global inhibition": "0",
            "lateral kernels": "",
            "lateral kernel convolution": {
                "borderType": "Zero",
                "mode": "Same",
                "engine": {
                    "type": "cedar.aux.conv.OpenCV"
                },
                "alternate even kernel center": "false"
            },
            "noise correlation kernel": {
                "dimensionality": "1",
                "anchor": [
                    "0"
                ],
                "amplitude": "0",
                "sigmas": [
                    "3"
                ],
                "normalize": "true",
                "shifts": [
                    "0"
                ],
                "limit": "5"
            },
            "comments": ""
        },
        "cedar.dynamics.NeuralField": {
            "name": "Precondition-Oriented To Object",
            "activation as output": "false",
            "discrete metric (workaround)": "false",
            "update stepIcon according to output": "true",
            "threshold for updating the stepIcon": "0.80000000000000004",
            "dimensionality": "0",
            "sizes": "",
            "time scale": "100",
            "resting level": "-0.75",
            "input noise gain": "0.10000000000000001",
            "multiplicative noise (input)": "false",
            "multiplicative noise (activation)": "false",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0",
                "beta": "100"
            },
            "global inhibition": "0",
            "lateral kernels": "",
            "lateral kernel convolution": {
                "borderType": "Zero",
                "mode": "Same",
                "engine": {
                    "type": "cedar.aux.conv.OpenCV"
                },
                "alternate even kernel center": "false"
            },
            "noise correlation kernel": {
                "dimensionality": "1",
                "anchor": [
                    "0"
                ],
                "amplitude": "0",
                "sigmas": [
                    "3"
                ],
                "normalize": "true",
                "shifts": [
                    "0"
                ],
                "limit": "5"
            },
            "comments": ""
        },
        "cedar.dynamics.NeuralField": {
            "name": "Precondition-loaded-Strategy",
            "activation as output": "false",
            "discrete metric (workaround)": "false",
            "update stepIcon according to output": "true",
            "threshold for updating the stepIcon": "0.80000000000000004",
            "dimensionality": "0",
            "sizes": "",
            "time scale": "100",
            "resting level": "-0.75",
            "input noise gain": "0.10000000000000001",
            "multiplicative noise (input)": "false",
            "multiplicative noise (activation)": "false",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0",
                "beta": "100"
            },
            "global inhibition": "0",
            "lateral kernels": "",
            "lateral kernel convolution": {
                "borderType": "Zero",
                "mode": "Same",
                "engine": {
                    "type": "cedar.aux.conv.OpenCV"
                },
                "alternate even kernel center": "false"
            },
            "noise correlation kernel": {
                "dimensionality": "1",
                "anchor": [
                    "0"
                ],
                "amplitude": "0",
                "sigmas": [
                    "3"
                ],
                "normalize": "true",
                "shifts": [
                    "0"
                ],
                "limit": "5"
            },
            "comments": ""
        },
        "cedar.processing.Projection": {
            "name": "Projection",
            "dimension mapping": {
                "0": "4294967295"
            },
            "output dimensionality": "0",
            "output dimension sizes": "",
            "compression type": "MAXIMUM",
            "comments": ""
        },
        "cedar.processing.Projection": {
            "name": "Projection 10",
            "dimension mapping": {
                "0": "4294967295"
            },
            "output dimensionality": "0",
            "output dimension sizes": "",
            "compression type": "MAXIMUM",
            "comments": ""
        },
        "cedar.processing.Projection": {
            "name": "Projection 11",
            "dimension mapping": {
                "0": "4294967295"
            },
            "output dimensionality": "0",
            "output dimension sizes": "",
            "compression type": "MAXIMUM",
            "comments": ""
        },
        "cedar.processing.Projection": {
            "name": "Projection 12",
            "dimension mapping": {
                "0": "4294967295"
            },
            "output dimensionality": "0",
            "output dimension sizes": "",
            "compression type": "MAXIMUM",
            "comments": ""
        },
        "cedar.processing.Projection": {
            "name": "Projection 13",
            "dimension mapping": {
                "0": "4294967295"
            },
            "output dimensionality": "0",
            "output dimension sizes": "",
            "compression type": "MAXIMUM",
            "comments": ""
        },
        "cedar.processing.Projection": {
            "name": "Projection 14",
            "dimension mapping": {
                "0": "4294967295",
                "1": "4294967295"
            },
            "output dimensionality": "0",
            "output dimension sizes": "",
            "compression type": "MAXIMUM",
            "comments": ""
        },
        "cedar.processing.Projection": {
            "name": "Projection 15",
            "dimension mapping": {
                "0": "4294967295"
            },
            "output dimensionality": "0",
            "output dimension sizes": "",
            "compression type": "MAXIMUM",
            "comments": ""
        },
        "cedar.processing.Projection": {
            "name": "Projection 16",
            "dimension mapping": {
                "0": "4294967295"
            },
            "output dimensionality": "0",
            "output dimension sizes": "",
            "compression type": "MAXIMUM",
            "comments": ""
        },
        "cedar.processing.Projection": {
            "name": "Projection 17",
            "dimension mapping": {
                "0": "4294967295"
            },
            "output dimensionality": "0",
            "output dimension sizes": "",
            "compression type": "MAXIMUM",
            "comments": ""
        },
        "cedar.processing.Projection": {
            "name": "Projection 18",
            "dimension mapping": {
                "0": "4294967295"
            },
            "output dimensionality": "0",
            "output dimension sizes": "",
            "compression type": "MAXIMUM",
            "comments": ""
        },
        "cedar.processing.Projection": {
            "name": "Projection 2",
            "dimension mapping": {
                "0": "0",
                "1": "4294967295"
            },
            "output dimensionality": "1",
            "output dimension sizes": [
                "20"
            ],
            "compression type": "MAXIMUM",
            "comments": ""
        },
        "cedar.processing.Projection": {
            "name": "Projection 20",
            "dimension mapping": {
                "0": "0"
            },
            "output dimensionality": "2",
            "output dimension sizes": [
                "6",
                "3"
            ],
            "compression type": "MAXIMUM",
            "comments": ""
        },
        "cedar.processing.Projection": {
            "name": "Projection 21",
            "dimension mapping": {
                "0": "0",
                "1": "4294967295"
            },
            "output dimensionality": "1",
            "output dimension sizes": [
                "6"
            ],
            "compression type": "MAXIMUM",
            "comments": ""
        },
        "cedar.processing.Projection": {
            "name": "Projection 22",
            "dimension mapping": {
                "0": "4294967295",
                "1": "0"
            },
            "output dimensionality": "1",
            "output dimension sizes": [
                "3"
            ],
            "compression type": "MAXIMUM",
            "comments": ""
        },
        "cedar.processing.Projection": {
            "name": "Projection 23",
            "dimension mapping": {
                "0": "4294967295"
            },
            "output dimensionality": "0",
            "output dimension sizes": "",
            "compression type": "MAXIMUM",
            "comments": ""
        },
        "cedar.processing.Projection": {
            "name": "Projection 25",
            "dimension mapping": {
                "0": "4294967295"
            },
            "output dimensionality": "0",
            "output dimension sizes": "",
            "compression type": "MAXIMUM",
            "comments": ""
        },
        "cedar.processing.Projection": {
            "name": "Projection 26",
            "dimension mapping": {
                "0": "0"
            },
            "output dimensionality": "2",
            "output dimension sizes": [
                "6",
                "3"
            ],
            "compression type": "MAXIMUM",
            "comments": ""
        },
        "cedar.processing.Projection": {
            "name": "Projection 27",
            "dimension mapping": {
                "0": "1"
            },
            "output dimensionality": "2",
            "output dimension sizes": [
                "6",
                "3"
            ],
            "compression type": "MAXIMUM",
            "comments": ""
        },
        "cedar.processing.Projection": {
            "name": "Projection 28",
            "dimension mapping": {
                "0": "4294967295"
            },
            "output dimensionality": "0",
            "output dimension sizes": "",
            "compression type": "MAXIMUM",
            "comments": ""
        },
        "cedar.processing.Projection": {
            "name": "Projection 29",
            "dimension mapping": {
                "0": "4294967295"
            },
            "output dimensionality": "0",
            "output dimension sizes": "",
            "compression type": "MAXIMUM",
            "comments": ""
        },
        "cedar.processing.Projection": {
            "name": "Projection 3",
            "dimension mapping": {
                "0": "4294967295",
                "1": "1",
                "2": "0"
            },
            "output dimensionality": "2",
            "output dimension sizes": [
                "20",
                "52"
            ],
            "compression type": "MAXIMUM",
            "comments": ""
        },
        "cedar.processing.Projection": {
            "name": "Projection 30",
            "dimension mapping": {
                "0": "4294967295"
            },
            "output dimensionality": "0",
            "output dimension sizes": "",
            "compression type": "MAXIMUM",
            "comments": ""
        },
        "cedar.processing.Projection": {
            "name": "Projection 4",
            "dimension mapping": {
                "0": "4294967295"
            },
            "output dimensionality": "0",
            "output dimension sizes": "",
            "compression type": "MAXIMUM",
            "comments": ""
        },
        "cedar.processing.Projection": {
            "name": "Projection 6",
            "dimension mapping": {
                "0": "4294967295"
            },
            "output dimensionality": "0",
            "output dimension sizes": "",
            "compression type": "MAXIMUM",
            "comments": ""
        },
        "cedar.processing.Projection": {
            "name": "Projection 7",
            "dimension mapping": {
                "0": "0"
            },
            "output dimensionality": "2",
            "output dimension sizes": [
                "20",
                "52"
            ],
            "compression type": "MAXIMUM",
            "comments": ""
        },
        "cedar.processing.Projection": {
            "name": "Projection 8",
            "dimension mapping": {
                "0": "4294967295",
                "1": "0"
            },
            "output dimensionality": "1",
            "output dimension sizes": [
                "52"
            ],
            "compression type": "MAXIMUM",
            "comments": ""
        },
        "cedar.processing.Projection": {
            "name": "Projection 9",
            "dimension mapping": {
                "0": "4294967295"
            },
            "output dimensionality": "0",
            "output dimension sizes": "",
            "compression type": "MAXIMUM",
            "comments": ""
        },
        "cedar.dynamics.RateMatrixToSpaceCode": {
            "name": "Rate Matrix To Space Code",
            "number of bins": "20",
            "lower limit": "0",
            "upper limit": "255",
            "comments": ""
        },
        "cedar.dynamics.NeuralField": {
            "name": "Recall-Goal-Match",
            "activation as output": "false",
            "discrete metric (workaround)": "true",
            "update stepIcon according to output": "true",
            "threshold for updating the stepIcon": "0.80000000000000004",
            "dimensionality": "1",
            "sizes": [
                "3"
            ],
            "time scale": "100",
            "resting level": "-1.75",
            "input noise gain": "0.10000000000000001",
            "multiplicative noise (input)": "false",
            "multiplicative noise (activation)": "false",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0",
                "beta": "100"
            },
            "global inhibition": "0",
            "lateral kernels": "",
            "lateral kernel convolution": {
                "borderType": "Zero",
                "mode": "Same",
                "engine": {
                    "type": "cedar.aux.conv.OpenCV"
                },
                "alternate even kernel center": "false"
            },
            "noise correlation kernel": {
                "dimensionality": "1",
                "anchor": [
                    "0"
                ],
                "amplitude": "0",
                "sigmas": [
                    "3"
                ],
                "normalize": "true",
                "shifts": [
                    "0"
                ],
                "limit": "5"
            },
            "comments": ""
        },
        "cedar.dynamics.NeuralField": {
            "name": "Recall-Goal-Match-CoS",
            "activation as output": "false",
            "discrete metric (workaround)": "false",
            "update stepIcon according to output": "true",
            "threshold for updating the stepIcon": "0.80000000000000004",
            "dimensionality": "0",
            "sizes": "",
            "time scale": "100",
            "resting level": "-1.75",
            "input noise gain": "0.10000000000000001",
            "multiplicative noise (input)": "false",
            "multiplicative noise (activation)": "false",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0",
                "beta": "100"
            },
            "global inhibition": "0",
            "lateral kernels": "",
            "lateral kernel convolution": {
                "borderType": "Zero",
                "mode": "Same",
                "engine": {
                    "type": "cedar.aux.conv.OpenCV"
                },
                "alternate even kernel center": "false"
            },
            "noise correlation kernel": {
                "dimensionality": "1",
                "anchor": [
                    "0"
                ],
                "amplitude": "0",
                "sigmas": [
                    "3"
                ],
                "normalize": "true",
                "shifts": [
                    "0"
                ],
                "limit": "5"
            },
            "comments": ""
        },
        "cedar.dynamics.NeuralField": {
            "name": "Recall-Precondition",
            "activation as output": "false",
            "discrete metric (workaround)": "false",
            "update stepIcon according to output": "true",
            "threshold for updating the stepIcon": "0.80000000000000004",
            "dimensionality": "0",
            "sizes": "",
            "time scale": "100",
            "resting level": "-0.75",
            "input noise gain": "0.10000000000000001",
            "multiplicative noise (input)": "false",
            "multiplicative noise (activation)": "false",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0",
                "beta": "100"
            },
            "global inhibition": "0",
            "lateral kernels": "",
            "lateral kernel convolution": {
                "borderType": "Zero",
                "mode": "Same",
                "engine": {
                    "type": "cedar.aux.conv.OpenCV"
                },
                "alternate even kernel center": "false"
            },
            "noise correlation kernel": {
                "dimensionality": "1",
                "anchor": [
                    "0"
                ],
                "amplitude": "0",
                "sigmas": [
                    "3"
                ],
                "normalize": "true",
                "shifts": [
                    "0"
                ],
                "limit": "5"
            },
            "comments": ""
        },
        "cedar.dynamics.NeuralField": {
            "name": "Recruitment Boost",
            "activation as output": "false",
            "discrete metric (workaround)": "false",
            "update stepIcon according to output": "true",
            "threshold for updating the stepIcon": "0.80000000000000004",
            "dimensionality": "0",
            "sizes": "",
            "time scale": "200",
            "resting level": "-0.75",
            "input noise gain": "0.10000000000000001",
            "multiplicative noise (input)": "false",
            "multiplicative noise (activation)": "false",
            "sigmoid": {
                "type": "cedar.aux.math.HeavisideSigmoid",
                "threshold": "0"
            },
            "global inhibition": "0",
            "lateral kernels": "",
            "lateral kernel convolution": {
                "borderType": "Zero",
                "mode": "Same",
                "engine": {
                    "type": "cedar.aux.conv.OpenCV"
                },
                "alternate even kernel center": "false"
            },
            "noise correlation kernel": {
                "dimensionality": "1",
                "anchor": [
                    "0"
                ],
                "amplitude": "0",
                "sigmas": [
                    "3"
                ],
                "normalize": "true",
                "shifts": [
                    "0"
                ],
                "limit": "5"
            },
            "comments": ""
        },
        "cedar.dynamics.NeuralField": {
            "name": "Reset-Signal",
            "activation as output": "false",
            "discrete metric (workaround)": "false",
            "update stepIcon according to output": "true",
            "threshold for updating the stepIcon": "0.80000000000000004",
            "dimensionality": "0",
            "sizes": "",
            "time scale": "100",
            "resting level": "-0.75",
            "input noise gain": "0.10000000000000001",
            "multiplicative noise (input)": "false",
            "multiplicative noise (activation)": "false",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0",
                "beta": "100"
            },
            "global inhibition": "0",
            "lateral kernels": "",
            "lateral kernel convolution": {
                "borderType": "Zero",
                "mode": "Same",
                "engine": {
                    "type": "cedar.aux.conv.OpenCV"
                },
                "alternate even kernel center": "false"
            },
            "noise correlation kernel": {
                "dimensionality": "1",
                "anchor": [
                    "0"
                ],
                "amplitude": "0",
                "sigmas": [
                    "3"
                ],
                "normalize": "true",
                "shifts": [
                    "0"
                ],
                "limit": "5"
            },
            "comments": ""
        },
        "cedar.proc.steps.RewardHebbTrace": {
            "name": "Reward Hebb Trace",
            "association dimension": "0",
            "association sizes": "",
            "learning rate": "0.10000000000000001",
            "fixed reward duration": "false",
            "reward duration": "200",
            "manual weights": "false",
            "weight centers": "",
            "weight sigmas": "",
            "weight amplitude": "6",
            "reward threshold": "0.5",
            "reciprocal weight threshold": "0.5",
            "require asso and trigger for learning": "false",
            "comments": ""
        },
        "cedar.proc.steps.RewardHebbTrace": {
            "name": "Reward Hebb Trace 10",
            "association dimension": "1",
            "association sizes": [
                "3"
            ],
            "learning rate": "0.10000000000000001",
            "fixed reward duration": "false",
            "reward duration": "200",
            "manual weights": "false",
            "weight centers": [
                "3"
            ],
            "weight sigmas": [
                "3"
            ],
            "weight amplitude": "6",
            "reward threshold": "0.5",
            "reciprocal weight threshold": "0.5",
            "require asso and trigger for learning": "false",
            "comments": ""
        },
        "cedar.proc.steps.RewardHebbTrace": {
            "name": "Reward Hebb Trace 11",
            "association dimension": "1",
            "association sizes": [
                "6"
            ],
            "learning rate": "0.10000000000000001",
            "fixed reward duration": "false",
            "reward duration": "200",
            "manual weights": "false",
            "weight centers": [
                "1"
            ],
            "weight sigmas": [
                "0.01"
            ],
            "weight amplitude": "1",
            "reward threshold": "0.5",
            "reciprocal weight threshold": "0.5",
            "require asso and trigger for learning": "false",
            "comments": ""
        },
        "cedar.proc.steps.RewardHebbTrace": {
            "name": "Reward Hebb Trace 12",
            "association dimension": "1",
            "association sizes": [
                "3"
            ],
            "learning rate": "0.10000000000000001",
            "fixed reward duration": "false",
            "reward duration": "200",
            "manual weights": "false",
            "weight centers": [
                "1"
            ],
            "weight sigmas": [
                "0.01"
            ],
            "weight amplitude": "1",
            "reward threshold": "0.5",
            "reciprocal weight threshold": "0.5",
            "require asso and trigger for learning": "false",
            "comments": ""
        },
        "cedar.proc.steps.RewardHebbTrace": {
            "name": "Reward Hebb Trace 13",
            "association dimension": "1",
            "association sizes": [
                "3"
            ],
            "learning rate": "0.10000000000000001",
            "fixed reward duration": "false",
            "reward duration": "200",
            "manual weights": "false",
            "weight centers": [
                "0"
            ],
            "weight sigmas": [
                "0.01"
            ],
            "weight amplitude": "1",
            "reward threshold": "0.5",
            "reciprocal weight threshold": "0.5",
            "require asso and trigger for learning": "false",
            "comments": ""
        },
        "cedar.proc.steps.RewardHebbTrace": {
            "name": "Reward Hebb Trace 14",
            "association dimension": "1",
            "association sizes": [
                "3"
            ],
            "learning rate": "0.10000000000000001",
            "fixed reward duration": "false",
            "reward duration": "200",
            "manual weights": "false",
            "weight centers": [
                "3"
            ],
            "weight sigmas": [
                "3"
            ],
            "weight amplitude": "6",
            "reward threshold": "0.5",
            "reciprocal weight threshold": "0.5",
            "require asso and trigger for learning": "false",
            "comments": ""
        },
        "cedar.proc.steps.RewardHebbTrace": {
            "name": "Reward Hebb Trace 15",
            "association dimension": "1",
            "association sizes": [
                "3"
            ],
            "learning rate": "0.10000000000000001",
            "fixed reward duration": "false",
            "reward duration": "200",
            "manual weights": "false",
            "weight centers": [
                "3"
            ],
            "weight sigmas": [
                "3"
            ],
            "weight amplitude": "6",
            "reward threshold": "0.5",
            "reciprocal weight threshold": "0.5",
            "require asso and trigger for learning": "false",
            "comments": ""
        },
        "cedar.proc.steps.RewardHebbTrace": {
            "name": "Reward Hebb Trace 16",
            "association dimension": "1",
            "association sizes": [
                "3"
            ],
            "learning rate": "0.10000000000000001",
            "fixed reward duration": "false",
            "reward duration": "200",
            "manual weights": "false",
            "weight centers": [
                "0"
            ],
            "weight sigmas": [
                "0.01"
            ],
            "weight amplitude": "1",
            "reward threshold": "0.5",
            "reciprocal weight threshold": "0.5",
            "require asso and trigger for learning": "false",
            "comments": ""
        },
        "cedar.proc.steps.RewardHebbTrace": {
            "name": "Reward Hebb Trace 17",
            "association dimension": "1",
            "association sizes": [
                "3"
            ],
            "learning rate": "0.10000000000000001",
            "fixed reward duration": "false",
            "reward duration": "200",
            "manual weights": "false",
            "weight centers": [
                "0"
            ],
            "weight sigmas": [
                "0.01"
            ],
            "weight amplitude": "1",
            "reward threshold": "0.5",
            "reciprocal weight threshold": "0.5",
            "require asso and trigger for learning": "false",
            "comments": ""
        },
        "cedar.proc.steps.RewardHebbTrace": {
            "name": "Reward Hebb Trace 18",
            "association dimension": "1",
            "association sizes": [
                "6"
            ],
            "learning rate": "0.10000000000000001",
            "fixed reward duration": "false",
            "reward duration": "200",
            "manual weights": "false",
            "weight centers": [
                "0"
            ],
            "weight sigmas": [
                "0.01"
            ],
            "weight amplitude": "1",
            "reward threshold": "0.5",
            "reciprocal weight threshold": "0.5",
            "require asso and trigger for learning": "false",
            "comments": ""
        },
        "cedar.proc.steps.RewardHebbTrace": {
            "name": "Reward Hebb Trace 19",
            "association dimension": "1",
            "association sizes": [
                "3"
            ],
            "learning rate": "0.10000000000000001",
            "fixed reward duration": "false",
            "reward duration": "200",
            "manual weights": "false",
            "weight centers": [
                "3"
            ],
            "weight sigmas": [
                "3"
            ],
            "weight amplitude": "6",
            "reward threshold": "0.5",
            "reciprocal weight threshold": "0.5",
            "require asso and trigger for learning": "false",
            "comments": ""
        },
        "cedar.proc.steps.RewardHebbTrace": {
            "name": "Reward Hebb Trace 2",
            "association dimension": "1",
            "association sizes": [
                "6"
            ],
            "learning rate": "0.10000000000000001",
            "fixed reward duration": "false",
            "reward duration": "200",
            "manual weights": "false",
            "weight centers": [
                "3"
            ],
            "weight sigmas": [
                "3"
            ],
            "weight amplitude": "6",
            "reward threshold": "0.5",
            "reciprocal weight threshold": "0.5",
            "require asso and trigger for learning": "false",
            "comments": ""
        },
        "cedar.proc.steps.RewardHebbTrace": {
            "name": "Reward Hebb Trace 20",
            "association dimension": "0",
            "association sizes": "",
            "learning rate": "0.10000000000000001",
            "fixed reward duration": "false",
            "reward duration": "200",
            "manual weights": "false",
            "weight centers": "",
            "weight sigmas": "",
            "weight amplitude": "6",
            "reward threshold": "0.5",
            "reciprocal weight threshold": "0.5",
            "require asso and trigger for learning": "false",
            "comments": ""
        },
        "cedar.proc.steps.RewardHebbTrace": {
            "name": "Reward Hebb Trace 21",
            "association dimension": "0",
            "association sizes": "",
            "learning rate": "0.10000000000000001",
            "fixed reward duration": "false",
            "reward duration": "200",
            "manual weights": "false",
            "weight centers": "",
            "weight sigmas": "",
            "weight amplitude": "6",
            "reward threshold": "0.5",
            "reciprocal weight threshold": "0.5",
            "require asso and trigger for learning": "false",
            "comments": ""
        },
        "cedar.proc.steps.RewardHebbTrace": {
            "name": "Reward Hebb Trace 22",
            "association dimension": "0",
            "association sizes": "",
            "learning rate": "0.10000000000000001",
            "fixed reward duration": "false",
            "reward duration": "200",
            "manual weights": "false",
            "weight centers": "",
            "weight sigmas": "",
            "weight amplitude": "6",
            "reward threshold": "0.5",
            "reciprocal weight threshold": "0.5",
            "require asso and trigger for learning": "false",
            "comments": ""
        },
        "cedar.proc.steps.RewardHebbTrace": {
            "name": "Reward Hebb Trace 23",
            "association dimension": "0",
            "association sizes": "",
            "learning rate": "0.10000000000000001",
            "fixed reward duration": "false",
            "reward duration": "200",
            "manual weights": "false",
            "weight centers": "",
            "weight sigmas": "",
            "weight amplitude": "6",
            "reward threshold": "0.5",
            "reciprocal weight threshold": "0.5",
            "require asso and trigger for learning": "false",
            "comments": ""
        },
        "cedar.proc.steps.RewardHebbTrace": {
            "name": "Reward Hebb Trace 24",
            "association dimension": "0",
            "association sizes": "",
            "learning rate": "0.10000000000000001",
            "fixed reward duration": "false",
            "reward duration": "200",
            "manual weights": "false",
            "weight centers": "",
            "weight sigmas": "",
            "weight amplitude": "6",
            "reward threshold": "0.5",
            "reciprocal weight threshold": "0.5",
            "require asso and trigger for learning": "false",
            "comments": ""
        },
        "cedar.proc.steps.RewardHebbTrace": {
            "name": "Reward Hebb Trace 25",
            "association dimension": "1",
            "association sizes": [
                "10"
            ],
            "learning rate": "0.001",
            "fixed reward duration": "false",
            "reward duration": "200",
            "manual weights": "true",
            "weight centers": [
                "1"
            ],
            "weight sigmas": [
                "1"
            ],
            "weight amplitude": "2",
            "reward threshold": "0.5",
            "reciprocal weight threshold": "0.5",
            "require asso and trigger for learning": "false",
            "comments": ""
        },
        "cedar.proc.steps.RewardHebbTrace": {
            "name": "Reward Hebb Trace 26",
            "association dimension": "1",
            "association sizes": [
                "10"
            ],
            "learning rate": "0.001",
            "fixed reward duration": "false",
            "reward duration": "200",
            "manual weights": "true",
            "weight centers": [
                "4.5"
            ],
            "weight sigmas": [
                "1.5"
            ],
            "weight amplitude": "1",
            "reward threshold": "0.5",
            "reciprocal weight threshold": "0.5",
            "require asso and trigger for learning": "false",
            "comments": ""
        },
        "cedar.proc.steps.RewardHebbTrace": {
            "name": "Reward Hebb Trace 27",
            "association dimension": "1",
            "association sizes": [
                "20"
            ],
            "learning rate": "0.001",
            "fixed reward duration": "false",
            "reward duration": "200",
            "manual weights": "true",
            "weight centers": [
                "0"
            ],
            "weight sigmas": [
                "0.5"
            ],
            "weight amplitude": "1",
            "reward threshold": "0.5",
            "reciprocal weight threshold": "0.5",
            "require asso and trigger for learning": "false",
            "comments": ""
        },
        "cedar.proc.steps.RewardHebbTrace": {
            "name": "Reward Hebb Trace 28",
            "association dimension": "1",
            "association sizes": [
                "20"
            ],
            "learning rate": "0.001",
            "fixed reward duration": "false",
            "reward duration": "200",
            "manual weights": "true",
            "weight centers": [
                "1"
            ],
            "weight sigmas": [
                "0.5"
            ],
            "weight amplitude": "1",
            "reward threshold": "0.5",
            "reciprocal weight threshold": "0.5",
            "require asso and trigger for learning": "false",
            "comments": ""
        },
        "cedar.proc.steps.RewardHebbTrace": {
            "name": "Reward Hebb Trace 29",
            "association dimension": "1",
            "association sizes": [
                "20"
            ],
            "learning rate": "0.001",
            "fixed reward duration": "false",
            "reward duration": "200",
            "manual weights": "true",
            "weight centers": [
                "2"
            ],
            "weight sigmas": [
                "0.5"
            ],
            "weight amplitude": "1",
            "reward threshold": "0.5",
            "reciprocal weight threshold": "0.5",
            "require asso and trigger for learning": "false",
            "comments": ""
        },
        "cedar.proc.steps.RewardHebbTrace": {
            "name": "Reward Hebb Trace 3",
            "association dimension": "1",
            "association sizes": [
                "3"
            ],
            "learning rate": "0.10000000000000001",
            "fixed reward duration": "false",
            "reward duration": "200",
            "manual weights": "false",
            "weight centers": [
                "3"
            ],
            "weight sigmas": [
                "3"
            ],
            "weight amplitude": "6",
            "reward threshold": "0.5",
            "reciprocal weight threshold": "0.5",
            "require asso and trigger for learning": "false",
            "comments": ""
        },
        "cedar.proc.steps.RewardHebbTrace": {
            "name": "Reward Hebb Trace 30",
            "association dimension": "1",
            "association sizes": [
                "20"
            ],
            "learning rate": "0.001",
            "fixed reward duration": "false",
            "reward duration": "200",
            "manual weights": "true",
            "weight centers": [
                "4"
            ],
            "weight sigmas": [
                "1"
            ],
            "weight amplitude": "1",
            "reward threshold": "0.5",
            "reciprocal weight threshold": "0.5",
            "require asso and trigger for learning": "false",
            "comments": ""
        },
        "cedar.proc.steps.RewardHebbTrace": {
            "name": "Reward Hebb Trace 31",
            "association dimension": "1",
            "association sizes": [
                "20"
            ],
            "learning rate": "0.001",
            "fixed reward duration": "false",
            "reward duration": "200",
            "manual weights": "true",
            "weight centers": [
                "8"
            ],
            "weight sigmas": [
                "1"
            ],
            "weight amplitude": "1",
            "reward threshold": "0.5",
            "reciprocal weight threshold": "0.5",
            "require asso and trigger for learning": "false",
            "comments": ""
        },
        "cedar.proc.steps.RewardHebbTrace": {
            "name": "Reward Hebb Trace 38",
            "association dimension": "1",
            "association sizes": [
                "20"
            ],
            "learning rate": "0.001",
            "fixed reward duration": "false",
            "reward duration": "200",
            "manual weights": "true",
            "weight centers": [
                "11"
            ],
            "weight sigmas": [
                "1"
            ],
            "weight amplitude": "1",
            "reward threshold": "0.5",
            "reciprocal weight threshold": "0.5",
            "require asso and trigger for learning": "false",
            "comments": ""
        },
        "cedar.proc.steps.RewardHebbTrace": {
            "name": "Reward Hebb Trace 39",
            "association dimension": "1",
            "association sizes": [
                "10"
            ],
            "learning rate": "0.001",
            "fixed reward duration": "false",
            "reward duration": "200",
            "manual weights": "true",
            "weight centers": [
                "8"
            ],
            "weight sigmas": [
                "1"
            ],
            "weight amplitude": "1",
            "reward threshold": "0.5",
            "reciprocal weight threshold": "0.5",
            "require asso and trigger for learning": "false",
            "comments": ""
        },
        "cedar.proc.steps.RewardHebbTrace": {
            "name": "Reward Hebb Trace 4",
            "association dimension": "1",
            "association sizes": [
                "3"
            ],
            "learning rate": "0.10000000000000001",
            "fixed reward duration": "false",
            "reward duration": "200",
            "manual weights": "false",
            "weight centers": [
                "3"
            ],
            "weight sigmas": [
                "3"
            ],
            "weight amplitude": "6",
            "reward threshold": "0.5",
            "reciprocal weight threshold": "0.5",
            "require asso and trigger for learning": "false",
            "comments": ""
        },
        "cedar.proc.steps.RewardHebbTrace": {
            "name": "Reward Hebb Trace 40",
            "association dimension": "1",
            "association sizes": [
                "9"
            ],
            "learning rate": "0.001",
            "fixed reward duration": "false",
            "reward duration": "200",
            "manual weights": "true",
            "weight centers": [
                "2"
            ],
            "weight sigmas": [
                "0.80000000000000004"
            ],
            "weight amplitude": "1",
            "reward threshold": "0.5",
            "reciprocal weight threshold": "0.5",
            "require asso and trigger for learning": "false",
            "comments": ""
        },
        "cedar.proc.steps.RewardHebbTrace": {
            "name": "Reward Hebb Trace 41",
            "association dimension": "1",
            "association sizes": [
                "9"
            ],
            "learning rate": "0.001",
            "fixed reward duration": "false",
            "reward duration": "200",
            "manual weights": "true",
            "weight centers": [
                "5"
            ],
            "weight sigmas": [
                "0.80000000000000004"
            ],
            "weight amplitude": "1",
            "reward threshold": "0.5",
            "reciprocal weight threshold": "0.5",
            "require asso and trigger for learning": "false",
            "comments": ""
        },
        "cedar.proc.steps.RewardHebbTrace": {
            "name": "Reward Hebb Trace 42",
            "association dimension": "1",
            "association sizes": [
                "9"
            ],
            "learning rate": "0.001",
            "fixed reward duration": "false",
            "reward duration": "200",
            "manual weights": "true",
            "weight centers": [
                "8"
            ],
            "weight sigmas": [
                "0.80000000000000004"
            ],
            "weight amplitude": "1",
            "reward threshold": "0.5",
            "reciprocal weight threshold": "0.5",
            "require asso and trigger for learning": "false",
            "comments": ""
        },
        "cedar.proc.steps.RewardHebbTrace": {
            "name": "Reward Hebb Trace 5",
            "association dimension": "1",
            "association sizes": [
                "6"
            ],
            "learning rate": "0.10000000000000001",
            "fixed reward duration": "false",
            "reward duration": "200",
            "manual weights": "false",
            "weight centers": [
                "3"
            ],
            "weight sigmas": [
                "3"
            ],
            "weight amplitude": "6",
            "reward threshold": "0.5",
            "reciprocal weight threshold": "0.5",
            "require asso and trigger for learning": "false",
            "comments": ""
        },
        "cedar.proc.steps.RewardHebbTrace": {
            "name": "Reward Hebb Trace 6",
            "association dimension": "1",
            "association sizes": [
                "3"
            ],
            "learning rate": "0.10000000000000001",
            "fixed reward duration": "false",
            "reward duration": "200",
            "manual weights": "false",
            "weight centers": [
                "3"
            ],
            "weight sigmas": [
                "3"
            ],
            "weight amplitude": "6",
            "reward threshold": "0.5",
            "reciprocal weight threshold": "0.5",
            "require asso and trigger for learning": "false",
            "comments": ""
        },
        "cedar.proc.steps.RewardHebbTrace": {
            "name": "Reward Hebb Trace 7",
            "association dimension": "1",
            "association sizes": [
                "3"
            ],
            "learning rate": "0.10000000000000001",
            "fixed reward duration": "false",
            "reward duration": "200",
            "manual weights": "false",
            "weight centers": [
                "3"
            ],
            "weight sigmas": [
                "3"
            ],
            "weight amplitude": "6",
            "reward threshold": "0.5",
            "reciprocal weight threshold": "0.5",
            "require asso and trigger for learning": "false",
            "comments": ""
        },
        "cedar.proc.steps.RewardHebbTrace": {
            "name": "Reward Hebb Trace 8",
            "association dimension": "1",
            "association sizes": [
                "6"
            ],
            "learning rate": "0.10000000000000001",
            "fixed reward duration": "false",
            "reward duration": "200",
            "manual weights": "false",
            "weight centers": [
                "3"
            ],
            "weight sigmas": [
                "3"
            ],
            "weight amplitude": "6",
            "reward threshold": "0.5",
            "reciprocal weight threshold": "0.5",
            "require asso and trigger for learning": "false",
            "comments": ""
        },
        "cedar.proc.steps.RewardHebbTrace": {
            "name": "Reward Hebb Trace 9",
            "association dimension": "1",
            "association sizes": [
                "6"
            ],
            "learning rate": "0.10000000000000001",
            "fixed reward duration": "false",
            "reward duration": "200",
            "manual weights": "false",
            "weight centers": [
                "3"
            ],
            "weight sigmas": [
                "3"
            ],
            "weight amplitude": "6",
            "reward threshold": "0.5",
            "reciprocal weight threshold": "0.5",
            "require asso and trigger for learning": "false",
            "comments": ""
        },
        "cedar.processing.ScalarsToVector": {
            "name": "Scalars To Vector",
            "number of vector entries": "9",
            "comments": ""
        },
        "cedar.processing.ScalarsToVector": {
            "name": "Scalars To Vector 2",
            "number of vector entries": "6",
            "comments": ""
        },
        "cedar.processing.ScalarsToVector": {
            "name": "Scalars To Vector 3",
            "number of vector entries": "3",
            "comments": ""
        },
        "cedar.processing.ScalarsToVector": {
            "name": "Scalars To Vector 4",
            "number of vector entries": "3",
            "comments": ""
        },
        "cedar.processing.ScalarsToVector": {
            "name": "Scalars To Vector 5",
            "number of vector entries": "20",
            "comments": ""
        },
        "cedar.processing.ScalarsToVector": {
            "name": "Scalars To Vector 6",
            "number of vector entries": "3",
            "comments": ""
        },
        "cedar.dynamics.NeuralField": {
            "name": "Sound Concepts",
            "activation as output": "false",
            "discrete metric (workaround)": "true",
            "update stepIcon according to output": "true",
            "threshold for updating the stepIcon": "0.80000000000000004",
            "dimensionality": "1",
            "sizes": [
                "3"
            ],
            "time scale": "100",
            "resting level": "-0.75",
            "input noise gain": "0.10000000000000001",
            "multiplicative noise (input)": "false",
            "multiplicative noise (activation)": "false",
            "sigmoid": {
                "type": "cedar.aux.math.HeavisideSigmoid",
                "threshold": "0"
            },
            "global inhibition": "0",
            "lateral kernels": "",
            "lateral kernel convolution": {
                "borderType": "Zero",
                "mode": "Same",
                "engine": {
                    "type": "cedar.aux.conv.OpenCV"
                },
                "alternate even kernel center": "false"
            },
            "noise correlation kernel": {
                "dimensionality": "1",
                "anchor": [
                    "0"
                ],
                "amplitude": "0",
                "sigmas": [
                    "3"
                ],
                "normalize": "true",
                "shifts": [
                    "0"
                ],
                "limit": "5"
            },
            "comments": ""
        },
        "cedar.dynamics.NeuralField": {
            "name": "Sound Role Field",
            "activation as output": "false",
            "discrete metric (workaround)": "true",
            "update stepIcon according to output": "true",
            "threshold for updating the stepIcon": "0.80000000000000004",
            "dimensionality": "1",
            "sizes": [
                "3"
            ],
            "time scale": "100",
            "resting level": "-2.25",
            "input noise gain": "0.10000000000000001",
            "multiplicative noise (input)": "false",
            "multiplicative noise (activation)": "false",
            "sigmoid": {
                "type": "cedar.aux.math.HeavisideSigmoid",
                "threshold": "0"
            },
            "global inhibition": "-0.5",
            "lateral kernels": {
                "cedar.aux.kernel.Gauss": {
                    "dimensionality": "1",
                    "anchor": [
                        "0"
                    ],
                    "amplitude": "0.5",
                    "sigmas": [
                        "0.01"
                    ],
                    "normalize": "true",
                    "shifts": [
                        "0"
                    ],
                    "limit": "5"
                }
            },
            "lateral kernel convolution": {
                "borderType": "Zero",
                "mode": "Same",
                "engine": {
                    "type": "cedar.aux.conv.OpenCV"
                },
                "alternate even kernel center": "false"
            },
            "noise correlation kernel": {
                "dimensionality": "1",
                "anchor": [
                    "0"
                ],
                "amplitude": "0",
                "sigmas": [
                    "3"
                ],
                "normalize": "true",
                "shifts": [
                    "0"
                ],
                "limit": "5"
            },
            "comments": ""
        },
        "cedar.dynamics.NeuralField": {
            "name": "Sound-Attention-Field",
            "activation as output": "false",
            "discrete metric (workaround)": "false",
            "update stepIcon according to output": "true",
            "threshold for updating the stepIcon": "0.80000000000000004",
            "dimensionality": "1",
            "sizes": [
                "10"
            ],
            "time scale": "100",
            "resting level": "-1.75",
            "input noise gain": "0.10000000000000001",
            "multiplicative noise (input)": "false",
            "multiplicative noise (activation)": "false",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0",
                "beta": "100"
            },
            "global inhibition": "-0.49999999999999978",
            "lateral kernels": {
                "cedar.aux.kernel.Gauss": {
                    "dimensionality": "1",
                    "anchor": [
                        "0"
                    ],
                    "amplitude": "1.1000000000000001",
                    "sigmas": [
                        "1"
                    ],
                    "normalize": "true",
                    "shifts": [
                        "0"
                    ],
                    "limit": "5"
                }
            },
            "lateral kernel convolution": {
                "borderType": "Zero",
                "mode": "Same",
                "engine": {
                    "type": "cedar.aux.conv.OpenCV"
                },
                "alternate even kernel center": "false"
            },
            "noise correlation kernel": {
                "dimensionality": "1",
                "anchor": [
                    "0"
                ],
                "amplitude": "0",
                "sigmas": [
                    "3"
                ],
                "normalize": "true",
                "shifts": [
                    "0"
                ],
                "limit": "5"
            },
            "comments": ""
        },
        "cedar.dynamics.NeuralField": {
            "name": "Sound-Change-Detection",
            "activation as output": "false",
            "discrete metric (workaround)": "true",
            "update stepIcon according to output": "true",
            "threshold for updating the stepIcon": "0.80000000000000004",
            "dimensionality": "1",
            "sizes": [
                "3"
            ],
            "time scale": "100",
            "resting level": "-0.75",
            "input noise gain": "0.10000000000000001",
            "multiplicative noise (input)": "false",
            "multiplicative noise (activation)": "false",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0",
                "beta": "100"
            },
            "global inhibition": "0",
            "lateral kernels": "",
            "lateral kernel convolution": {
                "borderType": "Zero",
                "mode": "Same",
                "engine": {
                    "type": "cedar.aux.conv.OpenCV"
                },
                "alternate even kernel center": "false"
            },
            "noise correlation kernel": {
                "dimensionality": "1",
                "anchor": [
                    "0"
                ],
                "amplitude": "0",
                "sigmas": [
                    "3"
                ],
                "normalize": "true",
                "shifts": [
                    "0"
                ],
                "limit": "5"
            },
            "comments": ""
        },
        "cedar.dynamics.NeuralField": {
            "name": "Sound-Change-Gate",
            "activation as output": "false",
            "discrete metric (workaround)": "true",
            "update stepIcon according to output": "true",
            "threshold for updating the stepIcon": "0.80000000000000004",
            "dimensionality": "1",
            "sizes": [
                "3"
            ],
            "time scale": "100",
            "resting level": "-1.75",
            "input noise gain": "0.10000000000000001",
            "multiplicative noise (input)": "false",
            "multiplicative noise (activation)": "false",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0",
                "beta": "100"
            },
            "global inhibition": "0",
            "lateral kernels": "",
            "lateral kernel convolution": {
                "borderType": "Zero",
                "mode": "Same",
                "engine": {
                    "type": "cedar.aux.conv.OpenCV"
                },
                "alternate even kernel center": "false"
            },
            "noise correlation kernel": {
                "dimensionality": "1",
                "anchor": [
                    "0"
                ],
                "amplitude": "0",
                "sigmas": [
                    "3"
                ],
                "normalize": "true",
                "shifts": [
                    "0"
                ],
                "limit": "5"
            },
            "comments": ""
        },
        "cedar.dynamics.NeuralField": {
            "name": "Sound-Change-Inhibition",
            "activation as output": "false",
            "discrete metric (workaround)": "true",
            "update stepIcon according to output": "true",
            "threshold for updating the stepIcon": "0.80000000000000004",
            "dimensionality": "1",
            "sizes": [
                "3"
            ],
            "time scale": "2000",
            "resting level": "-0.75",
            "input noise gain": "0.10000000000000001",
            "multiplicative noise (input)": "false",
            "multiplicative noise (activation)": "false",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0",
                "beta": "100"
            },
            "global inhibition": "0",
            "lateral kernels": "",
            "lateral kernel convolution": {
                "borderType": "Zero",
                "mode": "Same",
                "engine": {
                    "type": "cedar.aux.conv.OpenCV"
                },
                "alternate even kernel center": "false"
            },
            "noise correlation kernel": {
                "dimensionality": "1",
                "anchor": [
                    "0"
                ],
                "amplitude": "0",
                "sigmas": [
                    "3"
                ],
                "normalize": "true",
                "shifts": [
                    "0"
                ],
                "limit": "5"
            },
            "comments": ""
        },
        "cedar.dynamics.NeuralField": {
            "name": "Sound-Perception",
            "activation as output": "false",
            "discrete metric (workaround)": "false",
            "update stepIcon according to output": "true",
            "threshold for updating the stepIcon": "0.80000000000000004",
            "dimensionality": "1",
            "sizes": [
                "10"
            ],
            "time scale": "100",
            "resting level": "-0.75",
            "input noise gain": "0.10000000000000001",
            "multiplicative noise (input)": "false",
            "multiplicative noise (activation)": "false",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0",
                "beta": "100"
            },
            "global inhibition": "0",
            "lateral kernels": "",
            "lateral kernel convolution": {
                "borderType": "Zero",
                "mode": "Same",
                "engine": {
                    "type": "cedar.aux.conv.OpenCV"
                },
                "alternate even kernel center": "false"
            },
            "noise correlation kernel": {
                "dimensionality": "1",
                "anchor": [
                    "0"
                ],
                "amplitude": "0",
                "sigmas": [
                    "3"
                ],
                "normalize": "true",
                "shifts": [
                    "0"
                ],
                "limit": "5"
            },
            "comments": ""
        },
        "cedar.dynamics.NeuralField": {
            "name": "Sound-Recall",
            "activation as output": "false",
            "discrete metric (workaround)": "true",
            "update stepIcon according to output": "true",
            "threshold for updating the stepIcon": "0.80000000000000004",
            "dimensionality": "1",
            "sizes": [
                "3"
            ],
            "time scale": "100",
            "resting level": "-1.75",
            "input noise gain": "0.10000000000000001",
            "multiplicative noise (input)": "false",
            "multiplicative noise (activation)": "false",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0",
                "beta": "100"
            },
            "global inhibition": "0",
            "lateral kernels": {
                "cedar.aux.kernel.Gauss": {
                    "dimensionality": "1",
                    "anchor": [
                        "0"
                    ],
                    "amplitude": "2",
                    "sigmas": [
                        "0.01"
                    ],
                    "normalize": "true",
                    "shifts": [
                        "0"
                    ],
                    "limit": "5"
                }
            },
            "lateral kernel convolution": {
                "borderType": "Zero",
                "mode": "Same",
                "engine": {
                    "type": "cedar.aux.conv.OpenCV"
                },
                "alternate even kernel center": "false"
            },
            "noise correlation kernel": {
                "dimensionality": "1",
                "anchor": [
                    "0"
                ],
                "amplitude": "0",
                "sigmas": [
                    "3"
                ],
                "normalize": "true",
                "shifts": [
                    "0"
                ],
                "limit": "5"
            },
            "comments": ""
        },
        "cedar.dynamics.NeuralField": {
            "name": "Sound-Recall-CoD",
            "activation as output": "false",
            "discrete metric (workaround)": "false",
            "update stepIcon according to output": "true",
            "threshold for updating the stepIcon": "0.80000000000000004",
            "dimensionality": "0",
            "sizes": "",
            "time scale": "400",
            "resting level": "-0.75",
            "input noise gain": "0.10000000000000001",
            "multiplicative noise (input)": "false",
            "multiplicative noise (activation)": "false",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0",
                "beta": "100"
            },
            "global inhibition": "0",
            "lateral kernels": "",
            "lateral kernel convolution": {
                "borderType": "Zero",
                "mode": "Same",
                "engine": {
                    "type": "cedar.aux.conv.OpenCV"
                },
                "alternate even kernel center": "false"
            },
            "noise correlation kernel": {
                "dimensionality": "1",
                "anchor": [
                    "0"
                ],
                "amplitude": "0",
                "sigmas": [
                    "3"
                ],
                "normalize": "true",
                "shifts": [
                    "0"
                ],
                "limit": "5"
            },
            "comments": ""
        },
        "cedar.dynamics.NeuralField": {
            "name": "Sound-Recall-CoS",
            "activation as output": "false",
            "discrete metric (workaround)": "false",
            "update stepIcon according to output": "true",
            "threshold for updating the stepIcon": "0.80000000000000004",
            "dimensionality": "0",
            "sizes": "",
            "time scale": "100",
            "resting level": "-1.75",
            "input noise gain": "0.10000000000000001",
            "multiplicative noise (input)": "false",
            "multiplicative noise (activation)": "false",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0",
                "beta": "100"
            },
            "global inhibition": "0",
            "lateral kernels": "",
            "lateral kernel convolution": {
                "borderType": "Zero",
                "mode": "Same",
                "engine": {
                    "type": "cedar.aux.conv.OpenCV"
                },
                "alternate even kernel center": "false"
            },
            "noise correlation kernel": {
                "dimensionality": "1",
                "anchor": [
                    "0"
                ],
                "amplitude": "0",
                "sigmas": [
                    "3"
                ],
                "normalize": "true",
                "shifts": [
                    "0"
                ],
                "limit": "5"
            },
            "comments": ""
        },
        "cedar.dynamics.NeuralField": {
            "name": "Sound-Recall-Intention",
            "activation as output": "false",
            "discrete metric (workaround)": "false",
            "update stepIcon according to output": "true",
            "threshold for updating the stepIcon": "0.80000000000000004",
            "dimensionality": "0",
            "sizes": "",
            "time scale": "100",
            "resting level": "-0.75",
            "input noise gain": "0.10000000000000001",
            "multiplicative noise (input)": "false",
            "multiplicative noise (activation)": "false",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0",
                "beta": "100"
            },
            "global inhibition": "0",
            "lateral kernels": "",
            "lateral kernel convolution": {
                "borderType": "Zero",
                "mode": "Same",
                "engine": {
                    "type": "cedar.aux.conv.OpenCV"
                },
                "alternate even kernel center": "false"
            },
            "noise correlation kernel": {
                "dimensionality": "1",
                "anchor": [
                    "0"
                ],
                "amplitude": "0",
                "sigmas": [
                    "3"
                ],
                "normalize": "true",
                "shifts": [
                    "0"
                ],
                "limit": "5"
            },
            "comments": ""
        },
        "cedar.dynamics.SpaceToRateCode": {
            "name": "Space To Rate Code",
            "tau": "0.1 s",
            "lowerLimit": "0",
            "upperLimit": "52",
            "jump to fixed point": "false",
            "use cyclic mean": "false",
            "comments": ""
        },
        "cedar.processing.sources.GaussInput": {
            "name": "Space-Action-Field",
            "dimensionality": "1",
            "sizes": [
                "52"
            ],
            "amplitude": "1",
            "centers": [
                "26"
            ],
            "sigma": [
                "2"
            ],
            "cyclic": "false",
            "comments": ""
        },
        "cedar.dynamics.NeuralField": {
            "name": "Space-Attention-Field",
            "activation as output": "false",
            "discrete metric (workaround)": "false",
            "update stepIcon according to output": "true",
            "threshold for updating the stepIcon": "0.80000000000000004",
            "dimensionality": "1",
            "sizes": [
                "52"
            ],
            "time scale": "100",
            "resting level": "-0.75",
            "input noise gain": "0.10000000000000001",
            "multiplicative noise (input)": "false",
            "multiplicative noise (activation)": "false",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0",
                "beta": "100"
            },
            "global inhibition": "0",
            "lateral kernels": "",
            "lateral kernel convolution": {
                "borderType": "Zero",
                "mode": "Same",
                "engine": {
                    "type": "cedar.aux.conv.OpenCV"
                },
                "alternate even kernel center": "false"
            },
            "noise correlation kernel": {
                "dimensionality": "1",
                "anchor": [
                    "0"
                ],
                "amplitude": "0",
                "sigmas": [
                    "3"
                ],
                "normalize": "true",
                "shifts": [
                    "0"
                ],
                "limit": "5"
            },
            "comments": ""
        },
        "cedar.dynamics.NeuralField": {
            "name": "Space-matching-Field",
            "activation as output": "false",
            "discrete metric (workaround)": "false",
            "update stepIcon according to output": "true",
            "threshold for updating the stepIcon": "0.80000000000000004",
            "dimensionality": "1",
            "sizes": [
                "52"
            ],
            "time scale": "100",
            "resting level": "-1.75",
            "input noise gain": "0.10000000000000001",
            "multiplicative noise (input)": "false",
            "multiplicative noise (activation)": "false",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0",
                "beta": "100"
            },
            "global inhibition": "0",
            "lateral kernels": "",
            "lateral kernel convolution": {
                "borderType": "Zero",
                "mode": "Same",
                "engine": {
                    "type": "cedar.aux.conv.OpenCV"
                },
                "alternate even kernel center": "false"
            },
            "noise correlation kernel": {
                "dimensionality": "1",
                "anchor": [
                    "0"
                ],
                "amplitude": "0",
                "sigmas": [
                    "3"
                ],
                "normalize": "true",
                "shifts": [
                    "0"
                ],
                "limit": "5"
            },
            "comments": ""
        },
        "cedar.processing.StaticGain": {
            "name": "Static Gain",
            "gain factor": "0.002",
            "comments": ""
        },
        "cedar.processing.StaticGain": {
            "name": "Static Gain 10",
            "gain factor": "-1",
            "comments": ""
        },
        "cedar.processing.StaticGain": {
            "name": "Static Gain 100",
            "gain factor": "1.3",
            "comments": ""
        },
        "cedar.processing.StaticGain": {
            "name": "Static Gain 101",
            "gain factor": "-1",
            "comments": ""
        },
        "cedar.processing.StaticGain": {
            "name": "Static Gain 102",
            "gain factor": "3",
            "comments": ""
        },
        "cedar.processing.StaticGain": {
            "name": "Static Gain 103",
            "gain factor": "-1",
            "comments": ""
        },
        "cedar.processing.StaticGain": {
            "name": "Static Gain 104",
            "gain factor": "-1",
            "comments": ""
        },
        "cedar.processing.StaticGain": {
            "name": "Static Gain 105",
            "gain factor": "2",
            "comments": ""
        },
        "cedar.processing.StaticGain": {
            "name": "Static Gain 106",
            "gain factor": "1",
            "comments": ""
        },
        "cedar.processing.StaticGain": {
            "name": "Static Gain 107",
            "gain factor": "-1",
            "comments": ""
        },
        "cedar.processing.StaticGain": {
            "name": "Static Gain 108",
            "gain factor": "-0.20000000000000001",
            "comments": ""
        },
        "cedar.processing.StaticGain": {
            "name": "Static Gain 109",
            "gain factor": "0.10000000000000001",
            "comments": ""
        },
        "cedar.processing.StaticGain": {
            "name": "Static Gain 11",
            "gain factor": "-1",
            "comments": ""
        },
        "cedar.processing.StaticGain": {
            "name": "Static Gain 110",
            "gain factor": "0.10000000000000001",
            "comments": ""
        },
        "cedar.processing.StaticGain": {
            "name": "Static Gain 111",
            "gain factor": "-0.20000000000000001",
            "comments": ""
        },
        "cedar.processing.StaticGain": {
            "name": "Static Gain 112",
            "gain factor": "0.75",
            "comments": ""
        },
        "cedar.processing.StaticGain": {
            "name": "Static Gain 113",
            "gain factor": "0.5",
            "comments": ""
        },
        "cedar.processing.StaticGain": {
            "name": "Static Gain 114",
            "gain factor": "-1",
            "comments": ""
        },
        "cedar.processing.StaticGain": {
            "name": "Static Gain 115",
            "gain factor": "-1",
            "comments": ""
        },
        "cedar.processing.StaticGain": {
            "name": "Static Gain 116",
            "gain factor": "2",
            "comments": ""
        },
        "cedar.processing.StaticGain": {
            "name": "Static Gain 117",
            "gain factor": "-1",
            "comments": ""
        },
        "cedar.processing.StaticGain": {
            "name": "Static Gain 118",
            "gain factor": "-1",
            "comments": ""
        },
        "cedar.processing.StaticGain": {
            "name": "Static Gain 12",
            "gain factor": "-1",
            "comments": ""
        },
        "cedar.processing.StaticGain": {
            "name": "Static Gain 13",
            "gain factor": "-1",
            "comments": ""
        },
        "cedar.processing.StaticGain": {
            "name": "Static Gain 14",
            "gain factor": "-1",
            "comments": ""
        },
        "cedar.processing.StaticGain": {
            "name": "Static Gain 15",
            "gain factor": "-1",
            "comments": ""
        },
        "cedar.processing.StaticGain": {
            "name": "Static Gain 16",
            "gain factor": "-1",
            "comments": ""
        },
        "cedar.processing.StaticGain": {
            "name": "Static Gain 17",
            "gain factor": "-1",
            "comments": ""
        },
        "cedar.processing.StaticGain": {
            "name": "Static Gain 18",
            "gain factor": "-1",
            "comments": ""
        },
        "cedar.processing.StaticGain": {
            "name": "Static Gain 19",
            "gain factor": "-1",
            "comments": ""
        },
        "cedar.processing.StaticGain": {
            "name": "Static Gain 2",
            "gain factor": "-1",
            "comments": ""
        },
        "cedar.processing.StaticGain": {
            "name": "Static Gain 20",
            "gain factor": "-1",
            "comments": ""
        },
        "cedar.processing.StaticGain": {
            "name": "Static Gain 21",
            "gain factor": "-1",
            "comments": ""
        },
        "cedar.processing.StaticGain": {
            "name": "Static Gain 22",
            "gain factor": "-1",
            "comments": ""
        },
        "cedar.processing.StaticGain": {
            "name": "Static Gain 23",
            "gain factor": "-1",
            "comments": ""
        },
        "cedar.processing.StaticGain": {
            "name": "Static Gain 24",
            "gain factor": "-1.5",
            "comments": ""
        },
        "cedar.processing.StaticGain": {
            "name": "Static Gain 25",
            "gain factor": "-1",
            "comments": ""
        },
        "cedar.processing.StaticGain": {
            "name": "Static Gain 26",
            "gain factor": "-1.5",
            "comments": ""
        },
        "cedar.processing.StaticGain": {
            "name": "Static Gain 27",
            "gain factor": "-1",
            "comments": ""
        },
        "cedar.processing.StaticGain": {
            "name": "Static Gain 28",
            "gain factor": "-1.5",
            "comments": ""
        },
        "cedar.processing.StaticGain": {
            "name": "Static Gain 29",
            "gain factor": "-1",
            "comments": ""
        },
        "cedar.processing.StaticGain": {
            "name": "Static Gain 3",
            "gain factor": "-1.5",
            "comments": ""
        },
        "cedar.processing.StaticGain": {
            "name": "Static Gain 30",
            "gain factor": "-1.5",
            "comments": ""
        },
        "cedar.processing.StaticGain": {
            "name": "Static Gain 31",
            "gain factor": "-1",
            "comments": ""
        },
        "cedar.processing.StaticGain": {
            "name": "Static Gain 32",
            "gain factor": "-1",
            "comments": ""
        },
        "cedar.processing.StaticGain": {
            "name": "Static Gain 33",
            "gain factor": "-1.5",
            "comments": ""
        },
        "cedar.processing.StaticGain": {
            "name": "Static Gain 34",
            "gain factor": "-1",
            "comments": ""
        },
        "cedar.processing.StaticGain": {
            "name": "Static Gain 35",
            "gain factor": "1.5",
            "comments": ""
        },
        "cedar.processing.StaticGain": {
            "name": "Static Gain 36",
            "gain factor": "1.5",
            "comments": ""
        },
        "cedar.processing.StaticGain": {
            "name": "Static Gain 37",
            "gain factor": "1.5",
            "comments": ""
        },
        "cedar.processing.StaticGain": {
            "name": "Static Gain 38",
            "gain factor": "1.5",
            "comments": ""
        },
        "cedar.processing.StaticGain": {
            "name": "Static Gain 39",
            "gain factor": "1.5",
            "comments": ""
        },
        "cedar.processing.StaticGain": {
            "name": "Static Gain 4",
            "gain factor": "-1",
            "comments": ""
        },
        "cedar.processing.StaticGain": {
            "name": "Static Gain 40",
            "gain factor": "1.5",
            "comments": ""
        },
        "cedar.processing.StaticGain": {
            "name": "Static Gain 41",
            "gain factor": "1.5",
            "comments": ""
        },
        "cedar.processing.StaticGain": {
            "name": "Static Gain 42",
            "gain factor": "1.5",
            "comments": ""
        },
        "cedar.processing.StaticGain": {
            "name": "Static Gain 43",
            "gain factor": "1.5",
            "comments": ""
        },
        "cedar.processing.StaticGain": {
            "name": "Static Gain 44",
            "gain factor": "1.5",
            "comments": ""
        },
        "cedar.processing.StaticGain": {
            "name": "Static Gain 45",
            "gain factor": "1.5",
            "comments": ""
        },
        "cedar.processing.StaticGain": {
            "name": "Static Gain 46",
            "gain factor": "1.5",
            "comments": ""
        },
        "cedar.processing.StaticGain": {
            "name": "Static Gain 47",
            "gain factor": "1.5",
            "comments": ""
        },
        "cedar.processing.StaticGain": {
            "name": "Static Gain 48",
            "gain factor": "1.5",
            "comments": ""
        },
        "cedar.processing.StaticGain": {
            "name": "Static Gain 49",
            "gain factor": "1.5",
            "comments": ""
        },
        "cedar.processing.StaticGain": {
            "name": "Static Gain 5",
            "gain factor": "2",
            "comments": ""
        },
        "cedar.processing.StaticGain": {
            "name": "Static Gain 50",
            "gain factor": "1.5",
            "comments": ""
        },
        "cedar.processing.StaticGain": {
            "name": "Static Gain 51",
            "gain factor": "1.5",
            "comments": ""
        },
        "cedar.processing.StaticGain": {
            "name": "Static Gain 52",
            "gain factor": "1.5",
            "comments": ""
        },
        "cedar.processing.StaticGain": {
            "name": "Static Gain 53",
            "gain factor": "0.29999999999999999",
            "comments": ""
        },
        "cedar.processing.StaticGain": {
            "name": "Static Gain 54",
            "gain factor": "0.29999999999999999",
            "comments": ""
        },
        "cedar.processing.StaticGain": {
            "name": "Static Gain 55",
            "gain factor": "0.29999999999999999",
            "comments": ""
        },
        "cedar.processing.StaticGain": {
            "name": "Static Gain 56",
            "gain factor": "0.29999999999999999",
            "comments": ""
        },
        "cedar.processing.StaticGain": {
            "name": "Static Gain 57",
            "gain factor": "0.29999999999999999",
            "comments": ""
        },
        "cedar.processing.StaticGain": {
            "name": "Static Gain 58",
            "gain factor": "0.29999999999999999",
            "comments": ""
        },
        "cedar.processing.StaticGain": {
            "name": "Static Gain 59",
            "gain factor": "0.80000000000000004",
            "comments": ""
        },
        "cedar.processing.StaticGain": {
            "name": "Static Gain 6",
            "gain factor": "0.25",
            "comments": ""
        },
        "cedar.processing.StaticGain": {
            "name": "Static Gain 60",
            "gain factor": "2",
            "comments": ""
        },
        "cedar.processing.StaticGain": {
            "name": "Static Gain 61",
            "gain factor": "0.5",
            "comments": ""
        },
        "cedar.processing.StaticGain": {
            "name": "Static Gain 62",
            "gain factor": "0.5",
            "comments": ""
        },
        "cedar.processing.StaticGain": {
            "name": "Static Gain 63",
            "gain factor": "0.5",
            "comments": ""
        },
        "cedar.processing.StaticGain": {
            "name": "Static Gain 64",
            "gain factor": "0.5",
            "comments": ""
        },
        "cedar.processing.StaticGain": {
            "name": "Static Gain 65",
            "gain factor": "0.5",
            "comments": ""
        },
        "cedar.processing.StaticGain": {
            "name": "Static Gain 66",
            "gain factor": "0.5",
            "comments": ""
        },
        "cedar.processing.StaticGain": {
            "name": "Static Gain 67",
            "gain factor": "6",
            "comments": ""
        },
        "cedar.processing.StaticGain": {
            "name": "Static Gain 68",
            "gain factor": "3",
            "comments": ""
        },
        "cedar.processing.StaticGain": {
            "name": "Static Gain 69",
            "gain factor": "-1",
            "comments": ""
        },
        "cedar.processing.StaticGain": {
            "name": "Static Gain 7",
            "gain factor": "-4",
            "comments": ""
        },
        "cedar.processing.StaticGain": {
            "name": "Static Gain 70",
            "gain factor": "2",
            "comments": ""
        },
        "cedar.processing.StaticGain": {
            "name": "Static Gain 71",
            "gain factor": "-1",
            "comments": ""
        },
        "cedar.processing.StaticGain": {
            "name": "Static Gain 72",
            "gain factor": "1.25",
            "comments": ""
        },
        "cedar.processing.StaticGain": {
            "name": "Static Gain 73",
            "gain factor": "1.25",
            "comments": ""
        },
        "cedar.processing.StaticGain": {
            "name": "Static Gain 74",
            "gain factor": "2",
            "comments": ""
        },
        "cedar.processing.StaticGain": {
            "name": "Static Gain 75",
            "gain factor": "0.50000000000000011",
            "comments": ""
        },
        "cedar.processing.StaticGain": {
            "name": "Static Gain 76",
            "gain factor": "0.5",
            "comments": ""
        },
        "cedar.processing.StaticGain": {
            "name": "Static Gain 77",
            "gain factor": "2",
            "comments": ""
        },
        "cedar.processing.StaticGain": {
            "name": "Static Gain 78",
            "gain factor": "-1",
            "comments": ""
        },
        "cedar.processing.StaticGain": {
            "name": "Static Gain 79",
            "gain factor": "-0.20000000000000001",
            "comments": ""
        },
        "cedar.processing.StaticGain": {
            "name": "Static Gain 8",
            "gain factor": "-1",
            "comments": ""
        },
        "cedar.processing.StaticGain": {
            "name": "Static Gain 80",
            "gain factor": "-0.20000000000000001",
            "comments": ""
        },
        "cedar.processing.StaticGain": {
            "name": "Static Gain 81",
            "gain factor": "0.5",
            "comments": ""
        },
        "cedar.processing.StaticGain": {
            "name": "Static Gain 82",
            "gain factor": "-1",
            "comments": ""
        },
        "cedar.processing.StaticGain": {
            "name": "Static Gain 83",
            "gain factor": "-2",
            "comments": ""
        },
        "cedar.processing.StaticGain": {
            "name": "Static Gain 84",
            "gain factor": "1.1000000000000001",
            "comments": ""
        },
        "cedar.processing.StaticGain": {
            "name": "Static Gain 85",
            "gain factor": "1.25",
            "comments": ""
        },
        "cedar.processing.StaticGain": {
            "name": "Static Gain 86",
            "gain factor": "-0.20000000000000001",
            "comments": ""
        },
        "cedar.processing.StaticGain": {
            "name": "Static Gain 87",
            "gain factor": "2",
            "comments": ""
        },
        "cedar.processing.StaticGain": {
            "name": "Static Gain 88",
            "gain factor": "-1",
            "comments": ""
        },
        "cedar.processing.StaticGain": {
            "name": "Static Gain 89",
            "gain factor": "-1",
            "comments": ""
        },
        "cedar.processing.StaticGain": {
            "name": "Static Gain 9",
            "gain factor": "-1",
            "comments": ""
        },
        "cedar.processing.StaticGain": {
            "name": "Static Gain 90",
            "gain factor": "-2",
            "comments": ""
        },
        "cedar.processing.StaticGain": {
            "name": "Static Gain 91",
            "gain factor": "0.10000000000000001",
            "comments": ""
        },
        "cedar.processing.StaticGain": {
            "name": "Static Gain 92",
            "gain factor": "1",
            "comments": ""
        },
        "cedar.processing.StaticGain": {
            "name": "Static Gain 93",
            "gain factor": "-2",
            "comments": ""
        },
        "cedar.processing.StaticGain": {
            "name": "Static Gain 94",
            "gain factor": "1",
            "comments": ""
        },
        "cedar.processing.StaticGain": {
            "name": "Static Gain 95",
            "gain factor": "-1",
            "comments": ""
        },
        "cedar.processing.StaticGain": {
            "name": "Static Gain 96",
            "gain factor": "-1",
            "comments": ""
        },
        "cedar.processing.StaticGain": {
            "name": "Static Gain 97",
            "gain factor": "-0.20000000000000001",
            "comments": ""
        },
        "cedar.processing.StaticGain": {
            "name": "Static Gain 98",
            "gain factor": "0.050000000000000003",
            "comments": ""
        },
        "cedar.processing.StaticGain": {
            "name": "Static Gain 99",
            "gain factor": "-1",
            "comments": ""
        },
        "cedar.dynamics.NeuralField": {
            "name": "Strategie-Gate",
            "activation as output": "false",
            "discrete metric (workaround)": "true",
            "update stepIcon according to output": "true",
            "threshold for updating the stepIcon": "0.80000000000000004",
            "dimensionality": "2",
            "sizes": [
                "6",
                "3"
            ],
            "time scale": "100",
            "resting level": "-1.75",
            "input noise gain": "0.10000000000000001",
            "multiplicative noise (input)": "false",
            "multiplicative noise (activation)": "false",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0",
                "beta": "100"
            },
            "global inhibition": "0",
            "lateral kernels": "",
            "lateral kernel convolution": {
                "borderType": "Zero",
                "mode": "Same",
                "engine": {
                    "type": "cedar.aux.conv.OpenCV"
                },
                "alternate even kernel center": "false"
            },
            "noise correlation kernel": {
                "dimensionality": "2",
                "anchor": [
                    "0",
                    "0"
                ],
                "amplitude": "0",
                "sigmas": [
                    "3",
                    "3"
                ],
                "normalize": "true",
                "shifts": [
                    "0",
                    "0"
                ],
                "limit": "5"
            },
            "comments": ""
        },
        "cedar.dynamics.Preshape": {
            "name": "Strategy-Habituation",
            "dimensionality": "2",
            "sizes": [
                "6",
                "3"
            ],
            "time scale build up": "10000",
            "time scale decay": "5000",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0.5",
                "beta": "1000"
            },
            "comments": ""
        },
        "cedar.dynamics.Preshape": {
            "name": "Strategy-Perseveration",
            "dimensionality": "2",
            "sizes": [
                "6",
                "3"
            ],
            "time scale build up": "3000",
            "time scale decay": "10000",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0.5",
                "beta": "1000"
            },
            "comments": ""
        },
        "cedar.dynamics.NeuralField": {
            "name": "Strategy-Selection",
            "activation as output": "false",
            "discrete metric (workaround)": "true",
            "update stepIcon according to output": "true",
            "threshold for updating the stepIcon": "0.80000000000000004",
            "dimensionality": "2",
            "sizes": [
                "6",
                "3"
            ],
            "time scale": "100",
            "resting level": "-1.75",
            "input noise gain": "0.10000000000000001",
            "multiplicative noise (input)": "false",
            "multiplicative noise (activation)": "false",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0",
                "beta": "40"
            },
            "global inhibition": "-0.40000000000000008",
            "lateral kernels": {
                "cedar.aux.kernel.Gauss": {
                    "dimensionality": "2",
                    "anchor": [
                        "0",
                        "0"
                    ],
                    "amplitude": "1.6000000000000001",
                    "sigmas": [
                        "0.01",
                        "0.01"
                    ],
                    "normalize": "true",
                    "shifts": [
                        "0",
                        "0"
                    ],
                    "limit": "5"
                }
            },
            "lateral kernel convolution": {
                "borderType": "Zero",
                "mode": "Same",
                "engine": {
                    "type": "cedar.aux.conv.OpenCV"
                },
                "alternate even kernel center": "false"
            },
            "noise correlation kernel": {
                "dimensionality": "2",
                "anchor": [
                    "0",
                    "0"
                ],
                "amplitude": "0",
                "sigmas": [
                    "3",
                    "3"
                ],
                "normalize": "true",
                "shifts": [
                    "0",
                    "0"
                ],
                "limit": "5"
            },
            "comments": ""
        },
        "cedar.dynamics.NeuralField": {
            "name": "Supervisor-Task-Input",
            "activation as output": "false",
            "discrete metric (workaround)": "true",
            "update stepIcon according to output": "true",
            "threshold for updating the stepIcon": "0.80000000000000004",
            "dimensionality": "1",
            "sizes": [
                "8"
            ],
            "time scale": "100",
            "resting level": "-0.75",
            "input noise gain": "0.10000000000000001",
            "multiplicative noise (input)": "false",
            "multiplicative noise (activation)": "false",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0",
                "beta": "100"
            },
            "global inhibition": "0",
            "lateral kernels": "",
            "lateral kernel convolution": {
                "borderType": "Zero",
                "mode": "Same",
                "engine": {
                    "type": "cedar.aux.conv.OpenCV"
                },
                "alternate even kernel center": "false"
            },
            "noise correlation kernel": {
                "dimensionality": "1",
                "anchor": [
                    "0"
                ],
                "amplitude": "0",
                "sigmas": [
                    "3"
                ],
                "normalize": "true",
                "shifts": [
                    "0"
                ],
                "limit": "5"
            },
            "comments": ""
        },
        "cedar.processing.sinks.TCPWriter": {
            "name": "TCP-Break-Writer",
            "port": "50031",
            "ip_adress": "134.147.176.104",
            "timeout (ms)": "3000",
            "max timeouts": "50",
            "send interval (timesteps)": "1",
            "comments": ""
        },
        "cedar.processing.sinks.TCPWriter": {
            "name": "TCP-Goal-Writer",
            "port": "50033",
            "ip_adress": "134.147.176.104",
            "timeout (ms)": "3000",
            "max timeouts": "50",
            "send interval (timesteps)": "1",
            "comments": ""
        },
        "cedar.processing.sinks.TCPWriter": {
            "name": "TCP-LED-Writer",
            "port": "50032",
            "ip_adress": "134.147.176.104",
            "timeout (ms)": "3000",
            "max timeouts": "50",
            "send interval (timesteps)": "1",
            "comments": ""
        },
        "cedar.processing.sinks.TCPWriter": {
            "name": "TCP-Motor-Writer",
            "port": "50030",
            "ip_adress": "134.147.176.104",
            "timeout (ms)": "3000",
            "max timeouts": "50",
            "send interval (timesteps)": "1",
            "comments": ""
        },
        "cedar.processing.sources.TCPReader": {
            "name": "TCP-Task-reader",
            "buffer size": "32768",
            "port": "50023",
            "packet timeout (ms)": "500",
            "message timeout (ms)": "50",
            "accept interval (steps)": "30",
            "comments": ""
        },
        "cedar.processing.TransferFunction": {
            "name": "Transfer Function",
            "function": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0.050000000000000003",
                "beta": "100"
            },
            "comments": ""
        },
        "cedar.processing.TransferFunction": {
            "name": "Transfer Function 10",
            "function": {
                "type": "cedar.aux.math.HeavisideSigmoid",
                "threshold": "0.90000000000000002"
            },
            "comments": ""
        },
        "cedar.processing.TransferFunction": {
            "name": "Transfer Function 11",
            "function": {
                "type": "cedar.aux.math.HeavisideSigmoid",
                "threshold": "0.90000000000000002"
            },
            "comments": ""
        },
        "cedar.processing.TransferFunction": {
            "name": "Transfer Function 12",
            "function": {
                "type": "cedar.aux.math.HeavisideSigmoid",
                "threshold": "0.90000000000000002"
            },
            "comments": ""
        },
        "cedar.processing.TransferFunction": {
            "name": "Transfer Function 14",
            "function": {
                "type": "cedar.aux.math.HeavisideSigmoid",
                "threshold": "0.90000000000000002"
            },
            "comments": ""
        },
        "cedar.processing.TransferFunction": {
            "name": "Transfer Function 15",
            "function": {
                "type": "cedar.aux.math.HeavisideSigmoid",
                "threshold": "0.90000000000000002"
            },
            "comments": ""
        },
        "cedar.processing.TransferFunction": {
            "name": "Transfer Function 16",
            "function": {
                "type": "cedar.aux.math.HeavisideSigmoid",
                "threshold": "0.90000000000000002"
            },
            "comments": ""
        },
        "cedar.processing.TransferFunction": {
            "name": "Transfer Function 18",
            "function": {
                "type": "cedar.aux.math.HeavisideSigmoid",
                "threshold": "0.90000000000000002"
            },
            "comments": ""
        },
        "cedar.processing.TransferFunction": {
            "name": "Transfer Function 19",
            "function": {
                "type": "cedar.aux.math.HeavisideSigmoid",
                "threshold": "0.90000000000000002"
            },
            "comments": ""
        },
        "cedar.processing.TransferFunction": {
            "name": "Transfer Function 2",
            "function": {
                "type": "cedar.aux.math.HeavisideSigmoid",
                "threshold": "0.48999999999999999"
            },
            "comments": ""
        },
        "cedar.processing.TransferFunction": {
            "name": "Transfer Function 20",
            "function": {
                "type": "cedar.aux.math.HeavisideSigmoid",
                "threshold": "0.90000000000000002"
            },
            "comments": ""
        },
        "cedar.processing.TransferFunction": {
            "name": "Transfer Function 22",
            "function": {
                "type": "cedar.aux.math.HeavisideSigmoid",
                "threshold": "0.90000000000000002"
            },
            "comments": ""
        },
        "cedar.processing.TransferFunction": {
            "name": "Transfer Function 23",
            "function": {
                "type": "cedar.aux.math.HeavisideSigmoid",
                "threshold": "0.90000000000000002"
            },
            "comments": ""
        },
        "cedar.processing.TransferFunction": {
            "name": "Transfer Function 24",
            "function": {
                "type": "cedar.aux.math.HeavisideSigmoid",
                "threshold": "0.90000000000000002"
            },
            "comments": ""
        },
        "cedar.processing.TransferFunction": {
            "name": "Transfer Function 26",
            "function": {
                "type": "cedar.aux.math.HeavisideSigmoid",
                "threshold": "0.90000000000000002"
            },
            "comments": ""
        },
        "cedar.processing.TransferFunction": {
            "name": "Transfer Function 27",
            "function": {
                "type": "cedar.aux.math.HeavisideSigmoid",
                "threshold": "0.90000000000000002"
            },
            "comments": ""
        },
        "cedar.processing.TransferFunction": {
            "name": "Transfer Function 28",
            "function": {
                "type": "cedar.aux.math.HeavisideSigmoid",
                "threshold": "0.90000000000000002"
            },
            "comments": ""
        },
        "cedar.processing.TransferFunction": {
            "name": "Transfer Function 7",
            "function": {
                "type": "cedar.aux.math.HeavisideSigmoid",
                "threshold": "0.90000000000000002"
            },
            "comments": ""
        },
        "cedar.processing.TransferFunction": {
            "name": "Transfer Function 8",
            "function": {
                "type": "cedar.aux.math.HeavisideSigmoid",
                "threshold": "0.90000000000000002"
            },
            "comments": ""
        },
        "cedar.processing.TransferFunction": {
            "name": "Transfer Function 9",
            "function": {
                "type": "cedar.aux.math.HeavisideSigmoid",
                "threshold": "0.90000000000000002"
            },
            "comments": ""
        },
        "cedar.processing.VectorToScalars": {
            "name": "Vector To Scalars",
            "number of vector entries": "6",
            "comments": ""
        },
        "cedar.processing.VectorToScalars": {
            "name": "Vector To Scalars 2",
            "number of vector entries": "8",
            "comments": ""
        },
        "cedar.processing.VectorToScalars": {
            "name": "Vector To Scalars 3",
            "number of vector entries": "3",
            "comments": ""
        },
        "cedar.dynamics.NeuralField": {
            "name": "action 2",
            "activation as output": "false",
            "discrete metric (workaround)": "false",
            "update stepIcon according to output": "true",
            "threshold for updating the stepIcon": "0.80000000000000004",
            "dimensionality": "0",
            "sizes": "",
            "time scale": "100",
            "resting level": "-0.75",
            "input noise gain": "0.10000000000000001",
            "multiplicative noise (input)": "false",
            "multiplicative noise (activation)": "false",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0",
                "beta": "100"
            },
            "global inhibition": "0",
            "lateral kernels": "",
            "lateral kernel convolution": {
                "borderType": "Zero",
                "mode": "Same",
                "engine": {
                    "type": "cedar.aux.conv.OpenCV"
                },
                "alternate even kernel center": "false"
            },
            "noise correlation kernel": {
                "dimensionality": "1",
                "anchor": [
                    "0"
                ],
                "amplitude": "0",
                "sigmas": [
                    "3"
                ],
                "normalize": "true",
                "shifts": [
                    "0"
                ],
                "limit": "5"
            },
            "comments": ""
        },
        "cedar.dynamics.NeuralField": {
            "name": "action 3",
            "activation as output": "false",
            "discrete metric (workaround)": "false",
            "update stepIcon according to output": "true",
            "threshold for updating the stepIcon": "0.80000000000000004",
            "dimensionality": "0",
            "sizes": "",
            "time scale": "100",
            "resting level": "-0.75",
            "input noise gain": "0.10000000000000001",
            "multiplicative noise (input)": "false",
            "multiplicative noise (activation)": "false",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0",
                "beta": "100"
            },
            "global inhibition": "0",
            "lateral kernels": "",
            "lateral kernel convolution": {
                "borderType": "Zero",
                "mode": "Same",
                "engine": {
                    "type": "cedar.aux.conv.OpenCV"
                },
                "alternate even kernel center": "false"
            },
            "noise correlation kernel": {
                "dimensionality": "1",
                "anchor": [
                    "0"
                ],
                "amplitude": "0",
                "sigmas": [
                    "3"
                ],
                "normalize": "true",
                "shifts": [
                    "0"
                ],
                "limit": "5"
            },
            "comments": ""
        },
        "cedar.dynamics.NeuralField": {
            "name": "action1",
            "activation as output": "false",
            "discrete metric (workaround)": "false",
            "update stepIcon according to output": "true",
            "threshold for updating the stepIcon": "0.80000000000000004",
            "dimensionality": "0",
            "sizes": "",
            "time scale": "100",
            "resting level": "-0.75",
            "input noise gain": "0.10000000000000001",
            "multiplicative noise (input)": "false",
            "multiplicative noise (activation)": "false",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0",
                "beta": "100"
            },
            "global inhibition": "0",
            "lateral kernels": "",
            "lateral kernel convolution": {
                "borderType": "Zero",
                "mode": "Same",
                "engine": {
                    "type": "cedar.aux.conv.OpenCV"
                },
                "alternate even kernel center": "false"
            },
            "noise correlation kernel": {
                "dimensionality": "1",
                "anchor": [
                    "0"
                ],
                "amplitude": "0",
                "sigmas": [
                    "3"
                ],
                "normalize": "true",
                "shifts": [
                    "0"
                ],
                "limit": "5"
            },
            "comments": ""
        },
        "cedar.dynamics.NeuralField": {
            "name": "blue",
            "activation as output": "false",
            "discrete metric (workaround)": "false",
            "update stepIcon according to output": "true",
            "threshold for updating the stepIcon": "0.80000000000000004",
            "dimensionality": "0",
            "sizes": "",
            "time scale": "100",
            "resting level": "-0.75",
            "input noise gain": "0.10000000000000001",
            "multiplicative noise (input)": "false",
            "multiplicative noise (activation)": "false",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0",
                "beta": "100"
            },
            "global inhibition": "0",
            "lateral kernels": "",
            "lateral kernel convolution": {
                "borderType": "Zero",
                "mode": "Same",
                "engine": {
                    "type": "cedar.aux.conv.OpenCV"
                },
                "alternate even kernel center": "false"
            },
            "noise correlation kernel": {
                "dimensionality": "1",
                "anchor": [
                    "0"
                ],
                "amplitude": "0",
                "sigmas": [
                    "3"
                ],
                "normalize": "true",
                "shifts": [
                    "0"
                ],
                "limit": "5"
            },
            "comments": ""
        },
        "cedar.processing.ConstVector": {
            "name": "dx",
            "number of vector entries": "1",
            "entries": [
                "0.5"
            ],
            "comments": ""
        },
        "cedar.dynamics.NeuralField": {
            "name": "exploration-Task",
            "activation as output": "false",
            "discrete metric (workaround)": "false",
            "update stepIcon according to output": "true",
            "threshold for updating the stepIcon": "0.80000000000000004",
            "dimensionality": "0",
            "sizes": "",
            "time scale": "100",
            "resting level": "-0.75",
            "input noise gain": "0.10000000000000001",
            "multiplicative noise (input)": "false",
            "multiplicative noise (activation)": "false",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0",
                "beta": "100"
            },
            "global inhibition": "0",
            "lateral kernels": "",
            "lateral kernel convolution": {
                "borderType": "Zero",
                "mode": "Same",
                "engine": {
                    "type": "cedar.aux.conv.OpenCV"
                },
                "alternate even kernel center": "false"
            },
            "noise correlation kernel": {
                "dimensionality": "1",
                "anchor": [
                    "0"
                ],
                "amplitude": "0",
                "sigmas": [
                    "3"
                ],
                "normalize": "true",
                "shifts": [
                    "0"
                ],
                "limit": "5"
            },
            "comments": ""
        },
        "cedar.dynamics.NeuralField": {
            "name": "goal-reaching-task",
            "activation as output": "false",
            "discrete metric (workaround)": "false",
            "update stepIcon according to output": "true",
            "threshold for updating the stepIcon": "0.80000000000000004",
            "dimensionality": "0",
            "sizes": "",
            "time scale": "100",
            "resting level": "-0.75",
            "input noise gain": "0.10000000000000001",
            "multiplicative noise (input)": "false",
            "multiplicative noise (activation)": "false",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0",
                "beta": "100"
            },
            "global inhibition": "0",
            "lateral kernels": "",
            "lateral kernel convolution": {
                "borderType": "Zero",
                "mode": "Same",
                "engine": {
                    "type": "cedar.aux.conv.OpenCV"
                },
                "alternate even kernel center": "false"
            },
            "noise correlation kernel": {
                "dimensionality": "1",
                "anchor": [
                    "0"
                ],
                "amplitude": "0",
                "sigmas": [
                    "3"
                ],
                "normalize": "true",
                "shifts": [
                    "0"
                ],
                "limit": "5"
            },
            "comments": ""
        },
        "cedar.dynamics.NeuralField": {
            "name": "green",
            "activation as output": "false",
            "discrete metric (workaround)": "false",
            "update stepIcon according to output": "true",
            "threshold for updating the stepIcon": "0.80000000000000004",
            "dimensionality": "0",
            "sizes": "",
            "time scale": "100",
            "resting level": "-0.75",
            "input noise gain": "0.10000000000000001",
            "multiplicative noise (input)": "false",
            "multiplicative noise (activation)": "false",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0",
                "beta": "100"
            },
            "global inhibition": "0",
            "lateral kernels": "",
            "lateral kernel convolution": {
                "borderType": "Zero",
                "mode": "Same",
                "engine": {
                    "type": "cedar.aux.conv.OpenCV"
                },
                "alternate even kernel center": "false"
            },
            "noise correlation kernel": {
                "dimensionality": "1",
                "anchor": [
                    "0"
                ],
                "amplitude": "0",
                "sigmas": [
                    "3"
                ],
                "normalize": "true",
                "shifts": [
                    "0"
                ],
                "limit": "5"
            },
            "comments": ""
        },
        "cedar.dynamics.NeuralField": {
            "name": "high pitch",
            "activation as output": "false",
            "discrete metric (workaround)": "false",
            "update stepIcon according to output": "true",
            "threshold for updating the stepIcon": "0.80000000000000004",
            "dimensionality": "0",
            "sizes": "",
            "time scale": "100",
            "resting level": "-0.75",
            "input noise gain": "0.10000000000000001",
            "multiplicative noise (input)": "false",
            "multiplicative noise (activation)": "false",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0",
                "beta": "100"
            },
            "global inhibition": "0",
            "lateral kernels": "",
            "lateral kernel convolution": {
                "borderType": "Zero",
                "mode": "Same",
                "engine": {
                    "type": "cedar.aux.conv.OpenCV"
                },
                "alternate even kernel center": "false"
            },
            "noise correlation kernel": {
                "dimensionality": "1",
                "anchor": [
                    "0"
                ],
                "amplitude": "0",
                "sigmas": [
                    "3"
                ],
                "normalize": "true",
                "shifts": [
                    "0"
                ],
                "limit": "5"
            },
            "comments": ""
        },
        "cedar.processing.ConstVector": {
            "name": "j",
            "number of vector entries": "1",
            "entries": [
                "3"
            ],
            "comments": ""
        },
        "cedar.processing.steps.Sum": {
            "name": "k",
            "comments": ""
        },
        "cedar.dynamics.NeuralField": {
            "name": "low pitch",
            "activation as output": "false",
            "discrete metric (workaround)": "false",
            "update stepIcon according to output": "true",
            "threshold for updating the stepIcon": "0.80000000000000004",
            "dimensionality": "0",
            "sizes": "",
            "time scale": "100",
            "resting level": "-0.75",
            "input noise gain": "0.10000000000000001",
            "multiplicative noise (input)": "false",
            "multiplicative noise (activation)": "false",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0",
                "beta": "100"
            },
            "global inhibition": "0",
            "lateral kernels": "",
            "lateral kernel convolution": {
                "borderType": "Zero",
                "mode": "Same",
                "engine": {
                    "type": "cedar.aux.conv.OpenCV"
                },
                "alternate even kernel center": "false"
            },
            "noise correlation kernel": {
                "dimensionality": "1",
                "anchor": [
                    "0"
                ],
                "amplitude": "0",
                "sigmas": [
                    "3"
                ],
                "normalize": "true",
                "shifts": [
                    "0"
                ],
                "limit": "5"
            },
            "comments": ""
        },
        "cedar.dynamics.NeuralField": {
            "name": "medium pitch",
            "activation as output": "false",
            "discrete metric (workaround)": "false",
            "update stepIcon according to output": "true",
            "threshold for updating the stepIcon": "0.80000000000000004",
            "dimensionality": "0",
            "sizes": "",
            "time scale": "100",
            "resting level": "-0.75",
            "input noise gain": "0.10000000000000001",
            "multiplicative noise (input)": "false",
            "multiplicative noise (activation)": "false",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0",
                "beta": "100"
            },
            "global inhibition": "0",
            "lateral kernels": "",
            "lateral kernel convolution": {
                "borderType": "Zero",
                "mode": "Same",
                "engine": {
                    "type": "cedar.aux.conv.OpenCV"
                },
                "alternate even kernel center": "false"
            },
            "noise correlation kernel": {
                "dimensionality": "1",
                "anchor": [
                    "0"
                ],
                "amplitude": "0",
                "sigmas": [
                    "3"
                ],
                "normalize": "true",
                "shifts": [
                    "0"
                ],
                "limit": "5"
            },
            "comments": ""
        },
        "cedar.dynamics.NeuralField": {
            "name": "orange",
            "activation as output": "false",
            "discrete metric (workaround)": "false",
            "update stepIcon according to output": "true",
            "threshold for updating the stepIcon": "0.80000000000000004",
            "dimensionality": "0",
            "sizes": "",
            "time scale": "100",
            "resting level": "-0.75",
            "input noise gain": "0.10000000000000001",
            "multiplicative noise (input)": "false",
            "multiplicative noise (activation)": "false",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0",
                "beta": "100"
            },
            "global inhibition": "0",
            "lateral kernels": "",
            "lateral kernel convolution": {
                "borderType": "Zero",
                "mode": "Same",
                "engine": {
                    "type": "cedar.aux.conv.OpenCV"
                },
                "alternate even kernel center": "false"
            },
            "noise correlation kernel": {
                "dimensionality": "1",
                "anchor": [
                    "0"
                ],
                "amplitude": "0",
                "sigmas": [
                    "3"
                ],
                "normalize": "true",
                "shifts": [
                    "0"
                ],
                "limit": "5"
            },
            "comments": ""
        },
        "cedar.dynamics.NeuralField": {
            "name": "red",
            "activation as output": "false",
            "discrete metric (workaround)": "false",
            "update stepIcon according to output": "true",
            "threshold for updating the stepIcon": "0.80000000000000004",
            "dimensionality": "0",
            "sizes": "",
            "time scale": "100",
            "resting level": "-0.75",
            "input noise gain": "0.10000000000000001",
            "multiplicative noise (input)": "false",
            "multiplicative noise (activation)": "false",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0",
                "beta": "100"
            },
            "global inhibition": "0",
            "lateral kernels": "",
            "lateral kernel convolution": {
                "borderType": "Zero",
                "mode": "Same",
                "engine": {
                    "type": "cedar.aux.conv.OpenCV"
                },
                "alternate even kernel center": "false"
            },
            "noise correlation kernel": {
                "dimensionality": "1",
                "anchor": [
                    "0"
                ],
                "amplitude": "0",
                "sigmas": [
                    "3"
                ],
                "normalize": "true",
                "shifts": [
                    "0"
                ],
                "limit": "5"
            },
            "comments": ""
        },
        "cedar.processing.steps.Sum": {
            "name": "sum",
            "comments": ""
        },
        "cedar.dynamics.NeuralField": {
            "name": "violett",
            "activation as output": "false",
            "discrete metric (workaround)": "false",
            "update stepIcon according to output": "true",
            "threshold for updating the stepIcon": "0.80000000000000004",
            "dimensionality": "0",
            "sizes": "",
            "time scale": "100",
            "resting level": "-0.75",
            "input noise gain": "0.10000000000000001",
            "multiplicative noise (input)": "false",
            "multiplicative noise (activation)": "false",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0",
                "beta": "100"
            },
            "global inhibition": "0",
            "lateral kernels": "",
            "lateral kernel convolution": {
                "borderType": "Zero",
                "mode": "Same",
                "engine": {
                    "type": "cedar.aux.conv.OpenCV"
                },
                "alternate even kernel center": "false"
            },
            "noise correlation kernel": {
                "dimensionality": "1",
                "anchor": [
                    "0"
                ],
                "amplitude": "0",
                "sigmas": [
                    "3"
                ],
                "normalize": "true",
                "shifts": [
                    "0"
                ],
                "limit": "5"
            },
            "comments": ""
        },
        "cedar.processing.ConstVector": {
            "name": "x",
            "number of vector entries": "1",
            "entries": [
                "2"
            ],
            "comments": ""
        },
        "cedar.dynamics.NeuralField": {
            "name": "yellow",
            "activation as output": "false",
            "discrete metric (workaround)": "false",
            "update stepIcon according to output": "true",
            "threshold for updating the stepIcon": "0.80000000000000004",
            "dimensionality": "0",
            "sizes": "",
            "time scale": "100",
            "resting level": "-0.75",
            "input noise gain": "0.10000000000000001",
            "multiplicative noise (input)": "false",
            "multiplicative noise (activation)": "false",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0",
                "beta": "100"
            },
            "global inhibition": "0",
            "lateral kernels": "",
            "lateral kernel convolution": {
                "borderType": "Zero",
                "mode": "Same",
                "engine": {
                    "type": "cedar.aux.conv.OpenCV"
                },
                "alternate even kernel center": "false"
            },
            "noise correlation kernel": {
                "dimensionality": "1",
                "anchor": [
                    "0"
                ],
                "amplitude": "0",
                "sigmas": [
                    "3"
                ],
                "normalize": "true",
                "shifts": [
                    "0"
                ],
                "limit": "5"
            },
            "comments": ""
        }
    },
    "triggers": {
        "cedar.processing.LoopedTrigger": {
            "name": "default thread",
            "step size": "0.02 s",
            "fake Euler step size": "0.02 s",
            "minimum sleep time": "0.0002 s",
            "idle time": "1e-05 s",
            "simulated time": "0.001 s",
            "loop mode": "real deltaT",
            "start with all": "true",
            "listeners": [
                "Belief-Node 1",
                "CoS-Color In Attention",
                "Precondition-Color In Attention",
                "Intention In Action-Orient To Object",
                "CoS-Orient To Object",
                "Precondition-Oriented To Object",
                "CoS-Is In Front Of",
                "Precondition-Is In Front Of",
                "Intention In Action-Action1",
                "CoS-Action1",
                "Color-matching-Field",
                "Attention-Color-Binding-Field",
                "Space-Attention-Field",
                "Space-matching-Field",
                "Distance-matching-Field",
                "Camera TCP Reader",
                "Microphone TCP Reader",
                "Color-Space-Perception",
                "Sound-Perception",
                "Color-Attention-Field",
                "Sound-Attention-Field",
                "LED-Perception-Field",
                "TCP-Motor-Writer",
                "TCP-Break-Writer",
                "CoS-Action2",
                "Intention In Action-Action2",
                "CoS-Action3",
                "Intention-In-Action-Action3",
                "TCP-LED-Writer",
                "Space To Rate Code",
                "Intention In Action-Break",
                "CoS-Break",
                "Precondition-Break In Front Of Object",
                "Motor-Attractor",
                "Action-Working-Memory",
                "Sound-Change-Detection",
                "Sound-Change-Inhibition",
                "Action-Change-Inhibition",
                "Belief-Node 2",
                "Commit-Node 2",
                "Commit-Node 1",
                "Belief-Network-Node",
                "Belief-Node 3",
                "Reward Hebb Trace 7",
                "Reward Hebb Trace 8",
                "Commit-Node 3",
                "Reward Hebb Trace 10",
                "Reward Hebb Trace 11",
                "Reward Hebb Trace 12",
                "Belief-Node 4",
                "Reward Hebb Trace 13",
                "Commit-Node 4",
                "Reward Hebb Trace 9",
                "Reward Hebb Trace 14",
                "Commit-Node 5",
                "Belief-Node 5",
                "Reward Hebb Trace 15",
                "Commit-Node 6",
                "Belief-Node 6",
                "Reward Hebb Trace 16",
                "Reward Hebb Trace 17",
                "Reward Hebb Trace 18",
                "Reward Hebb Trace 6",
                "Reward Hebb Trace 19",
                "Reward Hebb Trace 2",
                "Reward Hebb Trace 3",
                "Recruitment Boost",
                "Commit Boost",
                "Learning-Reward-Node",
                "Reward Hebb Trace 20",
                "Reward Hebb Trace 21",
                "Reward Hebb Trace 22",
                "Reward Hebb Trace 23",
                "Reward Hebb Trace 24",
                "Reward Hebb Trace",
                "Reward Hebb Trace 4",
                "Reward Hebb Trace 5",
                "orange",
                "yellow",
                "green",
                "blue",
                "violett",
                "red",
                "ObjectColor Concepts",
                "high pitch",
                "medium pitch",
                "low pitch",
                "Reward Hebb Trace 25",
                "Reward Hebb Trace 26",
                "Reward Hebb Trace 39",
                "Sound Concepts",
                "action1",
                "action 2",
                "action 3",
                "Action Concepts",
                "Sound Role Field",
                "Color Role Field",
                "Action role Field",
                "Color-Change-Detection",
                "Color-Change-Inhibition",
                "Goal-Change-Detection",
                "Goal-Change-Inhibition",
                "Intention-CoS",
                "Action-Color-Projection",
                "Action-Projection",
                "Intention-Selection",
                "Goal-Recall-CoS",
                "Goal-CoS",
                "Goal-Match",
                "Goal-Precondition",
                "Goal-Recall-CoDs",
                "Color-Recall-CoD",
                "Color-Recall-CoS",
                "Action-Recall",
                "Sound-Recall",
                "Sound-Recall-CoD",
                "Sound-Recall-CoS",
                "Learning-Gate",
                "Goal-CoD",
                "Goal-Recall-Intention",
                "Object-Recall-Intention",
                "Sound-Recall-Intention",
                "Sound-Change-Gate",
                "Goal-Change-Gate",
                "Action-Habituation",
                "Action-Perseveration",
                "Goal-Intention",
                "Goal-Selection",
                "Recall-Goal-Match-CoS",
                "Recall-Precondition",
                "Intention-Compare-Strategies",
                "Strategie-Gate",
                "Strategy-Selection",
                "CoS-loaded-strategy",
                "Precondition-loaded-Strategy",
                "Intention-Perform-Action",
                "Recall-Goal-Match",
                "Goal-Change-Precondition",
                "Goal-Change-CoS",
                "CoS-Timer",
                "Action-Reset",
                "Action-Timeout",
                "Strategy-Perseveration",
                "Strategy-Habituation",
                "Goal-Perseveration",
                "Goal-Habituation",
                "Goal-Selection-Signal",
                "LED1",
                "LED2",
                "LED3",
                "LED4",
                "LED5",
                "LED6",
                "LED7",
                "LED8",
                "LED9",
                "LED TCP Reader",
                "Action1-Match",
                "Action2-Match",
                "Action3-Match",
                "Action-Outcome-Detectio",
                "Goal-Habituation-Gate",
                "Reward Hebb Trace 27",
                "Reward Hebb Trace 28",
                "Reward Hebb Trace 29",
                "Reward Hebb Trace 30",
                "Reward Hebb Trace 31",
                "Reward Hebb Trace 38",
                "Reward Hebb Trace 40",
                "Reward Hebb Trace 41",
                "Reward Hebb Trace 42",
                "TCP-Task-reader",
                "TCP-Goal-Writer",
                "Supervisor-Task-Input",
                "exploration-Task",
                "goal-reaching-task",
                "Color-Memory",
                "Color-memory-inhibition",
                "Low-Pitch-Task",
                "Medium-Pitch-Task",
                "High-Pitch-Task",
                "Reset-Signal",
                "Action-Task",
                "Belief-Active",
                "Object-Gate",
                "Goal-UnSelection-Signal"
            ]
        }
    },
    "connections": [
        {
            "source": "Rate Matrix To Space Code.output",
            "target": "Static Gain.input"
        },
        {
            "source": "Static Gain.output",
            "target": "Convolution.matrix"
        },
        {
            "source": "Color Conversion.converted image",
            "target": "Matrix Type Converter.matrix"
        },
        {
            "source": "Matrix Type Converter.converted matrix",
            "target": "Channel Split.three channel input"
        },
        {
            "source": "Channel Split.channel 1",
            "target": "Rate Matrix To Space Code.bin map"
        },
        {
            "source": "Channel Split.channel 2",
            "target": "Rate Matrix To Space Code.values"
        },
        {
            "source": "Color-Space-Perception.sigmoided activation",
            "target": "Projection 2.input"
        },
        {
            "source": "Sound-Perception.sigmoided activation",
            "target": "Static Gain 5.input"
        },
        {
            "source": "Static Gain 5.output",
            "target": "Sound-Attention-Field.input"
        },
        {
            "source": "Color-matching-Field.sigmoided activation",
            "target": "Projection 6.input"
        },
        {
            "source": "Projection 6.output",
            "target": "CoS-Color In Attention.input"
        },
        {
            "source": "CoS-Color In Attention.sigmoided activation",
            "target": "Static Gain 9.input"
        },
        {
            "source": "Precondition-Color In Attention.sigmoided activation",
            "target": "Static Gain 10.input"
        },
        {
            "source": "Static Gain 10.output",
            "target": "Intention In Action-Orient To Object.input"
        },
        {
            "source": "Projection 7.output",
            "target": "Attention-Color-Binding-Field.input"
        },
        {
            "source": "Attention-Color-Binding-Field.sigmoided activation",
            "target": "Projection 8.input"
        },
        {
            "source": "Projection 8.output",
            "target": "Space-Attention-Field.input"
        },
        {
            "source": "Space-Action-Field.Gauss input",
            "target": "Space-matching-Field.input"
        },
        {
            "source": "Space-Attention-Field.sigmoided activation",
            "target": "Space-matching-Field.input"
        },
        {
            "source": "Space-matching-Field.sigmoided activation",
            "target": "Projection 9.input"
        },
        {
            "source": "Projection 9.output",
            "target": "CoS-Orient To Object.input"
        },
        {
            "source": "CoS-Orient To Object.sigmoided activation",
            "target": "Static Gain 11.input"
        },
        {
            "source": "Distance-matching-Field.sigmoided activation",
            "target": "Projection 10.input"
        },
        {
            "source": "Projection 10.output",
            "target": "CoS-Is In Front Of.input"
        },
        {
            "source": "CoS-Is In Front Of.sigmoided activation",
            "target": "Static Gain 13.input"
        },
        {
            "source": "Precondition-Is In Front Of.sigmoided activation",
            "target": "Static Gain 14.input"
        },
        {
            "source": "Space To Rate Code.output",
            "target": "TCP-Motor-Writer.input"
        },
        {
            "source": "Convolution 2.result",
            "target": "Distance-matching-Field.input"
        },
        {
            "source": "Static Gain 13.output",
            "target": "Precondition-Is In Front Of.input"
        },
        {
            "source": "Precondition-Oriented To Object.sigmoided activation",
            "target": "Static Gain 12.input"
        },
        {
            "source": "Static Gain 12.output",
            "target": "CoS-Is In Front Of.input"
        },
        {
            "source": "Static Gain 11.output",
            "target": "Precondition-Oriented To Object.input"
        },
        {
            "source": "Static Gain 9.output",
            "target": "Precondition-Color In Attention.input"
        },
        {
            "source": "Static Gain 14.output",
            "target": "Intention In Action-Break.input"
        },
        {
            "source": "Intention In Action-Break.sigmoided activation",
            "target": "TCP-Break-Writer.input"
        },
        {
            "source": "Intention In Action-Break.sigmoided activation",
            "target": "CoS-Break.input"
        },
        {
            "source": "CoS-Break.sigmoided activation",
            "target": "Static Gain 16.input"
        },
        {
            "source": "Static Gain 16.output",
            "target": "Precondition-Break In Front Of Object.input"
        },
        {
            "source": "Precondition-Break In Front Of Object.sigmoided activation",
            "target": "Static Gain 17.input"
        },
        {
            "source": "Static Gain 17.output",
            "target": "Intention In Action-Action1.input"
        },
        {
            "source": "Distance-Matching-Field.Gauss input",
            "target": "Convolution 2.kernel"
        },
        {
            "source": "Space-Attention-Field.sigmoided activation",
            "target": "Convolution 2.matrix"
        },
        {
            "source": "Static Gain 17.output",
            "target": "Intention In Action-Action2.input"
        },
        {
            "source": "Static Gain 17.output",
            "target": "Intention-In-Action-Action3.input"
        },
        {
            "source": "Scalars To Vector.vector",
            "target": "TCP-LED-Writer.input"
        },
        {
            "source": "Space-Attention-Field.sigmoided activation",
            "target": "Motor-Attractor.input"
        },
        {
            "source": "Intention In Action-Orient To Object.sigmoided activation",
            "target": "Motor-Attractor.input"
        },
        {
            "source": "Motor-Attractor.sigmoided activation",
            "target": "Space To Rate Code.input"
        },
        {
            "source": "Static Gain 19.output",
            "target": "Sound-Change-Detection.input"
        },
        {
            "source": "Sound-Change-Inhibition.sigmoided activation",
            "target": "Static Gain 19.input"
        },
        {
            "source": "Action-Working-Memory.sigmoided activation",
            "target": "Action-Change-Inhibition.input"
        },
        {
            "source": "Action-Change-Inhibition.sigmoided activation",
            "target": "Static Gain 2.input"
        },
        {
            "source": "Projection 12.output",
            "target": "k.terms"
        },
        {
            "source": "Projection 11.output",
            "target": "k.terms"
        },
        {
            "source": "Projection 13.output",
            "target": "k.terms"
        },
        {
            "source": "x.vector",
            "target": "sum.terms"
        },
        {
            "source": "dx.vector",
            "target": "sum.terms"
        },
        {
            "source": "k.sum",
            "target": "Component Multiply.operands"
        },
        {
            "source": "x.vector",
            "target": "Component Multiply.operands"
        },
        {
            "source": "Component Multiply 2.product",
            "target": "Belief-Node 6.input"
        },
        {
            "source": "Component Multiply.product",
            "target": "Static Gain 34.input"
        },
        {
            "source": "Static Gain 34.output",
            "target": "Belief-Node 6.input"
        },
        {
            "source": "Component Multiply 3.product",
            "target": "Belief-Node 6.input"
        },
        {
            "source": "Component Multiply 4.product",
            "target": "Belief-Node 6.input"
        },
        {
            "source": "Belief-Node 6.sigmoided activation",
            "target": "Reward Hebb Trace 16.read out trigger"
        },
        {
            "source": "Belief-Node 6.sigmoided activation",
            "target": "Reward Hebb Trace 18.read out trigger"
        },
        {
            "source": "Belief-Node 6.sigmoided activation",
            "target": "Reward Hebb Trace 17.read out trigger"
        },
        {
            "source": "Commit-Node 6.sigmoided activation",
            "target": "Component Multiply 5.operands"
        },
        {
            "source": "j.vector",
            "target": "Component Multiply 5.operands"
        },
        {
            "source": "x.vector",
            "target": "Component Multiply 5.operands"
        },
        {
            "source": "Component Multiply 5.product",
            "target": "Static Gain 32.input"
        },
        {
            "source": "Static Gain 32.output",
            "target": "Belief-Node 6.input"
        },
        {
            "source": "sum.sum",
            "target": "Component Multiply 2.operands"
        },
        {
            "source": "sum.sum",
            "target": "Component Multiply 3.operands"
        },
        {
            "source": "sum.sum",
            "target": "Component Multiply 4.operands"
        },
        {
            "source": "Reward Hebb Trace 16.reciprocal output",
            "target": "Transfer Function 7.input"
        },
        {
            "source": "Transfer Function 7.sigmoided output",
            "target": "Component Multiply 2.operands"
        },
        {
            "source": "Reward Hebb Trace 17.reciprocal output",
            "target": "Transfer Function 9.input"
        },
        {
            "source": "Transfer Function 9.sigmoided output",
            "target": "Component Multiply 4.operands"
        },
        {
            "source": "Reward Hebb Trace 18.reciprocal output",
            "target": "Transfer Function 8.input"
        },
        {
            "source": "Transfer Function 8.sigmoided output",
            "target": "Component Multiply 3.operands"
        },
        {
            "source": "Reward Hebb Trace 15.reciprocal output",
            "target": "Transfer Function 10.input"
        },
        {
            "source": "Reward Hebb Trace 9.reciprocal output",
            "target": "Transfer Function 11.input"
        },
        {
            "source": "Reward Hebb Trace 14.reciprocal output",
            "target": "Transfer Function 12.input"
        },
        {
            "source": "Transfer Function 12.sigmoided output",
            "target": "Component Multiply 8.operands"
        },
        {
            "source": "Transfer Function 11.sigmoided output",
            "target": "Component Multiply 7.operands"
        },
        {
            "source": "Transfer Function 10.sigmoided output",
            "target": "Component Multiply 6.operands"
        },
        {
            "source": "Component Multiply 6.product",
            "target": "Belief-Node 5.input"
        },
        {
            "source": "Component Multiply 7.product",
            "target": "Belief-Node 5.input"
        },
        {
            "source": "Component Multiply 8.product",
            "target": "Belief-Node 5.input"
        },
        {
            "source": "Belief-Node 5.sigmoided activation",
            "target": "Reward Hebb Trace 9.read out trigger"
        },
        {
            "source": "Belief-Node 5.sigmoided activation",
            "target": "Reward Hebb Trace 15.read out trigger"
        },
        {
            "source": "Belief-Node 5.sigmoided activation",
            "target": "Reward Hebb Trace 14.read out trigger"
        },
        {
            "source": "Commit-Node 5.sigmoided activation",
            "target": "Component Multiply 9.operands"
        },
        {
            "source": "j.vector",
            "target": "Component Multiply 9.operands"
        },
        {
            "source": "x.vector",
            "target": "Component Multiply 9.operands"
        },
        {
            "source": "Component Multiply 9.product",
            "target": "Static Gain 31.input"
        },
        {
            "source": "Static Gain 31.output",
            "target": "Belief-Node 5.input"
        },
        {
            "source": "Belief-Node 6.sigmoided activation",
            "target": "Component Multiply 10.operands"
        },
        {
            "source": "j.vector",
            "target": "Component Multiply 10.operands"
        },
        {
            "source": "Component Multiply 10.product",
            "target": "Static Gain 30.input"
        },
        {
            "source": "Static Gain 30.output",
            "target": "Belief-Node 5.input"
        },
        {
            "source": "Belief-Node 5.sigmoided activation",
            "target": "Component Multiply 11.operands"
        },
        {
            "source": "Component Multiply 11.product",
            "target": "Static Gain 33.input"
        },
        {
            "source": "Static Gain 33.output",
            "target": "Belief-Node 6.input"
        },
        {
            "source": "j.vector",
            "target": "Component Multiply 11.operands"
        },
        {
            "source": "Static Gain 34.output",
            "target": "Belief-Node 5.input"
        },
        {
            "source": "sum.sum",
            "target": "Component Multiply 6.operands"
        },
        {
            "source": "sum.sum",
            "target": "Component Multiply 7.operands"
        },
        {
            "source": "sum.sum",
            "target": "Component Multiply 8.operands"
        },
        {
            "source": "Reward Hebb Trace 13.reciprocal output",
            "target": "Transfer Function 14.input"
        },
        {
            "source": "Reward Hebb Trace 11.reciprocal output",
            "target": "Transfer Function 15.input"
        },
        {
            "source": "Reward Hebb Trace 12.reciprocal output",
            "target": "Transfer Function 16.input"
        },
        {
            "source": "Transfer Function 14.sigmoided output",
            "target": "Component Multiply 12.operands"
        },
        {
            "source": "Transfer Function 15.sigmoided output",
            "target": "Component Multiply 13.operands"
        },
        {
            "source": "Transfer Function 16.sigmoided output",
            "target": "Component Multiply 14.operands"
        },
        {
            "source": "sum.sum",
            "target": "Component Multiply 12.operands"
        },
        {
            "source": "sum.sum",
            "target": "Component Multiply 13.operands"
        },
        {
            "source": "sum.sum",
            "target": "Component Multiply 14.operands"
        },
        {
            "source": "Component Multiply 12.product",
            "target": "Belief-Node 4.input"
        },
        {
            "source": "Component Multiply 13.product",
            "target": "Belief-Node 4.input"
        },
        {
            "source": "Component Multiply 14.product",
            "target": "Belief-Node 4.input"
        },
        {
            "source": "Static Gain 34.output",
            "target": "Belief-Node 4.input"
        },
        {
            "source": "Belief-Node 4.sigmoided activation",
            "target": "Component Multiply 15.operands"
        },
        {
            "source": "Component Multiply 15.product",
            "target": "Static Gain 28.input"
        },
        {
            "source": "Static Gain 33.output",
            "target": "Belief-Node 4.input"
        },
        {
            "source": "Static Gain 30.output",
            "target": "Belief-Node 4.input"
        },
        {
            "source": "Static Gain 28.output",
            "target": "Belief-Node 5.input"
        },
        {
            "source": "Static Gain 28.output",
            "target": "Belief-Node 6.input"
        },
        {
            "source": "j.vector",
            "target": "Component Multiply 15.operands"
        },
        {
            "source": "Belief-Node 4.sigmoided activation",
            "target": "Reward Hebb Trace 13.read out trigger"
        },
        {
            "source": "Belief-Node 4.sigmoided activation",
            "target": "Reward Hebb Trace 11.read out trigger"
        },
        {
            "source": "Belief-Node 4.sigmoided activation",
            "target": "Reward Hebb Trace 12.read out trigger"
        },
        {
            "source": "Commit-Node 4.sigmoided activation",
            "target": "Component Multiply 16.operands"
        },
        {
            "source": "x.vector",
            "target": "Component Multiply 16.operands"
        },
        {
            "source": "j.vector",
            "target": "Component Multiply 16.operands"
        },
        {
            "source": "Component Multiply 16.product",
            "target": "Static Gain 29.input"
        },
        {
            "source": "Static Gain 29.output",
            "target": "Belief-Node 4.input"
        },
        {
            "source": "Reward Hebb Trace 7.reciprocal output",
            "target": "Transfer Function 18.input"
        },
        {
            "source": "Reward Hebb Trace 8.reciprocal output",
            "target": "Transfer Function 19.input"
        },
        {
            "source": "Reward Hebb Trace 10.reciprocal output",
            "target": "Transfer Function 20.input"
        },
        {
            "source": "Transfer Function 20.sigmoided output",
            "target": "Component Multiply 19.operands"
        },
        {
            "source": "Transfer Function 19.sigmoided output",
            "target": "Component Multiply 18.operands"
        },
        {
            "source": "Transfer Function 18.sigmoided output",
            "target": "Component Multiply 17.operands"
        },
        {
            "source": "Component Multiply 17.product",
            "target": "Belief-Node 3.input"
        },
        {
            "source": "Component Multiply 18.product",
            "target": "Belief-Node 3.input"
        },
        {
            "source": "Component Multiply 19.product",
            "target": "Belief-Node 3.input"
        },
        {
            "source": "Static Gain 34.output",
            "target": "Belief-Node 3.input"
        },
        {
            "source": "Belief-Node 3.sigmoided activation",
            "target": "Component Multiply 20.operands"
        },
        {
            "source": "j.vector",
            "target": "Component Multiply 20.operands"
        },
        {
            "source": "Component Multiply 20.product",
            "target": "Static Gain 26.input"
        },
        {
            "source": "Static Gain 26.output",
            "target": "Belief-Node 4.input"
        },
        {
            "source": "Static Gain 26.output",
            "target": "Belief-Node 5.input"
        },
        {
            "source": "Static Gain 26.output",
            "target": "Belief-Node 6.input"
        },
        {
            "source": "Static Gain 30.output",
            "target": "Belief-Node 3.input"
        },
        {
            "source": "Static Gain 33.output",
            "target": "Belief-Node 3.input"
        },
        {
            "source": "Static Gain 28.output",
            "target": "Belief-Node 3.input"
        },
        {
            "source": "x.vector",
            "target": "Component Multiply 21.operands"
        },
        {
            "source": "Commit-Node 3.sigmoided activation",
            "target": "Component Multiply 21.operands"
        },
        {
            "source": "j.vector",
            "target": "Component Multiply 21.operands"
        },
        {
            "source": "Component Multiply 21.product",
            "target": "Static Gain 27.input"
        },
        {
            "source": "Static Gain 27.output",
            "target": "Belief-Node 3.input"
        },
        {
            "source": "Belief-Node 3.sigmoided activation",
            "target": "Reward Hebb Trace 7.read out trigger"
        },
        {
            "source": "Belief-Node 3.sigmoided activation",
            "target": "Reward Hebb Trace 8.read out trigger"
        },
        {
            "source": "Belief-Node 3.sigmoided activation",
            "target": "Reward Hebb Trace 10.read out trigger"
        },
        {
            "source": "sum.sum",
            "target": "Component Multiply 17.operands"
        },
        {
            "source": "sum.sum",
            "target": "Component Multiply 18.operands"
        },
        {
            "source": "sum.sum",
            "target": "Component Multiply 19.operands"
        },
        {
            "source": "Transfer Function 22.sigmoided output",
            "target": "Component Multiply 22.operands"
        },
        {
            "source": "Transfer Function 23.sigmoided output",
            "target": "Component Multiply 23.operands"
        },
        {
            "source": "Transfer Function 24.sigmoided output",
            "target": "Component Multiply 24.operands"
        },
        {
            "source": "sum.sum",
            "target": "Component Multiply 22.operands"
        },
        {
            "source": "sum.sum",
            "target": "Component Multiply 23.operands"
        },
        {
            "source": "sum.sum",
            "target": "Component Multiply 24.operands"
        },
        {
            "source": "Component Multiply 24.product",
            "target": "Belief-Node 2.input"
        },
        {
            "source": "Component Multiply 23.product",
            "target": "Belief-Node 2.input"
        },
        {
            "source": "Component Multiply 22.product",
            "target": "Belief-Node 2.input"
        },
        {
            "source": "Belief-Node 2.sigmoided activation",
            "target": "Component Multiply 25.operands"
        },
        {
            "source": "j.vector",
            "target": "Component Multiply 25.operands"
        },
        {
            "source": "Component Multiply 25.product",
            "target": "Static Gain 3.input"
        },
        {
            "source": "Static Gain 3.output",
            "target": "Belief-Node 3.input"
        },
        {
            "source": "Static Gain 3.output",
            "target": "Belief-Node 4.input"
        },
        {
            "source": "Static Gain 3.output",
            "target": "Belief-Node 5.input"
        },
        {
            "source": "Static Gain 3.output",
            "target": "Belief-Node 6.input"
        },
        {
            "source": "Static Gain 30.output",
            "target": "Belief-Node 2.input"
        },
        {
            "source": "Static Gain 33.output",
            "target": "Belief-Node 2.input"
        },
        {
            "source": "Static Gain 28.output",
            "target": "Belief-Node 2.input"
        },
        {
            "source": "x.vector",
            "target": "Component Multiply 26.operands"
        },
        {
            "source": "j.vector",
            "target": "Component Multiply 26.operands"
        },
        {
            "source": "Commit-Node 2.sigmoided activation",
            "target": "Component Multiply 26.operands"
        },
        {
            "source": "Component Multiply 26.product",
            "target": "Static Gain 4.input"
        },
        {
            "source": "Static Gain 4.output",
            "target": "Belief-Node 2.input"
        },
        {
            "source": "Static Gain 26.output",
            "target": "Belief-Node 2.input"
        },
        {
            "source": "Reward Hebb Trace 6.reciprocal output",
            "target": "Transfer Function 24.input"
        },
        {
            "source": "Belief-Node 2.sigmoided activation",
            "target": "Reward Hebb Trace 6.read out trigger"
        },
        {
            "source": "Static Gain 34.output",
            "target": "Belief-Node 2.input"
        },
        {
            "source": "Transfer Function 26.sigmoided output",
            "target": "Component Multiply 27.operands"
        },
        {
            "source": "Transfer Function 27.sigmoided output",
            "target": "Component Multiply 28.operands"
        },
        {
            "source": "Transfer Function 28.sigmoided output",
            "target": "Component Multiply 29.operands"
        },
        {
            "source": "sum.sum",
            "target": "Component Multiply 27.operands"
        },
        {
            "source": "sum.sum",
            "target": "Component Multiply 28.operands"
        },
        {
            "source": "sum.sum",
            "target": "Component Multiply 29.operands"
        },
        {
            "source": "Belief-Node 1.sigmoided activation",
            "target": "Component Multiply 30.operands"
        },
        {
            "source": "Component Multiply 30.product",
            "target": "Static Gain 24.input"
        },
        {
            "source": "Component Multiply 27.product",
            "target": "Belief-Node 1.input"
        },
        {
            "source": "Component Multiply 28.product",
            "target": "Belief-Node 1.input"
        },
        {
            "source": "Component Multiply 29.product",
            "target": "Belief-Node 1.input"
        },
        {
            "source": "j.vector",
            "target": "Component Multiply 30.operands"
        },
        {
            "source": "Static Gain 24.output",
            "target": "Belief-Node 2.input"
        },
        {
            "source": "Static Gain 24.output",
            "target": "Belief-Node 3.input"
        },
        {
            "source": "Static Gain 24.output",
            "target": "Belief-Node 4.input"
        },
        {
            "source": "Static Gain 24.output",
            "target": "Belief-Node 5.input"
        },
        {
            "source": "Static Gain 24.output",
            "target": "Belief-Node 6.input"
        },
        {
            "source": "Static Gain 3.output",
            "target": "Belief-Node 1.input"
        },
        {
            "source": "Static Gain 26.output",
            "target": "Belief-Node 1.input"
        },
        {
            "source": "Static Gain 28.output",
            "target": "Belief-Node 1.input"
        },
        {
            "source": "Static Gain 33.output",
            "target": "Belief-Node 1.input"
        },
        {
            "source": "Static Gain 30.output",
            "target": "Belief-Node 1.input"
        },
        {
            "source": "Commit-Node 1.sigmoided activation",
            "target": "Component Multiply 31.operands"
        },
        {
            "source": "j.vector",
            "target": "Component Multiply 31.operands"
        },
        {
            "source": "x.vector",
            "target": "Component Multiply 31.operands"
        },
        {
            "source": "Component Multiply 31.product",
            "target": "Static Gain 25.input"
        },
        {
            "source": "Static Gain 25.output",
            "target": "Belief-Node 1.input"
        },
        {
            "source": "Static Gain 34.output",
            "target": "Belief-Node 1.input"
        },
        {
            "source": "Reward Hebb Trace 19.reciprocal output",
            "target": "Transfer Function 26.input"
        },
        {
            "source": "Reward Hebb Trace 2.reciprocal output",
            "target": "Transfer Function 27.input"
        },
        {
            "source": "Reward Hebb Trace 3.reciprocal output",
            "target": "Transfer Function 28.input"
        },
        {
            "source": "Belief-Node 1.sigmoided activation",
            "target": "Reward Hebb Trace 19.read out trigger"
        },
        {
            "source": "Belief-Node 1.sigmoided activation",
            "target": "Reward Hebb Trace 2.read out trigger"
        },
        {
            "source": "Belief-Node 1.sigmoided activation",
            "target": "Reward Hebb Trace 3.read out trigger"
        },
        {
            "source": "Reward Hebb Trace 16.trigger output",
            "target": "Static Gain 37.input"
        },
        {
            "source": "Reward Hebb Trace 18.trigger output",
            "target": "Static Gain 36.input"
        },
        {
            "source": "Reward Hebb Trace 17.trigger output",
            "target": "Static Gain 35.input"
        },
        {
            "source": "Reward Hebb Trace 15.trigger output",
            "target": "Static Gain 38.input"
        },
        {
            "source": "Reward Hebb Trace 9.trigger output",
            "target": "Static Gain 39.input"
        },
        {
            "source": "Reward Hebb Trace 14.trigger output",
            "target": "Static Gain 40.input"
        },
        {
            "source": "Reward Hebb Trace 13.trigger output",
            "target": "Static Gain 41.input"
        },
        {
            "source": "Reward Hebb Trace 11.trigger output",
            "target": "Static Gain 42.input"
        },
        {
            "source": "Reward Hebb Trace 12.trigger output",
            "target": "Static Gain 43.input"
        },
        {
            "source": "Reward Hebb Trace 7.trigger output",
            "target": "Static Gain 44.input"
        },
        {
            "source": "Reward Hebb Trace 8.trigger output",
            "target": "Static Gain 45.input"
        },
        {
            "source": "Reward Hebb Trace 10.trigger output",
            "target": "Static Gain 46.input"
        },
        {
            "source": "Reward Hebb Trace 6.trigger output",
            "target": "Static Gain 49.input"
        },
        {
            "source": "Reward Hebb Trace 19.trigger output",
            "target": "Static Gain 50.input"
        },
        {
            "source": "Reward Hebb Trace 2.trigger output",
            "target": "Static Gain 51.input"
        },
        {
            "source": "Reward Hebb Trace 3.trigger output",
            "target": "Static Gain 52.input"
        },
        {
            "source": "Belief-Node 6.sigmoided activation",
            "target": "Static Gain 53.input"
        },
        {
            "source": "Static Gain 53.output",
            "target": "Commit-Node 6.input"
        },
        {
            "source": "Belief-Node 5.sigmoided activation",
            "target": "Static Gain 54.input"
        },
        {
            "source": "Static Gain 54.output",
            "target": "Commit-Node 5.input"
        },
        {
            "source": "Belief-Node 4.sigmoided activation",
            "target": "Static Gain 55.input"
        },
        {
            "source": "Static Gain 55.output",
            "target": "Commit-Node 4.input"
        },
        {
            "source": "Belief-Node 3.sigmoided activation",
            "target": "Static Gain 56.input"
        },
        {
            "source": "Static Gain 56.output",
            "target": "Commit-Node 3.input"
        },
        {
            "source": "Belief-Node 2.sigmoided activation",
            "target": "Static Gain 57.input"
        },
        {
            "source": "Static Gain 57.output",
            "target": "Commit-Node 2.input"
        },
        {
            "source": "Belief-Node 1.sigmoided activation",
            "target": "Static Gain 58.input"
        },
        {
            "source": "Static Gain 58.output",
            "target": "Commit-Node 1.input"
        },
        {
            "source": "Commit Boost.sigmoided activation",
            "target": "Static Gain 59.input"
        },
        {
            "source": "Static Gain 59.output",
            "target": "Commit-Node 1.input"
        },
        {
            "source": "Static Gain 59.output",
            "target": "Commit-Node 2.input"
        },
        {
            "source": "Static Gain 59.output",
            "target": "Commit-Node 3.input"
        },
        {
            "source": "Static Gain 59.output",
            "target": "Commit-Node 4.input"
        },
        {
            "source": "Static Gain 59.output",
            "target": "Commit-Node 5.input"
        },
        {
            "source": "Static Gain 59.output",
            "target": "Commit-Node 6.input"
        },
        {
            "source": "Recruitment Boost.sigmoided activation",
            "target": "Static Gain 60.input"
        },
        {
            "source": "Static Gain 60.output",
            "target": "Component Multiply 32.operands"
        },
        {
            "source": "j.vector",
            "target": "Component Multiply 32.operands"
        },
        {
            "source": "x.vector",
            "target": "Component Multiply 32.operands"
        },
        {
            "source": "Component Multiply 32.product",
            "target": "Belief-Node 1.input"
        },
        {
            "source": "Component Multiply 32.product",
            "target": "Belief-Node 2.input"
        },
        {
            "source": "Component Multiply 32.product",
            "target": "Belief-Node 3.input"
        },
        {
            "source": "Component Multiply 32.product",
            "target": "Belief-Node 4.input"
        },
        {
            "source": "Component Multiply 32.product",
            "target": "Belief-Node 5.input"
        },
        {
            "source": "Component Multiply 32.product",
            "target": "Belief-Node 6.input"
        },
        {
            "source": "Learning-Reward-Node.sigmoided activation",
            "target": "Reward Hebb Trace 3.reward signal"
        },
        {
            "source": "Learning-Reward-Node.sigmoided activation",
            "target": "Reward Hebb Trace 2.reward signal"
        },
        {
            "source": "Learning-Reward-Node.sigmoided activation",
            "target": "Reward Hebb Trace 19.reward signal"
        },
        {
            "source": "Learning-Reward-Node.sigmoided activation",
            "target": "Reward Hebb Trace 6.reward signal"
        },
        {
            "source": "Learning-Reward-Node.sigmoided activation",
            "target": "Reward Hebb Trace 10.reward signal"
        },
        {
            "source": "Learning-Reward-Node.sigmoided activation",
            "target": "Reward Hebb Trace 8.reward signal"
        },
        {
            "source": "Learning-Reward-Node.sigmoided activation",
            "target": "Reward Hebb Trace 7.reward signal"
        },
        {
            "source": "Learning-Reward-Node.sigmoided activation",
            "target": "Reward Hebb Trace 12.reward signal"
        },
        {
            "source": "Learning-Reward-Node.sigmoided activation",
            "target": "Reward Hebb Trace 11.reward signal"
        },
        {
            "source": "Learning-Reward-Node.sigmoided activation",
            "target": "Reward Hebb Trace 13.reward signal"
        },
        {
            "source": "Learning-Reward-Node.sigmoided activation",
            "target": "Reward Hebb Trace 14.reward signal"
        },
        {
            "source": "Learning-Reward-Node.sigmoided activation",
            "target": "Reward Hebb Trace 9.reward signal"
        },
        {
            "source": "Learning-Reward-Node.sigmoided activation",
            "target": "Reward Hebb Trace 15.reward signal"
        },
        {
            "source": "Learning-Reward-Node.sigmoided activation",
            "target": "Reward Hebb Trace 17.reward signal"
        },
        {
            "source": "Learning-Reward-Node.sigmoided activation",
            "target": "Reward Hebb Trace 18.reward signal"
        },
        {
            "source": "Learning-Reward-Node.sigmoided activation",
            "target": "Reward Hebb Trace 16.reward signal"
        },
        {
            "source": "Commit-Node 5.sigmoided activation",
            "target": "Reward Hebb Trace 20.association input"
        },
        {
            "source": "Commit-Node 4.sigmoided activation",
            "target": "Reward Hebb Trace 21.association input"
        },
        {
            "source": "Commit-Node 3.sigmoided activation",
            "target": "Reward Hebb Trace 22.association input"
        },
        {
            "source": "Commit-Node 2.sigmoided activation",
            "target": "Reward Hebb Trace 23.association input"
        },
        {
            "source": "Commit-Node 1.sigmoided activation",
            "target": "Reward Hebb Trace 24.association input"
        },
        {
            "source": "Static Gain 61.output",
            "target": "Commit-Node 6.input"
        },
        {
            "source": "Reward Hebb Trace 20.trigger output",
            "target": "Static Gain 62.input"
        },
        {
            "source": "Reward Hebb Trace 21.trigger output",
            "target": "Static Gain 63.input"
        },
        {
            "source": "Reward Hebb Trace 22.trigger output",
            "target": "Static Gain 64.input"
        },
        {
            "source": "Reward Hebb Trace 23.trigger output",
            "target": "Static Gain 65.input"
        },
        {
            "source": "Reward Hebb Trace 24.trigger output",
            "target": "Static Gain 66.input"
        },
        {
            "source": "Static Gain 62.output",
            "target": "Commit-Node 5.input"
        },
        {
            "source": "Static Gain 63.output",
            "target": "Commit-Node 4.input"
        },
        {
            "source": "Static Gain 64.output",
            "target": "Commit-Node 3.input"
        },
        {
            "source": "Static Gain 65.output",
            "target": "Commit-Node 2.input"
        },
        {
            "source": "Static Gain 66.output",
            "target": "Commit-Node 1.input"
        },
        {
            "source": "Belief-Network-Node.sigmoided activation",
            "target": "Reward Hebb Trace 20.read out trigger"
        },
        {
            "source": "Belief-Network-Node.sigmoided activation",
            "target": "Reward Hebb Trace 21.read out trigger"
        },
        {
            "source": "Belief-Network-Node.sigmoided activation",
            "target": "Reward Hebb Trace 22.read out trigger"
        },
        {
            "source": "Belief-Network-Node.sigmoided activation",
            "target": "Reward Hebb Trace 23.read out trigger"
        },
        {
            "source": "Belief-Network-Node.sigmoided activation",
            "target": "Reward Hebb Trace 24.read out trigger"
        },
        {
            "source": "Belief-Boost.boost",
            "target": "Belief-Network-Node.input"
        },
        {
            "source": "Commit-Node 6.sigmoided activation",
            "target": "Reward Hebb Trace.association input"
        },
        {
            "source": "Reward Hebb Trace.trigger output",
            "target": "Static Gain 61.input"
        },
        {
            "source": "Belief-Network-Node.sigmoided activation",
            "target": "Reward Hebb Trace.read out trigger"
        },
        {
            "source": "Reward Hebb Trace 4.trigger output",
            "target": "Static Gain 47.input"
        },
        {
            "source": "Reward Hebb Trace 5.trigger output",
            "target": "Static Gain 48.input"
        },
        {
            "source": "Reward Hebb Trace 4.reciprocal output",
            "target": "Transfer Function 22.input"
        },
        {
            "source": "Reward Hebb Trace 5.reciprocal output",
            "target": "Transfer Function 23.input"
        },
        {
            "source": "Belief-Node 2.sigmoided activation",
            "target": "Reward Hebb Trace 5.read out trigger"
        },
        {
            "source": "Belief-Node 2.sigmoided activation",
            "target": "Reward Hebb Trace 4.read out trigger"
        },
        {
            "source": "Learning-Reward-Node.sigmoided activation",
            "target": "Reward Hebb Trace 5.reward signal"
        },
        {
            "source": "Learning-Reward-Node.sigmoided activation",
            "target": "Reward Hebb Trace 4.reward signal"
        },
        {
            "source": "x.vector",
            "target": "Component Multiply 10.operands"
        },
        {
            "source": "x.vector",
            "target": "Component Multiply 11.operands"
        },
        {
            "source": "x.vector",
            "target": "Component Multiply 15.operands"
        },
        {
            "source": "x.vector",
            "target": "Component Multiply 20.operands"
        },
        {
            "source": "x.vector",
            "target": "Component Multiply 25.operands"
        },
        {
            "source": "x.vector",
            "target": "Component Multiply 30.operands"
        },
        {
            "source": "Transfer Function.sigmoided output",
            "target": "Static Gain 68.input"
        },
        {
            "source": "Projection 2.output",
            "target": "Transfer Function.input"
        },
        {
            "source": "Static Gain 68.output",
            "target": "Color-Attention-Field.input"
        },
        {
            "source": "Reward Hebb Trace 25.reciprocal output",
            "target": "low pitch.input"
        },
        {
            "source": "Reward Hebb Trace 26.reciprocal output",
            "target": "medium pitch.input"
        },
        {
            "source": "Reward Hebb Trace 39.reciprocal output",
            "target": "high pitch.input"
        },
        {
            "source": "Sound-Attention-Field.sigmoided activation",
            "target": "Reward Hebb Trace 25.association input"
        },
        {
            "source": "Sound-Attention-Field.sigmoided activation",
            "target": "Reward Hebb Trace 26.association input"
        },
        {
            "source": "Sound-Attention-Field.sigmoided activation",
            "target": "Reward Hebb Trace 39.association input"
        },
        {
            "source": "Action Concepts.sigmoided activation",
            "target": "Action-Working-Memory.input"
        },
        {
            "source": "Action Concepts.sigmoided activation",
            "target": "Static Gain 18.input"
        },
        {
            "source": "Static Gain 18.output",
            "target": "Action-Change-Inhibition.input"
        },
        {
            "source": "Sound Concepts.sigmoided activation",
            "target": "Sound-Change-Detection.input"
        },
        {
            "source": "Sound Concepts.sigmoided activation",
            "target": "Sound-Change-Inhibition.input"
        },
        {
            "source": "Sound Role Field.sigmoided activation",
            "target": "Projection 11.input"
        },
        {
            "source": "Color Role Field.sigmoided activation",
            "target": "Projection 12.input"
        },
        {
            "source": "Action role Field.sigmoided activation",
            "target": "Projection 13.input"
        },
        {
            "source": "Sound Role Field.sigmoided activation",
            "target": "Reward Hebb Trace 16.association input"
        },
        {
            "source": "Sound Role Field.sigmoided activation",
            "target": "Reward Hebb Trace 15.association input"
        },
        {
            "source": "Sound Role Field.sigmoided activation",
            "target": "Reward Hebb Trace 13.association input"
        },
        {
            "source": "Sound Role Field.sigmoided activation",
            "target": "Reward Hebb Trace 7.association input"
        },
        {
            "source": "Sound Role Field.sigmoided activation",
            "target": "Reward Hebb Trace 4.association input"
        },
        {
            "source": "Sound Role Field.sigmoided activation",
            "target": "Reward Hebb Trace 19.association input"
        },
        {
            "source": "Color Role Field.sigmoided activation",
            "target": "Reward Hebb Trace 18.association input"
        },
        {
            "source": "Color Role Field.sigmoided activation",
            "target": "Reward Hebb Trace 9.association input"
        },
        {
            "source": "Color Role Field.sigmoided activation",
            "target": "Reward Hebb Trace 11.association input"
        },
        {
            "source": "Color Role Field.sigmoided activation",
            "target": "Reward Hebb Trace 8.association input"
        },
        {
            "source": "Color Role Field.sigmoided activation",
            "target": "Reward Hebb Trace 5.association input"
        },
        {
            "source": "Color Role Field.sigmoided activation",
            "target": "Reward Hebb Trace 2.association input"
        },
        {
            "source": "Action role Field.sigmoided activation",
            "target": "Reward Hebb Trace 17.association input"
        },
        {
            "source": "Action role Field.sigmoided activation",
            "target": "Reward Hebb Trace 14.association input"
        },
        {
            "source": "Action role Field.sigmoided activation",
            "target": "Reward Hebb Trace 12.association input"
        },
        {
            "source": "Action role Field.sigmoided activation",
            "target": "Reward Hebb Trace 10.association input"
        },
        {
            "source": "Action role Field.sigmoided activation",
            "target": "Reward Hebb Trace 6.association input"
        },
        {
            "source": "Action role Field.sigmoided activation",
            "target": "Reward Hebb Trace 3.association input"
        },
        {
            "source": "Static Gain 41.output",
            "target": "Sound Role Field.input"
        },
        {
            "source": "Static Gain 42.output",
            "target": "Color Role Field.input"
        },
        {
            "source": "Static Gain 43.output",
            "target": "Action role Field.input"
        },
        {
            "source": "Static Gain 37.output",
            "target": "Sound Role Field.input"
        },
        {
            "source": "Static Gain 38.output",
            "target": "Sound Role Field.input"
        },
        {
            "source": "Static Gain 44.output",
            "target": "Sound Role Field.input"
        },
        {
            "source": "Static Gain 47.output",
            "target": "Sound Role Field.input"
        },
        {
            "source": "Static Gain 50.output",
            "target": "Sound Role Field.input"
        },
        {
            "source": "Static Gain 36.output",
            "target": "Color Role Field.input"
        },
        {
            "source": "Static Gain 39.output",
            "target": "Color Role Field.input"
        },
        {
            "source": "Static Gain 45.output",
            "target": "Color Role Field.input"
        },
        {
            "source": "Static Gain 48.output",
            "target": "Color Role Field.input"
        },
        {
            "source": "Static Gain 51.output",
            "target": "Color Role Field.input"
        },
        {
            "source": "Static Gain 35.output",
            "target": "Action role Field.input"
        },
        {
            "source": "Static Gain 40.output",
            "target": "Action role Field.input"
        },
        {
            "source": "Static Gain 46.output",
            "target": "Action role Field.input"
        },
        {
            "source": "Static Gain 49.output",
            "target": "Action role Field.input"
        },
        {
            "source": "Static Gain 52.output",
            "target": "Action role Field.input"
        },
        {
            "source": "Action-Working-Memory.sigmoided activation",
            "target": "Static Gain 75.input"
        },
        {
            "source": "Static Gain 75.output",
            "target": "Action role Field.input"
        },
        {
            "source": "Static Gain 76.output",
            "target": "Sound Role Field.input"
        },
        {
            "source": "ObjectColor Concepts.sigmoided activation",
            "target": "Color-matching-Field.input"
        },
        {
            "source": "Color-Attention-Field.sigmoided activation",
            "target": "Projection 7.input"
        },
        {
            "source": "Projection 15.output",
            "target": "CoS-Color In Attention.input"
        },
        {
            "source": "Projection 15.output",
            "target": "Precondition-Color In Attention.input"
        },
        {
            "source": "Projection 15.output",
            "target": "Intention In Action-Orient To Object.input"
        },
        {
            "source": "Projection 15.output",
            "target": "CoS-Orient To Object.input"
        },
        {
            "source": "Projection 15.output",
            "target": "Precondition-Oriented To Object.input"
        },
        {
            "source": "Projection 15.output",
            "target": "Precondition-Is In Front Of.input"
        },
        {
            "source": "Projection 15.output",
            "target": "Precondition-Break In Front Of Object.input"
        },
        {
            "source": "Projection 15.output",
            "target": "Intention In Action-Break.input"
        },
        {
            "source": "Projection 15.output",
            "target": "CoS-Break.input"
        },
        {
            "source": "Projection 15.output",
            "target": "CoS-Is In Front Of.input"
        },
        {
            "source": "Color-Space-Perception.sigmoided activation",
            "target": "Attention-Color-Binding-Field.input"
        },
        {
            "source": "Goal-Change-Inhibition.sigmoided activation",
            "target": "Static Gain 20.input"
        },
        {
            "source": "Static Gain 20.output",
            "target": "Goal-Change-Detection.input"
        },
        {
            "source": "Color-Change-Inhibition.sigmoided activation",
            "target": "Static Gain 21.input"
        },
        {
            "source": "Sound Concepts.sigmoided activation",
            "target": "Static Gain 76.input"
        },
        {
            "source": "Static Gain 72.output",
            "target": "Sound Role Field.input"
        },
        {
            "source": "Static Gain 72.output",
            "target": "Action role Field.input"
        },
        {
            "source": "Static Gain 73.output",
            "target": "Color Role Field.input"
        },
        {
            "source": "Static Gain 73.output",
            "target": "Action role Field.input"
        },
        {
            "source": "Static Gain 74.output",
            "target": "Sound Role Field.input"
        },
        {
            "source": "CoS-Action1.sigmoided activation",
            "target": "Intention-CoS.input"
        },
        {
            "source": "CoS-Action2.sigmoided activation",
            "target": "Intention-CoS.input"
        },
        {
            "source": "CoS-Action3.sigmoided activation",
            "target": "Intention-CoS.input"
        },
        {
            "source": "Static Gain 10.output",
            "target": "Space-matching-Field.input"
        },
        {
            "source": "Projection 20.output",
            "target": "Static Gain 84.input"
        },
        {
            "source": "Static Gain 2.output",
            "target": "Action-Working-Memory.input"
        },
        {
            "source": "Static Gain 87.output",
            "target": "Sound Role Field.input"
        },
        {
            "source": "Projection 21.output",
            "target": "Action-Color-Projection.input"
        },
        {
            "source": "Projection 22.output",
            "target": "Action-Projection.input"
        },
        {
            "source": "Action-Projection.sigmoided activation",
            "target": "Projection 15.input"
        },
        {
            "source": "Action-Color-Projection.sigmoided activation",
            "target": "Color-matching-Field.input"
        },
        {
            "source": "Sound Concepts.sigmoided activation",
            "target": "Goal-Match.input"
        },
        {
            "source": "Goal-Match.sigmoided activation",
            "target": "Projection 23.input"
        },
        {
            "source": "Projection 23.output",
            "target": "Goal-CoS.input"
        },
        {
            "source": "Goal-Precondition.sigmoided activation",
            "target": "Static Gain 88.input"
        },
        {
            "source": "Static Gain 88.output",
            "target": "Goal-CoS.input"
        },
        {
            "source": "Goal-Recall-CoS.sigmoided activation",
            "target": "Static Gain 83.input"
        },
        {
            "source": "Static Gain 83.output",
            "target": "Goal-Recall-CoDs.input"
        },
        {
            "source": "Goal-CoS.sigmoided activation",
            "target": "Static Gain 90.input"
        },
        {
            "source": "Intention-Selection.sigmoided activation",
            "target": "Projection 21.input"
        },
        {
            "source": "Intention-Selection.sigmoided activation",
            "target": "Projection 22.input"
        },
        {
            "source": "Static Gain 84.output",
            "target": "Intention-Selection.input"
        },
        {
            "source": "Color-Recall-CoS.sigmoided activation",
            "target": "Static Gain 78.input"
        },
        {
            "source": "Static Gain 78.output",
            "target": "Color-Recall-CoD.input"
        },
        {
            "source": "Projection 26.output",
            "target": "Action-Recall.input"
        },
        {
            "source": "Projection 27.output",
            "target": "Action-Recall.input"
        },
        {
            "source": "Color-Recall-CoS.sigmoided activation",
            "target": "Action-Recall.input"
        },
        {
            "source": "Color Role Field.sigmoided activation",
            "target": "Projection 26.input"
        },
        {
            "source": "Action role Field.sigmoided activation",
            "target": "Projection 27.input"
        },
        {
            "source": "Action-Recall.sigmoided activation",
            "target": "Static Gain 91.input"
        },
        {
            "source": "Static Gain 91.output",
            "target": "Intention-Selection.input"
        },
        {
            "source": "Sound Role Field.sigmoided activation",
            "target": "Sound-Recall.input"
        },
        {
            "source": "Sound-Recall.sigmoided activation",
            "target": "Static Gain 92.input"
        },
        {
            "source": "Color-Recall-CoS.sigmoided activation",
            "target": "Sound-Recall.input"
        },
        {
            "source": "Sound-Recall-CoS.sigmoided activation",
            "target": "Static Gain 93.input"
        },
        {
            "source": "Static Gain 93.output",
            "target": "Sound-Recall-CoD.input"
        },
        {
            "source": "Static Gain 85.output",
            "target": "Color Role Field.input"
        },
        {
            "source": "Static Gain 85.output",
            "target": "Action role Field.input"
        },
        {
            "source": "Sound-Recall-CoS.sigmoided activation",
            "target": "Sound-Recall.input"
        },
        {
            "source": "Sound-Recall-CoS.sigmoided activation",
            "target": "Action-Recall.input"
        },
        {
            "source": "Sound Concepts.sigmoided activation",
            "target": "Static Gain 94.input"
        },
        {
            "source": "Static Gain 88.output",
            "target": "Goal-CoD.input"
        },
        {
            "source": "Static Gain 90.output",
            "target": "Goal-CoD.input"
        },
        {
            "source": "Action-Working-Memory.sigmoided activation",
            "target": "Projection 29.input"
        },
        {
            "source": "Goal-Recall-Intention.sigmoided activation",
            "target": "Static Gain 73.input"
        },
        {
            "source": "Sound-Recall-Intention.sigmoided activation",
            "target": "Static Gain 85.input"
        },
        {
            "source": "Object-Recall-Intention.sigmoided activation",
            "target": "Static Gain 72.input"
        },
        {
            "source": "Goal-Change-Detection.sigmoided activation",
            "target": "Projection 17.input"
        },
        {
            "source": "Projection 17.output",
            "target": "Goal-Recall-Intention.input"
        },
        {
            "source": "Color-Change-Detection.sigmoided activation",
            "target": "Projection 16.input"
        },
        {
            "source": "Projection 16.output",
            "target": "Object-Recall-Intention.input"
        },
        {
            "source": "Sound-Change-Detection.sigmoided activation",
            "target": "Projection 4.input"
        },
        {
            "source": "Projection 4.output",
            "target": "Sound-Recall-Intention.input"
        },
        {
            "source": "Sound-Change-Gate.sigmoided activation",
            "target": "Static Gain 87.input"
        },
        {
            "source": "Sound-Recall-Intention.sigmoided activation",
            "target": "Sound-Change-Gate.input"
        },
        {
            "source": "Sound-Change-Detection.sigmoided activation",
            "target": "Sound-Change-Gate.input"
        },
        {
            "source": "Goal-Change-Gate.sigmoided activation",
            "target": "Static Gain 74.input"
        },
        {
            "source": "Goal-Recall-Intention.sigmoided activation",
            "target": "Goal-Change-Gate.input"
        },
        {
            "source": "Goal-Change-Detection.sigmoided activation",
            "target": "Goal-Change-Gate.input"
        },
        {
            "source": "Goal-Recall-Intention.sigmoided activation",
            "target": "Static Gain 22.input"
        },
        {
            "source": "Sound-Recall-Intention.sigmoided activation",
            "target": "Static Gain 23.input"
        },
        {
            "source": "Object-Recall-Intention.sigmoided activation",
            "target": "Static Gain 69.input"
        },
        {
            "source": "Static Gain 69.output",
            "target": "Sound-Recall-Intention.input"
        },
        {
            "source": "Static Gain 69.output",
            "target": "Goal-Recall-Intention.input"
        },
        {
            "source": "Static Gain 23.output",
            "target": "Object-Recall-Intention.input"
        },
        {
            "source": "Static Gain 23.output",
            "target": "Goal-Recall-Intention.input"
        },
        {
            "source": "Static Gain 22.output",
            "target": "Sound-Recall-Intention.input"
        },
        {
            "source": "Static Gain 22.output",
            "target": "Object-Recall-Intention.input"
        },
        {
            "source": "Object-Recall-Intention.sigmoided activation",
            "target": "Static Gain 86.input"
        },
        {
            "source": "Sound-Recall-Intention.sigmoided activation",
            "target": "Static Gain 80.input"
        },
        {
            "source": "Static Gain 80.output",
            "target": "Sound-Recall.input"
        },
        {
            "source": "Static Gain 86.output",
            "target": "Action-Recall.input"
        },
        {
            "source": "Object-Recall-Intention.sigmoided activation",
            "target": "Color-Recall-CoD.input"
        },
        {
            "source": "Object-Recall-Intention.sigmoided activation",
            "target": "Color-Recall-CoS.input"
        },
        {
            "source": "Sound-Recall-Intention.sigmoided activation",
            "target": "Sound-Recall-CoD.input"
        },
        {
            "source": "Sound-Recall-Intention.sigmoided activation",
            "target": "Sound-Recall-CoS.input"
        },
        {
            "source": "Goal-Recall-Intention.sigmoided activation",
            "target": "Goal-Recall-CoDs.input"
        },
        {
            "source": "Goal-Recall-Intention.sigmoided activation",
            "target": "Goal-Recall-CoS.input"
        },
        {
            "source": "Static Gain 80.output",
            "target": "Action-Recall.input"
        },
        {
            "source": "Static Gain 86.output",
            "target": "Sound-Recall.input"
        },
        {
            "source": "Action-Habituation.activation",
            "target": "Static Gain 97.input"
        },
        {
            "source": "Action-Perseveration.activation",
            "target": "Static Gain 98.input"
        },
        {
            "source": "ObjectColor Concepts.sigmoided activation",
            "target": "Projection 20.input"
        },
        {
            "source": "Intention-Selection.sigmoided activation",
            "target": "Action-Perseveration.input"
        },
        {
            "source": "Intention-Selection.sigmoided activation",
            "target": "Action-Habituation.input"
        },
        {
            "source": "Intention-CoS.sigmoided activation",
            "target": "Action-Habituation.peak detector"
        },
        {
            "source": "Goal-Recall-Intention.sigmoided activation",
            "target": "Static Gain 79.input"
        },
        {
            "source": "Static Gain 79.output",
            "target": "Sound-Recall.input"
        },
        {
            "source": "Static Gain 79.output",
            "target": "Action-Recall.input"
        },
        {
            "source": "Goal-Recall-CoS.sigmoided activation",
            "target": "Sound-Recall.input"
        },
        {
            "source": "Goal-Recall-CoS.sigmoided activation",
            "target": "Action-Recall.input"
        },
        {
            "source": "Recall-Goal-Match-CoS.sigmoided activation",
            "target": "Static Gain 8.input"
        },
        {
            "source": "Static Gain 8.output",
            "target": "Recall-Precondition.input"
        },
        {
            "source": "Recall-Precondition.sigmoided activation",
            "target": "Static Gain 15.input"
        },
        {
            "source": "Static Gain 15.output",
            "target": "Intention-Compare-Strategies.input"
        },
        {
            "source": "Intention-Compare-Strategies.sigmoided activation",
            "target": "Strategie-Gate.input"
        },
        {
            "source": "Strategy-Selection.sigmoided activation",
            "target": "Projection 14.input"
        },
        {
            "source": "Projection 14.output",
            "target": "CoS-loaded-strategy.input"
        },
        {
            "source": "CoS-loaded-strategy.sigmoided activation",
            "target": "Static Gain 96.input"
        },
        {
            "source": "Static Gain 96.output",
            "target": "Precondition-loaded-Strategy.input"
        },
        {
            "source": "Precondition-loaded-Strategy.sigmoided activation",
            "target": "Static Gain 99.input"
        },
        {
            "source": "Recall-Goal-Match.sigmoided activation",
            "target": "Projection 18.input"
        },
        {
            "source": "Projection 18.output",
            "target": "Recall-Goal-Match-CoS.input"
        },
        {
            "source": "Static Gain 99.output",
            "target": "Intention-Perform-Action.input"
        },
        {
            "source": "Goal-Intention.sigmoided activation",
            "target": "Recall-Goal-Match-CoS.input"
        },
        {
            "source": "Goal-Intention.sigmoided activation",
            "target": "Recall-Precondition.input"
        },
        {
            "source": "Goal-Intention.sigmoided activation",
            "target": "Intention-Compare-Strategies.input"
        },
        {
            "source": "Goal-Selection.sigmoided activation",
            "target": "Recall-Goal-Match.input"
        },
        {
            "source": "Goal-Intention.sigmoided activation",
            "target": "Strategy-Selection.input"
        },
        {
            "source": "Goal-Intention.sigmoided activation",
            "target": "CoS-loaded-strategy.input"
        },
        {
            "source": "Goal-Intention.sigmoided activation",
            "target": "Precondition-loaded-Strategy.input"
        },
        {
            "source": "Goal-Intention.sigmoided activation",
            "target": "Intention-Perform-Action.input"
        },
        {
            "source": "Strategy-Selection.sigmoided activation",
            "target": "Static Gain 100.input"
        },
        {
            "source": "Static Gain 100.output",
            "target": "Intention-Selection.input"
        },
        {
            "source": "Goal-Selection.sigmoided activation",
            "target": "Static Gain 81.input"
        },
        {
            "source": "Static Gain 81.output",
            "target": "Sound Role Field.input"
        },
        {
            "source": "Goal-Intention.sigmoided activation",
            "target": "Goal-Precondition.input"
        },
        {
            "source": "Goal-Intention.sigmoided activation",
            "target": "Goal-CoS.input"
        },
        {
            "source": "Goal-Intention.sigmoided activation",
            "target": "Goal-CoD.input"
        },
        {
            "source": "Goal-Selection.sigmoided activation",
            "target": "Goal-Match.input"
        },
        {
            "source": "Static Gain 92.output",
            "target": "Goal-Selection.input"
        },
        {
            "source": "Static Gain 94.output",
            "target": "Goal-Selection.input"
        },
        {
            "source": "Goal-Selection.sigmoided activation",
            "target": "Goal-Change-Detection.input"
        },
        {
            "source": "Goal-Selection.sigmoided activation",
            "target": "Goal-Change-Inhibition.input"
        },
        {
            "source": "Goal-Change-Precondition.sigmoided activation",
            "target": "Static Gain 89.input"
        },
        {
            "source": "Static Gain 89.output",
            "target": "Goal-Recall-Intention.input"
        },
        {
            "source": "Projection 17.output",
            "target": "Goal-Change-CoS.input"
        },
        {
            "source": "Goal-Change-CoS.sigmoided activation",
            "target": "Static Gain 95.input"
        },
        {
            "source": "Static Gain 95.output",
            "target": "Goal-Change-Precondition.input"
        },
        {
            "source": "Goal-Intention.sigmoided activation",
            "target": "Goal-Change-CoS.input"
        },
        {
            "source": "Goal-Intention.sigmoided activation",
            "target": "Goal-Change-Precondition.input"
        },
        {
            "source": "Sound-Recall.sigmoided activation",
            "target": "Recall-Goal-Match.input"
        },
        {
            "source": "Action-Recall.sigmoided activation",
            "target": "Strategie-Gate.input"
        },
        {
            "source": "Intention-CoS.sigmoided activation",
            "target": "Static Gain 103.input"
        },
        {
            "source": "Static Gain 103.output",
            "target": "Action-Color-Projection.input"
        },
        {
            "source": "Static Gain 103.output",
            "target": "Action-Projection.input"
        },
        {
            "source": "Action-Timeout.sigmoided activation",
            "target": "Action-Reset.input"
        },
        {
            "source": "Action-Timeout.sigmoided activation",
            "target": "Static Gain 7.input"
        },
        {
            "source": "Action-Reset.sigmoided activation",
            "target": "Static Gain 82.input"
        },
        {
            "source": "Static Gain 82.output",
            "target": "Action-Timeout.input"
        },
        {
            "source": "Static Gain 7.output",
            "target": "Intention-CoS.input"
        },
        {
            "source": "Intention-CoS.sigmoided activation",
            "target": "CoS-Timer.input"
        },
        {
            "source": "CoS-Timer.sigmoided activation",
            "target": "Action-Timeout.input"
        },
        {
            "source": "Static Gain 7.output",
            "target": "Intention-Perform-Action.input"
        },
        {
            "source": "Intention-Perform-Action.sigmoided activation",
            "target": "Static Gain 102.input"
        },
        {
            "source": "Static Gain 102.output",
            "target": "Intention-Selection.input"
        },
        {
            "source": "Static Gain 104.output",
            "target": "Sound-Recall-Intention.input"
        },
        {
            "source": "Learning-Gate.sigmoided activation",
            "target": "Sound-Change-Gate.input"
        },
        {
            "source": "Learning-Gate.sigmoided activation",
            "target": "Static Gain 105.input"
        },
        {
            "source": "Static Gain 105.output",
            "target": "Color Role Field.input"
        },
        {
            "source": "Static Gain 105.output",
            "target": "Action role Field.input"
        },
        {
            "source": "Strategie-Gate.sigmoided activation",
            "target": "Static Gain 106.input"
        },
        {
            "source": "Static Gain 106.output",
            "target": "Strategy-Selection.input"
        },
        {
            "source": "Static Gain 107.output",
            "target": "Goal-Precondition.input"
        },
        {
            "source": "Projection 29.output",
            "target": "Static Gain 107.input"
        },
        {
            "source": "Strategy-Habituation.activation",
            "target": "Static Gain 108.input"
        },
        {
            "source": "Strategy-Perseveration.activation",
            "target": "Static Gain 109.input"
        },
        {
            "source": "Strategy-Selection.sigmoided activation",
            "target": "Strategy-Perseveration.input"
        },
        {
            "source": "Strategy-Selection.sigmoided activation",
            "target": "Strategy-Habituation.input"
        },
        {
            "source": "Goal-CoS.sigmoided activation",
            "target": "Strategy-Perseveration.peak detector"
        },
        {
            "source": "Goal-Habituation.activation",
            "target": "Static Gain 111.input"
        },
        {
            "source": "Goal-Perseveration.activation",
            "target": "Static Gain 110.input"
        },
        {
            "source": "Static Gain 111.output",
            "target": "Goal-Selection.input"
        },
        {
            "source": "Static Gain 110.output",
            "target": "Goal-Selection.input"
        },
        {
            "source": "Goal-Selection.sigmoided activation",
            "target": "Goal-Perseveration.input"
        },
        {
            "source": "Goal-Selection.sigmoided activation",
            "target": "Goal-Habituation.input"
        },
        {
            "source": "Goal-CoS.sigmoided activation",
            "target": "Goal-Perseveration.peak detector"
        },
        {
            "source": "Goal-Selection-Signal.sigmoided activation",
            "target": "Static Gain 112.input"
        },
        {
            "source": "Static Gain 67.output",
            "target": "Color-Space-Perception.input"
        },
        {
            "source": "Microphone TCP Reader.output",
            "target": "Sound-Perception.input"
        },
        {
            "source": "LED1.sigmoided activation",
            "target": "Scalars To Vector.scalar 0"
        },
        {
            "source": "LED2.sigmoided activation",
            "target": "Scalars To Vector.scalar 1"
        },
        {
            "source": "LED3.sigmoided activation",
            "target": "Scalars To Vector.scalar 2"
        },
        {
            "source": "Intention In Action-Action1.sigmoided activation",
            "target": "LED1.input"
        },
        {
            "source": "LED1.sigmoided activation",
            "target": "LED2.input"
        },
        {
            "source": "LED2.sigmoided activation",
            "target": "LED3.input"
        },
        {
            "source": "LED4.sigmoided activation",
            "target": "Scalars To Vector.scalar 3"
        },
        {
            "source": "LED5.sigmoided activation",
            "target": "Scalars To Vector.scalar 4"
        },
        {
            "source": "LED6.sigmoided activation",
            "target": "Scalars To Vector.scalar 5"
        },
        {
            "source": "LED7.sigmoided activation",
            "target": "Scalars To Vector.scalar 6"
        },
        {
            "source": "LED8.sigmoided activation",
            "target": "Scalars To Vector.scalar 7"
        },
        {
            "source": "LED9.sigmoided activation",
            "target": "Scalars To Vector.scalar 8"
        },
        {
            "source": "LED4.sigmoided activation",
            "target": "LED5.input"
        },
        {
            "source": "LED5.sigmoided activation",
            "target": "LED6.input"
        },
        {
            "source": "LED7.sigmoided activation",
            "target": "LED8.input"
        },
        {
            "source": "LED8.sigmoided activation",
            "target": "LED9.input"
        },
        {
            "source": "Intention In Action-Action2.sigmoided activation",
            "target": "LED4.input"
        },
        {
            "source": "Intention-In-Action-Action3.sigmoided activation",
            "target": "LED7.input"
        },
        {
            "source": "LED TCP Reader.output",
            "target": "LED-Perception-Field.input"
        },
        {
            "source": "Gauss Input 4.Gauss input",
            "target": "Action1-Match.input"
        },
        {
            "source": "Action1-Match.sigmoided activation",
            "target": "Projection 25.input"
        },
        {
            "source": "Projection 25.output",
            "target": "CoS-Action1.input"
        },
        {
            "source": "Gauss Input 6.Gauss input",
            "target": "Action3-Match.input"
        },
        {
            "source": "Gauss Input 5.Gauss input",
            "target": "Action2-Match.input"
        },
        {
            "source": "Action2-Match.sigmoided activation",
            "target": "Projection 28.input"
        },
        {
            "source": "Action3-Match.sigmoided activation",
            "target": "Projection 30.input"
        },
        {
            "source": "Projection 28.output",
            "target": "CoS-Action2.input"
        },
        {
            "source": "Projection 30.output",
            "target": "CoS-Action3.input"
        },
        {
            "source": "Action Concepts.sigmoided activation",
            "target": "Action1-Match.input"
        },
        {
            "source": "Action Concepts.sigmoided activation",
            "target": "Action2-Match.input"
        },
        {
            "source": "Action Concepts.sigmoided activation",
            "target": "Action3-Match.input"
        },
        {
            "source": "Projection 29.output",
            "target": "Action-Outcome-Detectio.input"
        },
        {
            "source": "Action-Outcome-Detectio.sigmoided activation",
            "target": "Learning-Gate.input"
        },
        {
            "source": "Projection 4.output",
            "target": "Action-Outcome-Detectio.input"
        },
        {
            "source": "Goal-Habituation-Gate.sigmoided activation",
            "target": "Goal-Habituation.peak detector"
        },
        {
            "source": "Goal-CoD.sigmoided activation",
            "target": "Goal-Habituation-Gate.input"
        },
        {
            "source": "Goal-CoS.sigmoided activation",
            "target": "Goal-Habituation-Gate.input"
        },
        {
            "source": "Goal-Habituation-Gate.sigmoided activation",
            "target": "Strategy-Habituation.peak detector"
        },
        {
            "source": "red.sigmoided activation",
            "target": "Scalars To Vector 2.scalar 0"
        },
        {
            "source": "orange.sigmoided activation",
            "target": "Scalars To Vector 2.scalar 1"
        },
        {
            "source": "yellow.sigmoided activation",
            "target": "Scalars To Vector 2.scalar 2"
        },
        {
            "source": "green.sigmoided activation",
            "target": "Scalars To Vector 2.scalar 3"
        },
        {
            "source": "blue.sigmoided activation",
            "target": "Scalars To Vector 2.scalar 4"
        },
        {
            "source": "violett.sigmoided activation",
            "target": "Scalars To Vector 2.scalar 5"
        },
        {
            "source": "Scalars To Vector 2.vector",
            "target": "ObjectColor Concepts.input"
        },
        {
            "source": "Scalars To Vector 3.vector",
            "target": "Action Concepts.input"
        },
        {
            "source": "action1.sigmoided activation",
            "target": "Scalars To Vector 3.scalar 0"
        },
        {
            "source": "action 3.sigmoided activation",
            "target": "Scalars To Vector 3.scalar 2"
        },
        {
            "source": "action 2.sigmoided activation",
            "target": "Scalars To Vector 3.scalar 1"
        },
        {
            "source": "Scalars To Vector 4.vector",
            "target": "Sound Concepts.input"
        },
        {
            "source": "low pitch.sigmoided activation",
            "target": "Scalars To Vector 4.scalar 0"
        },
        {
            "source": "medium pitch.sigmoided activation",
            "target": "Scalars To Vector 4.scalar 1"
        },
        {
            "source": "high pitch.sigmoided activation",
            "target": "Scalars To Vector 4.scalar 2"
        },
        {
            "source": "Reward Hebb Trace 27.reciprocal output",
            "target": "red.input"
        },
        {
            "source": "Reward Hebb Trace 28.reciprocal output",
            "target": "orange.input"
        },
        {
            "source": "Reward Hebb Trace 29.reciprocal output",
            "target": "yellow.input"
        },
        {
            "source": "Reward Hebb Trace 30.reciprocal output",
            "target": "green.input"
        },
        {
            "source": "Reward Hebb Trace 31.reciprocal output",
            "target": "blue.input"
        },
        {
            "source": "Reward Hebb Trace 38.reciprocal output",
            "target": "violett.input"
        },
        {
            "source": "Color-Attention-Field.sigmoided activation",
            "target": "Reward Hebb Trace 27.association input"
        },
        {
            "source": "Color-Attention-Field.sigmoided activation",
            "target": "Reward Hebb Trace 28.association input"
        },
        {
            "source": "Color-Attention-Field.sigmoided activation",
            "target": "Reward Hebb Trace 29.association input"
        },
        {
            "source": "Color-Attention-Field.sigmoided activation",
            "target": "Reward Hebb Trace 30.association input"
        },
        {
            "source": "Color-Attention-Field.sigmoided activation",
            "target": "Reward Hebb Trace 31.association input"
        },
        {
            "source": "Color-Attention-Field.sigmoided activation",
            "target": "Reward Hebb Trace 38.association input"
        },
        {
            "source": "Reward Hebb Trace 41.reciprocal output",
            "target": "action 2.input"
        },
        {
            "source": "Reward Hebb Trace 40.reciprocal output",
            "target": "action1.input"
        },
        {
            "source": "Reward Hebb Trace 42.reciprocal output",
            "target": "action 3.input"
        },
        {
            "source": "LED-Perception-Field.sigmoided activation",
            "target": "Reward Hebb Trace 40.association input"
        },
        {
            "source": "LED-Perception-Field.sigmoided activation",
            "target": "Reward Hebb Trace 41.association input"
        },
        {
            "source": "LED-Perception-Field.sigmoided activation",
            "target": "Reward Hebb Trace 42.association input"
        },
        {
            "source": "Convolution.result",
            "target": "Transfer Function 2.input"
        },
        {
            "source": "Transfer Function 2.sigmoided output",
            "target": "Projection 3.input"
        },
        {
            "source": "Projection 3.output",
            "target": "Static Gain 67.input"
        },
        {
            "source": "Static Gain 108.output",
            "target": "Strategy-Selection.input"
        },
        {
            "source": "Goal-Selection.sigmoided activation",
            "target": "TCP-Goal-Writer.input"
        },
        {
            "source": "TCP-Task-reader.output",
            "target": "Supervisor-Task-Input.input"
        },
        {
            "source": "Static Gain 95.output",
            "target": "Strategy-Selection.input"
        },
        {
            "source": "Action-Color-Projection.sigmoided activation",
            "target": "Vector To Scalars.input vector"
        },
        {
            "source": "Vector To Scalars.scalar 0",
            "target": "Scalars To Vector 5.scalar 0"
        },
        {
            "source": "Vector To Scalars.scalar 1",
            "target": "Scalars To Vector 5.scalar 1"
        },
        {
            "source": "Vector To Scalars.scalar 2",
            "target": "Scalars To Vector 5.scalar 2"
        },
        {
            "source": "Vector To Scalars.scalar 3",
            "target": "Scalars To Vector 5.scalar 4"
        },
        {
            "source": "Vector To Scalars.scalar 3",
            "target": "Scalars To Vector 5.scalar 3"
        },
        {
            "source": "Vector To Scalars.scalar 3",
            "target": "Scalars To Vector 5.scalar 5"
        },
        {
            "source": "Vector To Scalars.scalar 4",
            "target": "Scalars To Vector 5.scalar 8"
        },
        {
            "source": "Vector To Scalars.scalar 4",
            "target": "Scalars To Vector 5.scalar 7"
        },
        {
            "source": "Vector To Scalars.scalar 4",
            "target": "Scalars To Vector 5.scalar 9"
        },
        {
            "source": "Vector To Scalars.scalar 5",
            "target": "Scalars To Vector 5.scalar 11"
        },
        {
            "source": "Vector To Scalars.scalar 5",
            "target": "Scalars To Vector 5.scalar 10"
        },
        {
            "source": "Vector To Scalars.scalar 5",
            "target": "Scalars To Vector 5.scalar 12"
        },
        {
            "source": "Scalars To Vector 5.vector",
            "target": "Static Gain 6.input"
        },
        {
            "source": "Static Gain 6.output",
            "target": "Color-Attention-Field.input"
        },
        {
            "source": "ObjectColor Concepts.sigmoided activation",
            "target": "Color-Memory.input"
        },
        {
            "source": "Color-memory-inhibition.sigmoided activation",
            "target": "Static Gain 114.input"
        },
        {
            "source": "Static Gain 114.output",
            "target": "Color-Memory.input"
        },
        {
            "source": "Color-Memory.sigmoided activation",
            "target": "Static Gain 113.input"
        },
        {
            "source": "ObjectColor Concepts.sigmoided activation",
            "target": "Static Gain 115.input"
        },
        {
            "source": "Static Gain 115.output",
            "target": "Color-memory-inhibition.input"
        },
        {
            "source": "Color-Memory.sigmoided activation",
            "target": "Color-memory-inhibition.input"
        },
        {
            "source": "Static Gain 113.output",
            "target": "Color Role Field.input"
        },
        {
            "source": "Static Gain 98.output",
            "target": "Intention-Selection.input"
        },
        {
            "source": "Supervisor-Task-Input.sigmoided activation",
            "target": "Vector To Scalars 2.input vector"
        },
        {
            "source": "Vector To Scalars 2.scalar 0",
            "target": "Reset-Signal.input"
        },
        {
            "source": "Vector To Scalars 2.scalar 1",
            "target": "exploration-Task.input"
        },
        {
            "source": "Vector To Scalars 2.scalar 2",
            "target": "Low-Pitch-Task.input"
        },
        {
            "source": "Vector To Scalars 2.scalar 3",
            "target": "Medium-Pitch-Task.input"
        },
        {
            "source": "Vector To Scalars 2.scalar 4",
            "target": "High-Pitch-Task.input"
        },
        {
            "source": "Vector To Scalars 2.scalar 5",
            "target": "Goal-Selection-Signal.input"
        },
        {
            "source": "Vector To Scalars 2.scalar 6",
            "target": "goal-reaching-task.input"
        },
        {
            "source": "Vector To Scalars 2.scalar 7",
            "target": "Action-Task.input"
        },
        {
            "source": "Low-Pitch-Task.sigmoided activation",
            "target": "Scalars To Vector 6.scalar 0"
        },
        {
            "source": "Scalars To Vector 6.vector",
            "target": "Static Gain 70.input"
        },
        {
            "source": "Medium-Pitch-Task.sigmoided activation",
            "target": "Scalars To Vector 6.scalar 1"
        },
        {
            "source": "High-Pitch-Task.sigmoided activation",
            "target": "Scalars To Vector 6.scalar 2"
        },
        {
            "source": "Goal-Intention.sigmoided activation",
            "target": "Static Gain 116.input"
        },
        {
            "source": "Static Gain 116.output",
            "target": "Goal-Selection.input"
        },
        {
            "source": "Scalars To Vector 6.vector",
            "target": "Projection.input"
        },
        {
            "source": "Projection.output",
            "target": "Goal-Intention.input"
        },
        {
            "source": "Static Gain 70.output",
            "target": "Goal-Selection.input"
        },
        {
            "source": "exploration-Task.sigmoided activation",
            "target": "Intention-Perform-Action.input"
        },
        {
            "source": "Goal-Selection-Signal.sigmoided activation",
            "target": "Goal-Intention.input"
        },
        {
            "source": "Static Gain 112.output",
            "target": "Goal-Selection.input"
        },
        {
            "source": "goal-reaching-task.sigmoided activation",
            "target": "Goal-Intention.input"
        },
        {
            "source": "Static Gain 109.output",
            "target": "Strategy-Selection.input"
        },
        {
            "source": "Static Gain 104.output",
            "target": "Object-Recall-Intention.input"
        },
        {
            "source": "Static Gain 104.output",
            "target": "Goal-Recall-Intention.input"
        },
        {
            "source": "Reset-Signal.sigmoided activation",
            "target": "Static Gain 101.input"
        },
        {
            "source": "Static Gain 101.output",
            "target": "Sound-Recall.input"
        },
        {
            "source": "Static Gain 101.output",
            "target": "Action-Recall.input"
        },
        {
            "source": "Learning-Reward-Node.sigmoided activation",
            "target": "Reward Hebb Trace 24.reward signal"
        },
        {
            "source": "Learning-Reward-Node.sigmoided activation",
            "target": "Reward Hebb Trace 23.reward signal"
        },
        {
            "source": "Learning-Reward-Node.sigmoided activation",
            "target": "Reward Hebb Trace 22.reward signal"
        },
        {
            "source": "Learning-Reward-Node.sigmoided activation",
            "target": "Reward Hebb Trace 21.reward signal"
        },
        {
            "source": "Learning-Reward-Node.sigmoided activation",
            "target": "Reward Hebb Trace 20.reward signal"
        },
        {
            "source": "Learning-Reward-Node.sigmoided activation",
            "target": "Reward Hebb Trace.reward signal"
        },
        {
            "source": "Learning-Gate.sigmoided activation",
            "target": "Learning-Reward-Node.input"
        },
        {
            "source": "Belief-Active.sigmoided activation",
            "target": "Learning-Reward-Node.input"
        },
        {
            "source": "Commit Boost.sigmoided activation",
            "target": "Learning-Reward-Node.input"
        },
        {
            "source": "Recruitment Boost.sigmoided activation",
            "target": "Learning-Reward-Node.input"
        },
        {
            "source": "Belief-Node 1.sigmoided activation",
            "target": "Belief-Active.input"
        },
        {
            "source": "Belief-Node 2.sigmoided activation",
            "target": "Belief-Active.input"
        },
        {
            "source": "Belief-Node 3.sigmoided activation",
            "target": "Belief-Active.input"
        },
        {
            "source": "Belief-Node 4.sigmoided activation",
            "target": "Belief-Active.input"
        },
        {
            "source": "Belief-Node 5.sigmoided activation",
            "target": "Belief-Active.input"
        },
        {
            "source": "Belief-Node 6.sigmoided activation",
            "target": "Belief-Active.input"
        },
        {
            "source": "Learning-Gate.sigmoided activation",
            "target": "Commit Boost.input"
        },
        {
            "source": "Learning-Gate.sigmoided activation",
            "target": "Recruitment Boost.input"
        },
        {
            "source": "Belief-Active.sigmoided activation",
            "target": "Color-Recall-CoS.input"
        },
        {
            "source": "Belief-Active.sigmoided activation",
            "target": "Sound-Recall-CoS.input"
        },
        {
            "source": "Belief-Active.sigmoided activation",
            "target": "Goal-Recall-CoS.input"
        },
        {
            "source": "Object-Gate.sigmoided activation",
            "target": "Static Gain 77.input"
        },
        {
            "source": "Color-Change-Detection.sigmoided activation",
            "target": "Object-Gate.input"
        },
        {
            "source": "Static Gain 77.output",
            "target": "Color Role Field.input"
        },
        {
            "source": "Object-Recall-Intention.sigmoided activation",
            "target": "Object-Gate.input"
        },
        {
            "source": "Static Gain 21.output",
            "target": "Color-Change-Detection.input"
        },
        {
            "source": "Color-Memory.sigmoided activation",
            "target": "Color-Change-Detection.input"
        },
        {
            "source": "Color-Memory.sigmoided activation",
            "target": "Color-Change-Inhibition.input"
        },
        {
            "source": "Camera TCP Reader.output",
            "target": "Color Conversion.input image"
        },
        {
            "source": "Static Gain 97.output",
            "target": "Intention-Selection.input"
        },
        {
            "source": "Action-Projection.sigmoided activation",
            "target": "Vector To Scalars 3.input vector"
        },
        {
            "source": "Vector To Scalars 3.scalar 0",
            "target": "Intention In Action-Action1.input"
        },
        {
            "source": "Vector To Scalars 3.scalar 1",
            "target": "Intention In Action-Action2.input"
        },
        {
            "source": "Vector To Scalars 3.scalar 2",
            "target": "Intention-In-Action-Action3.input"
        },
        {
            "source": "Action-Outcome-Detectio.sigmoided activation",
            "target": "Static Gain 104.input"
        },
        {
            "source": "Intention In Action-Action1.sigmoided activation",
            "target": "CoS-Action1.input"
        },
        {
            "source": "Intention In Action-Action2.sigmoided activation",
            "target": "CoS-Action2.input"
        },
        {
            "source": "Intention-In-Action-Action3.sigmoided activation",
            "target": "CoS-Action3.input"
        },
        {
            "source": "Goal-Recall-CoDs.sigmoided activation",
            "target": "Static Gain 71.input"
        },
        {
            "source": "Static Gain 71.output",
            "target": "Precondition-loaded-Strategy.input"
        },
        {
            "source": "Learning-Reward-Node.sigmoided activation",
            "target": "Action-Perseveration.peak detector"
        },
        {
            "source": "Vector To Scalars 2.scalar 5",
            "target": "Goal-UnSelection-Signal.input"
        },
        {
            "source": "Goal-UnSelection-Signal.sigmoided activation",
            "target": "Static Gain 117.input"
        },
        {
            "source": "Static Gain 117.output",
            "target": "Goal-Intention.input"
        },
        {
            "source": "Goal-Selection-Signal.sigmoided activation",
            "target": "Static Gain 118.input"
        },
        {
            "source": "Static Gain 118.output",
            "target": "Goal-UnSelection-Signal.input"
        },
        {
            "source": "Static Gain 117.output",
            "target": "Sound-Recall.input"
        },
        {
            "source": "Static Gain 117.output",
            "target": "Action-Recall.input"
        }
    ],
    "records": {
        "Action Concepts[BUFFER].activation": "0.2 s",
        "Action-Outcome-Detectio[BUFFER].activation": "0.2 s",
        "Action-Recall[BUFFER].activation": "0.2 s",
        "Camera TCP Reader[OUTPUT].output": "0.2 s",
        "Goal-Selection[BUFFER].activation": "0.2 s",
        "Intention-Selection[BUFFER].activation": "0.2 s",
        "ObjectColor Concepts[BUFFER].activation": "0.2 s",
        "Sound Concepts[BUFFER].activation": "0.2 s",
        "Sound-Recall[BUFFER].activation": "0.2 s",
        "Strategy-Selection[BUFFER].activation": "0.2 s",
        "Supervisor-Task-Input[BUFFER].activation": "0.2 s"
    },
    "scripts": [
        {
            "type": "cedar.dyn.scripts.ExecuteFunctionOnSteps",
            "configuration": {
                "name": "Execute Function On Steps",
                "FunctionName": "Preshape->resetMemory()"
            }
        },
        {
            "type": "cedar.proc.scripts.ExecuteFunctionOnStepsPlugin",
            "configuration": {
                "name": "Execute Function On Steps Plugin",
                "FunctionName": "RewardHebbTrace->resetWeights()"
            }
        }
    ],
    "name": "element",
    "connectors": "",
    "is looped": "true",
    "time factor": "1",
    "ui": [
        {
            "type": "connections",
            "connections": ""
        },
        {
            "type": "step",
            "step": "Action Concepts",
            "display style": "ICON_AND_TEXT",
            "width": "124",
            "height": "40",
            "positionX": "1624",
            "positionY": "1162"
        },
        {
            "type": "step",
            "step": "Action role Field",
            "display style": "ICON_AND_TEXT",
            "width": "124",
            "height": "40",
            "positionX": "1288",
            "positionY": "-2156"
        },
        {
            "type": "step",
            "step": "Action-Change-Inhibition",
            "display style": "ICON_AND_TEXT",
            "width": "124",
            "height": "40",
            "positionX": "1904",
            "positionY": "1232"
        },
        {
            "type": "step",
            "step": "Action-Color-Projection",
            "display style": "ICON_AND_TEXT",
            "width": "124",
            "height": "40",
            "positionX": "-3346",
            "positionY": "-126"
        },
        {
            "type": "step",
            "step": "Action-Habituation",
            "display style": "ICON_AND_TEXT",
            "width": "124",
            "height": "40",
            "positionX": "-728",
            "positionY": "-896"
        },
        {
            "type": "step",
            "step": "Action-Outcome-Detectio",
            "display style": "ICON_AND_TEXT",
            "width": "124",
            "height": "40",
            "positionX": "-714",
            "positionY": "-2520"
        },
        {
            "type": "step",
            "step": "Action-Perseveration",
            "display style": "ICON_AND_TEXT",
            "width": "124",
            "height": "40",
            "positionX": "-728",
            "positionY": "-952"
        },
        {
            "type": "step",
            "step": "Action-Projection",
            "display style": "ICON_AND_TEXT",
            "width": "124",
            "height": "40",
            "positionX": "-126",
            "positionY": "-952"
        },
        {
            "type": "step",
            "step": "Action-Recall",
            "display style": "ICON_AND_TEXT",
            "width": "124",
            "height": "40",
            "positionX": "672",
            "positionY": "-1260"
        },
        {
            "type": "step",
            "step": "Action-Reset",
            "display style": "ICON_AND_TEXT",
            "width": "124",
            "height": "40",
            "positionX": "336",
            "positionY": "-644"
        },
        {
            "type": "step",
            "step": "Action-Task",
            "display style": "ICON_AND_TEXT",
            "width": "124",
            "height": "40",
            "positionX": "-2030",
            "positionY": "-1554"
        },
        {
            "type": "step",
            "step": "Action-Timeout",
            "display style": "ICON_AND_TEXT",
            "width": "124",
            "height": "40",
            "positionX": "336",
            "positionY": "-588"
        },
        {
            "type": "step",
            "step": "Action-Working-Memory",
            "display style": "ICON_AND_TEXT",
            "width": "124",
            "height": "40",
            "positionX": "1904",
            "positionY": "1162"
        },
        {
            "type": "step",
            "step": "Action1-Match",
            "display style": "ICON_AND_TEXT",
            "width": "124",
            "height": "40",
            "positionX": "-308",
            "positionY": "-420"
        },
        {
            "type": "step",
            "step": "Action2-Match",
            "display style": "ICON_AND_TEXT",
            "width": "124",
            "height": "40",
            "positionX": "-308",
            "positionY": "-210"
        },
        {
            "type": "step",
            "step": "Action3-Match",
            "display style": "ICON_AND_TEXT",
            "width": "124",
            "height": "40",
            "positionX": "-322",
            "positionY": "0"
        },
        {
            "type": "step",
            "step": "Attention-Color-Binding-Field",
            "display style": "ICON_AND_TEXT",
            "width": "124",
            "height": "40",
            "positionX": "-2674",
            "positionY": "-112"
        },
        {
            "type": "step",
            "step": "Belief-Active",
            "display style": "ICON_AND_TEXT",
            "width": "124",
            "height": "40",
            "positionX": "1470",
            "positionY": "-1064"
        },
        {
            "type": "step",
            "step": "Belief-Boost",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "2982",
            "positionY": "-2100"
        },
        {
            "type": "step",
            "step": "Belief-Network-Node",
            "display style": "ICON_AND_TEXT",
            "width": "124",
            "height": "40",
            "positionX": "3066",
            "positionY": "-2100"
        },
        {
            "type": "step",
            "step": "Belief-Node 1",
            "display style": "ICON_AND_TEXT",
            "width": "124",
            "height": "40",
            "positionX": "1960",
            "positionY": "-1456"
        },
        {
            "type": "step",
            "step": "Belief-Node 2",
            "display style": "ICON_AND_TEXT",
            "width": "124",
            "height": "40",
            "positionX": "1960",
            "positionY": "-1708"
        },
        {
            "type": "step",
            "step": "Belief-Node 3",
            "display style": "ICON_AND_TEXT",
            "width": "124",
            "height": "40",
            "positionX": "1960",
            "positionY": "-1960"
        },
        {
            "type": "step",
            "step": "Belief-Node 4",
            "display style": "ICON_AND_TEXT",
            "width": "124",
            "height": "40",
            "positionX": "1960",
            "positionY": "-2212"
        },
        {
            "type": "step",
            "step": "Belief-Node 5",
            "display style": "ICON_AND_TEXT",
            "width": "124",
            "height": "40",
            "positionX": "1960",
            "positionY": "-2464"
        },
        {
            "type": "step",
            "step": "Belief-Node 6",
            "display style": "ICON_AND_TEXT",
            "width": "124",
            "height": "40",
            "positionX": "1960",
            "positionY": "-2716"
        },
        {
            "type": "step",
            "step": "Camera TCP Reader",
            "display style": "ICON_AND_TEXT",
            "width": "124",
            "height": "40",
            "positionX": "-1064",
            "positionY": "924"
        },
        {
            "type": "step",
            "step": "Channel Split",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-686",
            "positionY": "924"
        },
        {
            "type": "step",
            "step": "CoS-Action1",
            "display style": "ICON_AND_TEXT",
            "width": "124",
            "height": "40",
            "positionX": "-14",
            "positionY": "-476"
        },
        {
            "type": "step",
            "step": "CoS-Action2",
            "display style": "ICON_AND_TEXT",
            "width": "124",
            "height": "40",
            "positionX": "-14",
            "positionY": "-266"
        },
        {
            "type": "step",
            "step": "CoS-Action3",
            "display style": "ICON_AND_TEXT",
            "width": "124",
            "height": "40",
            "positionX": "-28",
            "positionY": "-56"
        },
        {
            "type": "step",
            "step": "CoS-Break",
            "display style": "ICON_AND_TEXT",
            "width": "124",
            "height": "40",
            "positionX": "-1008",
            "positionY": "-266"
        },
        {
            "type": "step",
            "step": "CoS-Color In Attention",
            "display style": "ICON_AND_TEXT",
            "width": "124",
            "height": "40",
            "positionX": "-2926",
            "positionY": "-266"
        },
        {
            "type": "step",
            "step": "CoS-Is In Front Of",
            "display style": "ICON_AND_TEXT",
            "width": "124",
            "height": "40",
            "positionX": "-1582",
            "positionY": "-266"
        },
        {
            "type": "step",
            "step": "CoS-Orient To Object",
            "display style": "ICON_AND_TEXT",
            "width": "124",
            "height": "40",
            "positionX": "-2058",
            "positionY": "-266"
        },
        {
            "type": "step",
            "step": "CoS-Timer",
            "display style": "ICON_AND_TEXT",
            "width": "124",
            "height": "40",
            "positionX": "336",
            "positionY": "-532"
        },
        {
            "type": "step",
            "step": "CoS-loaded-strategy",
            "display style": "ICON_AND_TEXT",
            "width": "124",
            "height": "40",
            "positionX": "-1344",
            "positionY": "-1050"
        },
        {
            "type": "step",
            "step": "Color Conversion",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-882",
            "positionY": "924"
        },
        {
            "type": "step",
            "step": "Color Role Field",
            "display style": "ICON_AND_TEXT",
            "width": "124",
            "height": "40",
            "positionX": "1288",
            "positionY": "-2226"
        },
        {
            "type": "step",
            "step": "Color-Attention-Field",
            "display style": "ICON_AND_TEXT",
            "width": "124",
            "height": "40",
            "positionX": "504",
            "positionY": "924"
        },
        {
            "type": "step",
            "step": "Color-Change-Detection",
            "display style": "ICON_AND_TEXT",
            "width": "124",
            "height": "40",
            "positionX": "-714",
            "positionY": "-1778"
        },
        {
            "type": "step",
            "step": "Color-Change-Inhibition",
            "display style": "ICON_AND_TEXT",
            "width": "124",
            "height": "40",
            "positionX": "-714",
            "positionY": "-1722"
        },
        {
            "type": "step",
            "step": "Color-Memory",
            "display style": "ICON_AND_TEXT",
            "width": "124",
            "height": "40",
            "positionX": "1904",
            "positionY": "924"
        },
        {
            "type": "step",
            "step": "Color-Recall-CoD",
            "display style": "ICON_AND_TEXT",
            "width": "124",
            "height": "40",
            "positionX": "154",
            "positionY": "-1778"
        },
        {
            "type": "step",
            "step": "Color-Recall-CoS",
            "display style": "ICON_AND_TEXT",
            "width": "124",
            "height": "40",
            "positionX": "154",
            "positionY": "-1722"
        },
        {
            "type": "step",
            "step": "Color-Space-Perception",
            "display style": "ICON_AND_TEXT",
            "width": "124",
            "height": "40",
            "positionX": "-56",
            "positionY": "924"
        },
        {
            "type": "step",
            "step": "Color-matching-Field",
            "display style": "ICON_AND_TEXT",
            "width": "124",
            "height": "40",
            "positionX": "-3136",
            "positionY": "-210"
        },
        {
            "type": "step",
            "step": "Color-memory-inhibition",
            "display style": "ICON_AND_TEXT",
            "width": "124",
            "height": "40",
            "positionX": "1904",
            "positionY": "994"
        },
        {
            "type": "step",
            "step": "Commit Boost",
            "display style": "ICON_AND_TEXT",
            "width": "124",
            "height": "40",
            "positionX": "1736",
            "positionY": "-1064"
        },
        {
            "type": "step",
            "step": "Commit-Node 1",
            "display style": "ICON_AND_TEXT",
            "width": "124",
            "height": "40",
            "positionX": "2268",
            "positionY": "-1456"
        },
        {
            "type": "step",
            "step": "Commit-Node 2",
            "display style": "ICON_AND_TEXT",
            "width": "124",
            "height": "40",
            "positionX": "2268",
            "positionY": "-1708"
        },
        {
            "type": "step",
            "step": "Commit-Node 3",
            "display style": "ICON_AND_TEXT",
            "width": "124",
            "height": "40",
            "positionX": "2268",
            "positionY": "-1960"
        },
        {
            "type": "step",
            "step": "Commit-Node 4",
            "display style": "ICON_AND_TEXT",
            "width": "124",
            "height": "40",
            "positionX": "2268",
            "positionY": "-2212"
        },
        {
            "type": "step",
            "step": "Commit-Node 5",
            "display style": "ICON_AND_TEXT",
            "width": "124",
            "height": "40",
            "positionX": "2268",
            "positionY": "-2464"
        },
        {
            "type": "step",
            "step": "Commit-Node 6",
            "display style": "ICON_AND_TEXT",
            "width": "124",
            "height": "40",
            "positionX": "2268",
            "positionY": "-2716"
        },
        {
            "type": "step",
            "step": "Component Multiply",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "1736",
            "positionY": "-2926"
        },
        {
            "type": "step",
            "step": "Component Multiply 10",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "2114",
            "positionY": "-2674"
        },
        {
            "type": "step",
            "step": "Component Multiply 11",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "2114",
            "positionY": "-2422"
        },
        {
            "type": "step",
            "step": "Component Multiply 12",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "1792",
            "positionY": "-2324"
        },
        {
            "type": "step",
            "step": "Component Multiply 13",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "1792",
            "positionY": "-2212"
        },
        {
            "type": "step",
            "step": "Component Multiply 14",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "1792",
            "positionY": "-2142"
        },
        {
            "type": "step",
            "step": "Component Multiply 15",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "2114",
            "positionY": "-2170"
        },
        {
            "type": "step",
            "step": "Component Multiply 16",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "2408",
            "positionY": "-2198"
        },
        {
            "type": "step",
            "step": "Component Multiply 17",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "1792",
            "positionY": "-2030"
        },
        {
            "type": "step",
            "step": "Component Multiply 18",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "1792",
            "positionY": "-1960"
        },
        {
            "type": "step",
            "step": "Component Multiply 19",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "1792",
            "positionY": "-1890"
        },
        {
            "type": "step",
            "step": "Component Multiply 2",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "1792",
            "positionY": "-2786"
        },
        {
            "type": "step",
            "step": "Component Multiply 20",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "2114",
            "positionY": "-1918"
        },
        {
            "type": "step",
            "step": "Component Multiply 21",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "2408",
            "positionY": "-1946"
        },
        {
            "type": "step",
            "step": "Component Multiply 22",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "1792",
            "positionY": "-1778"
        },
        {
            "type": "step",
            "step": "Component Multiply 23",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "1792",
            "positionY": "-1708"
        },
        {
            "type": "step",
            "step": "Component Multiply 24",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "1792",
            "positionY": "-1638"
        },
        {
            "type": "step",
            "step": "Component Multiply 25",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "2114",
            "positionY": "-1666"
        },
        {
            "type": "step",
            "step": "Component Multiply 26",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "2408",
            "positionY": "-1694"
        },
        {
            "type": "step",
            "step": "Component Multiply 27",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "1792",
            "positionY": "-1526"
        },
        {
            "type": "step",
            "step": "Component Multiply 28",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "1792",
            "positionY": "-1456"
        },
        {
            "type": "step",
            "step": "Component Multiply 29",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "1792",
            "positionY": "-1386"
        },
        {
            "type": "step",
            "step": "Component Multiply 3",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "1792",
            "positionY": "-2716"
        },
        {
            "type": "step",
            "step": "Component Multiply 30",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "2114",
            "positionY": "-1414"
        },
        {
            "type": "step",
            "step": "Component Multiply 31",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "2408",
            "positionY": "-1442"
        },
        {
            "type": "step",
            "step": "Component Multiply 32",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "2254",
            "positionY": "-1078"
        },
        {
            "type": "step",
            "step": "Component Multiply 4",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "1792",
            "positionY": "-2646"
        },
        {
            "type": "step",
            "step": "Component Multiply 5",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "2408",
            "positionY": "-2702"
        },
        {
            "type": "step",
            "step": "Component Multiply 6",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "1792",
            "positionY": "-2534"
        },
        {
            "type": "step",
            "step": "Component Multiply 7",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "1792",
            "positionY": "-2464"
        },
        {
            "type": "step",
            "step": "Component Multiply 8",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "1792",
            "positionY": "-2394"
        },
        {
            "type": "step",
            "step": "Component Multiply 9",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "2408",
            "positionY": "-2450"
        },
        {
            "type": "step",
            "step": "Convolution",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-392",
            "positionY": "924"
        },
        {
            "type": "step",
            "step": "Convolution 2",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-1862",
            "positionY": "-168"
        },
        {
            "type": "step",
            "step": "Distance-Matching-Field",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-1932",
            "positionY": "-154"
        },
        {
            "type": "step",
            "step": "Distance-matching-Field",
            "display style": "ICON_AND_TEXT",
            "width": "124",
            "height": "40",
            "positionX": "-1792",
            "positionY": "-168"
        },
        {
            "type": "step",
            "step": "Gauss Input 4",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-392",
            "positionY": "-420"
        },
        {
            "type": "step",
            "step": "Gauss Input 5",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-392",
            "positionY": "-210"
        },
        {
            "type": "step",
            "step": "Gauss Input 6",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-406",
            "positionY": "0"
        },
        {
            "type": "step",
            "step": "Goal-Change-CoS",
            "display style": "ICON_AND_TEXT",
            "width": "124",
            "height": "40",
            "positionX": "-784",
            "positionY": "-2324"
        },
        {
            "type": "step",
            "step": "Goal-Change-Detection",
            "display style": "ICON_AND_TEXT",
            "width": "124",
            "height": "40",
            "positionX": "-1050",
            "positionY": "-2268"
        },
        {
            "type": "step",
            "step": "Goal-Change-Gate",
            "display style": "ICON_AND_TEXT",
            "width": "124",
            "height": "40",
            "positionX": "-112",
            "positionY": "-2170"
        },
        {
            "type": "step",
            "step": "Goal-Change-Inhibition",
            "display style": "ICON_AND_TEXT",
            "width": "124",
            "height": "40",
            "positionX": "-1050",
            "positionY": "-2212"
        },
        {
            "type": "step",
            "step": "Goal-Change-Precondition",
            "display style": "ICON_AND_TEXT",
            "width": "124",
            "height": "40",
            "positionX": "-588",
            "positionY": "-2352"
        },
        {
            "type": "step",
            "step": "Goal-CoD",
            "display style": "ICON_AND_TEXT",
            "width": "124",
            "height": "40",
            "positionX": "-602",
            "positionY": "-1274"
        },
        {
            "type": "step",
            "step": "Goal-CoS",
            "display style": "ICON_AND_TEXT",
            "width": "124",
            "height": "40",
            "positionX": "-602",
            "positionY": "-1344"
        },
        {
            "type": "step",
            "step": "Goal-Habituation",
            "display style": "ICON_AND_TEXT",
            "width": "124",
            "height": "40",
            "positionX": "-2044",
            "positionY": "-1330"
        },
        {
            "type": "step",
            "step": "Goal-Habituation-Gate",
            "display style": "ICON_AND_TEXT",
            "width": "124",
            "height": "40",
            "positionX": "-2422",
            "positionY": "-1316"
        },
        {
            "type": "step",
            "step": "Goal-Intention",
            "display style": "ICON_AND_TEXT",
            "width": "124",
            "height": "40",
            "positionX": "-1484",
            "positionY": "-1456"
        },
        {
            "type": "step",
            "step": "Goal-Match",
            "display style": "ICON_AND_TEXT",
            "width": "124",
            "height": "40",
            "positionX": "-896",
            "positionY": "-1218"
        },
        {
            "type": "step",
            "step": "Goal-Perseveration",
            "display style": "ICON_AND_TEXT",
            "width": "124",
            "height": "40",
            "positionX": "-2044",
            "positionY": "-1386"
        },
        {
            "type": "step",
            "step": "Goal-Precondition",
            "display style": "ICON_AND_TEXT",
            "width": "124",
            "height": "40",
            "positionX": "-1232",
            "positionY": "-1344"
        },
        {
            "type": "step",
            "step": "Goal-Recall-CoDs",
            "display style": "ICON_AND_TEXT",
            "width": "124",
            "height": "40",
            "positionX": "154",
            "positionY": "-2268"
        },
        {
            "type": "step",
            "step": "Goal-Recall-CoS",
            "display style": "ICON_AND_TEXT",
            "width": "124",
            "height": "40",
            "positionX": "154",
            "positionY": "-2212"
        },
        {
            "type": "step",
            "step": "Goal-Recall-Intention",
            "display style": "ICON_AND_TEXT",
            "width": "124",
            "height": "40",
            "positionX": "-322",
            "positionY": "-2268"
        },
        {
            "type": "step",
            "step": "Goal-Selection",
            "display style": "ICON_AND_TEXT",
            "width": "124",
            "height": "40",
            "positionX": "-1736",
            "positionY": "-1358"
        },
        {
            "type": "step",
            "step": "Goal-Selection-Signal",
            "display style": "ICON_AND_TEXT",
            "width": "124",
            "height": "40",
            "positionX": "-2030",
            "positionY": "-1666"
        },
        {
            "type": "step",
            "step": "Goal-UnSelection-Signal",
            "display style": "ICON_AND_TEXT",
            "width": "124",
            "height": "40",
            "positionX": "-2030",
            "positionY": "-1722"
        },
        {
            "type": "step",
            "step": "High-Pitch-Task",
            "display style": "ICON_AND_TEXT",
            "width": "124",
            "height": "40",
            "positionX": "-2030",
            "positionY": "-1778"
        },
        {
            "type": "step",
            "step": "Intention In Action-Action1",
            "display style": "ICON_AND_TEXT",
            "width": "124",
            "height": "40",
            "positionX": "-434",
            "positionY": "-476"
        },
        {
            "type": "step",
            "step": "Intention In Action-Action2",
            "display style": "ICON_AND_TEXT",
            "width": "124",
            "height": "40",
            "positionX": "-434",
            "positionY": "-266"
        },
        {
            "type": "step",
            "step": "Intention In Action-Break",
            "display style": "ICON_AND_TEXT",
            "width": "124",
            "height": "40",
            "positionX": "-1190",
            "positionY": "-266"
        },
        {
            "type": "step",
            "step": "Intention In Action-Orient To Object",
            "display style": "ICON_AND_TEXT",
            "width": "124",
            "height": "40",
            "positionX": "-2534",
            "positionY": "-266"
        },
        {
            "type": "step",
            "step": "Intention-CoS",
            "display style": "ICON_AND_TEXT",
            "width": "124",
            "height": "40",
            "positionX": "336",
            "positionY": "-476"
        },
        {
            "type": "step",
            "step": "Intention-Compare-Strategies",
            "display style": "ICON_AND_TEXT",
            "width": "124",
            "height": "40",
            "positionX": "-2226",
            "positionY": "-1050"
        },
        {
            "type": "step",
            "step": "Intention-In-Action-Action3",
            "display style": "ICON_AND_TEXT",
            "width": "124",
            "height": "40",
            "positionX": "-434",
            "positionY": "-56"
        },
        {
            "type": "step",
            "step": "Intention-Perform-Action",
            "display style": "ICON_AND_TEXT",
            "width": "124",
            "height": "40",
            "positionX": "-952",
            "positionY": "-1050"
        },
        {
            "type": "step",
            "step": "Intention-Selection",
            "display style": "ICON_AND_TEXT",
            "width": "124",
            "height": "40",
            "positionX": "-378",
            "positionY": "-952"
        },
        {
            "type": "step",
            "step": "LED TCP Reader",
            "display style": "ICON_AND_TEXT",
            "width": "124",
            "height": "40",
            "positionX": "-1064",
            "positionY": "980"
        },
        {
            "type": "step",
            "step": "LED-Perception-Field",
            "display style": "ICON_AND_TEXT",
            "width": "124",
            "height": "40",
            "positionX": "-56",
            "positionY": "980"
        },
        {
            "type": "step",
            "step": "LED1",
            "display style": "ICON_AND_TEXT",
            "width": "124",
            "height": "40",
            "positionX": "-196",
            "positionY": "140"
        },
        {
            "type": "step",
            "step": "LED2",
            "display style": "ICON_AND_TEXT",
            "width": "124",
            "height": "40",
            "positionX": "-196",
            "positionY": "182"
        },
        {
            "type": "step",
            "step": "LED3",
            "display style": "ICON_AND_TEXT",
            "width": "124",
            "height": "40",
            "positionX": "-196",
            "positionY": "224"
        },
        {
            "type": "step",
            "step": "LED4",
            "display style": "ICON_AND_TEXT",
            "width": "124",
            "height": "40",
            "positionX": "-196",
            "positionY": "266"
        },
        {
            "type": "step",
            "step": "LED5",
            "display style": "ICON_AND_TEXT",
            "width": "124",
            "height": "40",
            "positionX": "-196",
            "positionY": "308"
        },
        {
            "type": "step",
            "step": "LED6",
            "display style": "ICON_AND_TEXT",
            "width": "124",
            "height": "40",
            "positionX": "-196",
            "positionY": "350"
        },
        {
            "type": "step",
            "step": "LED7",
            "display style": "ICON_AND_TEXT",
            "width": "124",
            "height": "40",
            "positionX": "-196",
            "positionY": "392"
        },
        {
            "type": "step",
            "step": "LED8",
            "display style": "ICON_AND_TEXT",
            "width": "124",
            "height": "40",
            "positionX": "-196",
            "positionY": "434"
        },
        {
            "type": "step",
            "step": "LED9",
            "display style": "ICON_AND_TEXT",
            "width": "124",
            "height": "40",
            "positionX": "-196",
            "positionY": "476"
        },
        {
            "type": "step",
            "step": "Learning-Gate",
            "display style": "ICON_AND_TEXT",
            "width": "124",
            "height": "40",
            "positionX": "-126",
            "positionY": "-2478"
        },
        {
            "type": "step",
            "step": "Learning-Reward-Node",
            "display style": "ICON_AND_TEXT",
            "width": "124",
            "height": "40",
            "positionX": "2422",
            "positionY": "-1064"
        },
        {
            "type": "step",
            "step": "Low-Pitch-Task",
            "display style": "ICON_AND_TEXT",
            "width": "124",
            "height": "40",
            "positionX": "-2030",
            "positionY": "-1890"
        },
        {
            "type": "step",
            "step": "Matrix Type Converter",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-770",
            "positionY": "924"
        },
        {
            "type": "step",
            "step": "Medium-Pitch-Task",
            "display style": "ICON_AND_TEXT",
            "width": "124",
            "height": "40",
            "positionX": "-2030",
            "positionY": "-1834"
        },
        {
            "type": "step",
            "step": "Microphone TCP Reader",
            "display style": "ICON_AND_TEXT",
            "width": "124",
            "height": "40",
            "positionX": "-1064",
            "positionY": "868"
        },
        {
            "type": "step",
            "step": "Motor-Attractor",
            "display style": "ICON_AND_TEXT",
            "width": "124",
            "height": "40",
            "positionX": "-2338",
            "positionY": "-112"
        },
        {
            "type": "step",
            "step": "Object-Gate",
            "display style": "ICON_AND_TEXT",
            "width": "124",
            "height": "40",
            "positionX": "-112",
            "positionY": "-1680"
        },
        {
            "type": "step",
            "step": "Object-Recall-Intention",
            "display style": "ICON_AND_TEXT",
            "width": "124",
            "height": "40",
            "positionX": "-322",
            "positionY": "-1778"
        },
        {
            "type": "step",
            "step": "ObjectColor Concepts",
            "display style": "ICON_AND_TEXT",
            "width": "124",
            "height": "40",
            "positionX": "1624",
            "positionY": "854"
        },
        {
            "type": "step",
            "step": "Precondition-Break In Front Of Object",
            "display style": "ICON_AND_TEXT",
            "width": "124",
            "height": "40",
            "positionX": "-812",
            "positionY": "-294"
        },
        {
            "type": "step",
            "step": "Precondition-Color In Attention",
            "display style": "ICON_AND_TEXT",
            "width": "124",
            "height": "40",
            "positionX": "-2730",
            "positionY": "-294"
        },
        {
            "type": "step",
            "step": "Precondition-Is In Front Of",
            "display style": "ICON_AND_TEXT",
            "width": "124",
            "height": "40",
            "positionX": "-1386",
            "positionY": "-294"
        },
        {
            "type": "step",
            "step": "Precondition-Oriented To Object",
            "display style": "ICON_AND_TEXT",
            "width": "124",
            "height": "40",
            "positionX": "-1862",
            "positionY": "-294"
        },
        {
            "type": "step",
            "step": "Precondition-loaded-Strategy",
            "display style": "ICON_AND_TEXT",
            "width": "124",
            "height": "40",
            "positionX": "-1148",
            "positionY": "-1078"
        },
        {
            "type": "step",
            "step": "Projection",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-1694",
            "positionY": "-1848"
        },
        {
            "type": "step",
            "step": "Projection 10",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-1638",
            "positionY": "-168"
        },
        {
            "type": "step",
            "step": "Projection 11",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "1428",
            "positionY": "-2968"
        },
        {
            "type": "step",
            "step": "Projection 12",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "1428",
            "positionY": "-2926"
        },
        {
            "type": "step",
            "step": "Projection 13",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "1428",
            "positionY": "-2884"
        },
        {
            "type": "step",
            "step": "Projection 14",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-1400",
            "positionY": "-1036"
        },
        {
            "type": "step",
            "step": "Projection 15",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "42",
            "positionY": "-952"
        },
        {
            "type": "step",
            "step": "Projection 16",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-546",
            "positionY": "-1778"
        },
        {
            "type": "step",
            "step": "Projection 17",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-896",
            "positionY": "-2268"
        },
        {
            "type": "step",
            "step": "Projection 18",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-2674",
            "positionY": "-1036"
        },
        {
            "type": "step",
            "step": "Projection 2",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "126",
            "positionY": "924"
        },
        {
            "type": "step",
            "step": "Projection 20",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "1904",
            "positionY": "854"
        },
        {
            "type": "step",
            "step": "Projection 21",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-3430",
            "positionY": "-126"
        },
        {
            "type": "step",
            "step": "Projection 22",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-210",
            "positionY": "-952"
        },
        {
            "type": "step",
            "step": "Projection 23",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-728",
            "positionY": "-1218"
        },
        {
            "type": "step",
            "step": "Projection 25",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-140",
            "positionY": "-420"
        },
        {
            "type": "step",
            "step": "Projection 26",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "546",
            "positionY": "-1260"
        },
        {
            "type": "step",
            "step": "Projection 27",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "546",
            "positionY": "-1218"
        },
        {
            "type": "step",
            "step": "Projection 28",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-140",
            "positionY": "-210"
        },
        {
            "type": "step",
            "step": "Projection 29",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "2114",
            "positionY": "1106"
        },
        {
            "type": "step",
            "step": "Projection 3",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-210",
            "positionY": "924"
        },
        {
            "type": "step",
            "step": "Projection 30",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-154",
            "positionY": "0"
        },
        {
            "type": "step",
            "step": "Projection 4",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-560",
            "positionY": "-2002"
        },
        {
            "type": "step",
            "step": "Projection 6",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-2982",
            "positionY": "-252"
        },
        {
            "type": "step",
            "step": "Projection 7",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-2744",
            "positionY": "-112"
        },
        {
            "type": "step",
            "step": "Projection 8",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-2534",
            "positionY": "-154"
        },
        {
            "type": "step",
            "step": "Projection 9",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-2114",
            "positionY": "-252"
        },
        {
            "type": "step",
            "step": "Rate Matrix To Space Code",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-574",
            "positionY": "924"
        },
        {
            "type": "step",
            "step": "Recall-Goal-Match",
            "display style": "ICON_AND_TEXT",
            "width": "124",
            "height": "40",
            "positionX": "-2814",
            "positionY": "-1022"
        },
        {
            "type": "step",
            "step": "Recall-Goal-Match-CoS",
            "display style": "ICON_AND_TEXT",
            "width": "124",
            "height": "40",
            "positionX": "-2618",
            "positionY": "-1050"
        },
        {
            "type": "step",
            "step": "Recall-Precondition",
            "display style": "ICON_AND_TEXT",
            "width": "124",
            "height": "40",
            "positionX": "-2422",
            "positionY": "-1078"
        },
        {
            "type": "step",
            "step": "Recruitment Boost",
            "display style": "ICON_AND_TEXT",
            "width": "124",
            "height": "40",
            "positionX": "2044",
            "positionY": "-1064"
        },
        {
            "type": "step",
            "step": "Reset-Signal",
            "display style": "ICON_AND_TEXT",
            "width": "124",
            "height": "40",
            "positionX": "-2030",
            "positionY": "-2002"
        },
        {
            "type": "step",
            "step": "Reward Hebb Trace",
            "display style": "ICON_AND_TEXT",
            "width": "124",
            "height": "40",
            "positionX": "2618",
            "positionY": "-2716"
        },
        {
            "type": "step",
            "step": "Reward Hebb Trace 10",
            "display style": "ICON_AND_TEXT",
            "width": "124",
            "height": "40",
            "positionX": "1568",
            "positionY": "-1918"
        },
        {
            "type": "step",
            "step": "Reward Hebb Trace 11",
            "display style": "ICON_AND_TEXT",
            "width": "124",
            "height": "40",
            "positionX": "1568",
            "positionY": "-2240"
        },
        {
            "type": "step",
            "step": "Reward Hebb Trace 12",
            "display style": "ICON_AND_TEXT",
            "width": "124",
            "height": "40",
            "positionX": "1568",
            "positionY": "-2170"
        },
        {
            "type": "step",
            "step": "Reward Hebb Trace 13",
            "display style": "ICON_AND_TEXT",
            "width": "124",
            "height": "40",
            "positionX": "1568",
            "positionY": "-2310"
        },
        {
            "type": "step",
            "step": "Reward Hebb Trace 14",
            "display style": "ICON_AND_TEXT",
            "width": "124",
            "height": "40",
            "positionX": "1568",
            "positionY": "-2422"
        },
        {
            "type": "step",
            "step": "Reward Hebb Trace 15",
            "display style": "ICON_AND_TEXT",
            "width": "124",
            "height": "40",
            "positionX": "1568",
            "positionY": "-2562"
        },
        {
            "type": "step",
            "step": "Reward Hebb Trace 16",
            "display style": "ICON_AND_TEXT",
            "width": "124",
            "height": "40",
            "positionX": "1568",
            "positionY": "-2814"
        },
        {
            "type": "step",
            "step": "Reward Hebb Trace 17",
            "display style": "ICON_AND_TEXT",
            "width": "124",
            "height": "40",
            "positionX": "1568",
            "positionY": "-2674"
        },
        {
            "type": "step",
            "step": "Reward Hebb Trace 18",
            "display style": "ICON_AND_TEXT",
            "width": "124",
            "height": "40",
            "positionX": "1568",
            "positionY": "-2744"
        },
        {
            "type": "step",
            "step": "Reward Hebb Trace 19",
            "display style": "ICON_AND_TEXT",
            "width": "124",
            "height": "40",
            "positionX": "1568",
            "positionY": "-1554"
        },
        {
            "type": "step",
            "step": "Reward Hebb Trace 2",
            "display style": "ICON_AND_TEXT",
            "width": "124",
            "height": "40",
            "positionX": "1568",
            "positionY": "-1484"
        },
        {
            "type": "step",
            "step": "Reward Hebb Trace 20",
            "display style": "ICON_AND_TEXT",
            "width": "124",
            "height": "40",
            "positionX": "2618",
            "positionY": "-2464"
        },
        {
            "type": "step",
            "step": "Reward Hebb Trace 21",
            "display style": "ICON_AND_TEXT",
            "width": "124",
            "height": "40",
            "positionX": "2618",
            "positionY": "-2212"
        },
        {
            "type": "step",
            "step": "Reward Hebb Trace 22",
            "display style": "ICON_AND_TEXT",
            "width": "124",
            "height": "40",
            "positionX": "2618",
            "positionY": "-1960"
        },
        {
            "type": "step",
            "step": "Reward Hebb Trace 23",
            "display style": "ICON_AND_TEXT",
            "width": "124",
            "height": "40",
            "positionX": "2618",
            "positionY": "-1708"
        },
        {
            "type": "step",
            "step": "Reward Hebb Trace 24",
            "display style": "ICON_AND_TEXT",
            "width": "124",
            "height": "40",
            "positionX": "2618",
            "positionY": "-1456"
        },
        {
            "type": "step",
            "step": "Reward Hebb Trace 25",
            "display style": "ICON_AND_TEXT",
            "width": "124",
            "height": "40",
            "positionX": "1050",
            "positionY": "532"
        },
        {
            "type": "step",
            "step": "Reward Hebb Trace 26",
            "display style": "ICON_AND_TEXT",
            "width": "124",
            "height": "40",
            "positionX": "1050",
            "positionY": "588"
        },
        {
            "type": "step",
            "step": "Reward Hebb Trace 27",
            "display style": "ICON_AND_TEXT",
            "width": "124",
            "height": "40",
            "positionX": "1050",
            "positionY": "728"
        },
        {
            "type": "step",
            "step": "Reward Hebb Trace 28",
            "display style": "ICON_AND_TEXT",
            "width": "124",
            "height": "40",
            "positionX": "1050",
            "positionY": "784"
        },
        {
            "type": "step",
            "step": "Reward Hebb Trace 29",
            "display style": "ICON_AND_TEXT",
            "width": "124",
            "height": "40",
            "positionX": "1050",
            "positionY": "840"
        },
        {
            "type": "step",
            "step": "Reward Hebb Trace 3",
            "display style": "ICON_AND_TEXT",
            "width": "124",
            "height": "40",
            "positionX": "1568",
            "positionY": "-1414"
        },
        {
            "type": "step",
            "step": "Reward Hebb Trace 30",
            "display style": "ICON_AND_TEXT",
            "width": "124",
            "height": "40",
            "positionX": "1050",
            "positionY": "896"
        },
        {
            "type": "step",
            "step": "Reward Hebb Trace 31",
            "display style": "ICON_AND_TEXT",
            "width": "124",
            "height": "40",
            "positionX": "1050",
            "positionY": "952"
        },
        {
            "type": "step",
            "step": "Reward Hebb Trace 38",
            "display style": "ICON_AND_TEXT",
            "width": "124",
            "height": "40",
            "positionX": "1050",
            "positionY": "1008"
        },
        {
            "type": "step",
            "step": "Reward Hebb Trace 39",
            "display style": "ICON_AND_TEXT",
            "width": "124",
            "height": "40",
            "positionX": "1050",
            "positionY": "644"
        },
        {
            "type": "step",
            "step": "Reward Hebb Trace 4",
            "display style": "ICON_AND_TEXT",
            "width": "124",
            "height": "40",
            "positionX": "1568",
            "positionY": "-1806"
        },
        {
            "type": "step",
            "step": "Reward Hebb Trace 40",
            "display style": "ICON_AND_TEXT",
            "width": "124",
            "height": "40",
            "positionX": "1050",
            "positionY": "1092"
        },
        {
            "type": "step",
            "step": "Reward Hebb Trace 41",
            "display style": "ICON_AND_TEXT",
            "width": "124",
            "height": "40",
            "positionX": "1050",
            "positionY": "1148"
        },
        {
            "type": "step",
            "step": "Reward Hebb Trace 42",
            "display style": "ICON_AND_TEXT",
            "width": "124",
            "height": "40",
            "positionX": "1050",
            "positionY": "1204"
        },
        {
            "type": "step",
            "step": "Reward Hebb Trace 5",
            "display style": "ICON_AND_TEXT",
            "width": "124",
            "height": "40",
            "positionX": "1568",
            "positionY": "-1736"
        },
        {
            "type": "step",
            "step": "Reward Hebb Trace 6",
            "display style": "ICON_AND_TEXT",
            "width": "124",
            "height": "40",
            "positionX": "1568",
            "positionY": "-1666"
        },
        {
            "type": "step",
            "step": "Reward Hebb Trace 7",
            "display style": "ICON_AND_TEXT",
            "width": "124",
            "height": "40",
            "positionX": "1568",
            "positionY": "-2058"
        },
        {
            "type": "step",
            "step": "Reward Hebb Trace 8",
            "display style": "ICON_AND_TEXT",
            "width": "124",
            "height": "40",
            "positionX": "1568",
            "positionY": "-1988"
        },
        {
            "type": "step",
            "step": "Reward Hebb Trace 9",
            "display style": "ICON_AND_TEXT",
            "width": "124",
            "height": "40",
            "positionX": "1568",
            "positionY": "-2492"
        },
        {
            "type": "step",
            "step": "Scalars To Vector",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "14",
            "positionY": "308"
        },
        {
            "type": "step",
            "step": "Scalars To Vector 2",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "1428",
            "positionY": "854"
        },
        {
            "type": "step",
            "step": "Scalars To Vector 3",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "1428",
            "positionY": "1162"
        },
        {
            "type": "step",
            "step": "Scalars To Vector 4",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "1428",
            "positionY": "602"
        },
        {
            "type": "step",
            "step": "Scalars To Vector 5",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-3010",
            "positionY": "-126"
        },
        {
            "type": "step",
            "step": "Scalars To Vector 6",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-1820",
            "positionY": "-1890"
        },
        {
            "type": "step",
            "step": "Sound Concepts",
            "display style": "ICON_AND_TEXT",
            "width": "124",
            "height": "40",
            "positionX": "1624",
            "positionY": "602"
        },
        {
            "type": "step",
            "step": "Sound Role Field",
            "display style": "ICON_AND_TEXT",
            "width": "124",
            "height": "40",
            "positionX": "1288",
            "positionY": "-2296"
        },
        {
            "type": "step",
            "step": "Sound-Attention-Field",
            "display style": "ICON_AND_TEXT",
            "width": "124",
            "height": "40",
            "positionX": "504",
            "positionY": "868"
        },
        {
            "type": "step",
            "step": "Sound-Change-Detection",
            "display style": "ICON_AND_TEXT",
            "width": "124",
            "height": "40",
            "positionX": "-714",
            "positionY": "-2002"
        },
        {
            "type": "step",
            "step": "Sound-Change-Gate",
            "display style": "ICON_AND_TEXT",
            "width": "124",
            "height": "40",
            "positionX": "-112",
            "positionY": "-1904"
        },
        {
            "type": "step",
            "step": "Sound-Change-Inhibition",
            "display style": "ICON_AND_TEXT",
            "width": "124",
            "height": "40",
            "positionX": "-714",
            "positionY": "-1946"
        },
        {
            "type": "step",
            "step": "Sound-Perception",
            "display style": "ICON_AND_TEXT",
            "width": "124",
            "height": "40",
            "positionX": "-56",
            "positionY": "868"
        },
        {
            "type": "step",
            "step": "Sound-Recall",
            "display style": "ICON_AND_TEXT",
            "width": "124",
            "height": "40",
            "positionX": "672",
            "positionY": "-1316"
        },
        {
            "type": "step",
            "step": "Sound-Recall-CoD",
            "display style": "ICON_AND_TEXT",
            "width": "124",
            "height": "40",
            "positionX": "154",
            "positionY": "-2002"
        },
        {
            "type": "step",
            "step": "Sound-Recall-CoS",
            "display style": "ICON_AND_TEXT",
            "width": "124",
            "height": "40",
            "positionX": "154",
            "positionY": "-1946"
        },
        {
            "type": "step",
            "step": "Sound-Recall-Intention",
            "display style": "ICON_AND_TEXT",
            "width": "124",
            "height": "40",
            "positionX": "-322",
            "positionY": "-2002"
        },
        {
            "type": "step",
            "step": "Space To Rate Code",
            "display style": "ICON_AND_TEXT",
            "width": "124",
            "height": "40",
            "positionX": "-2338",
            "positionY": "-56"
        },
        {
            "type": "step",
            "step": "Space-Action-Field",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-2310",
            "positionY": "-224"
        },
        {
            "type": "step",
            "step": "Space-Attention-Field",
            "display style": "ICON_AND_TEXT",
            "width": "124",
            "height": "40",
            "positionX": "-2478",
            "positionY": "-168"
        },
        {
            "type": "step",
            "step": "Space-matching-Field",
            "display style": "ICON_AND_TEXT",
            "width": "124",
            "height": "40",
            "positionX": "-2254",
            "positionY": "-238"
        },
        {
            "type": "step",
            "step": "Static Gain",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-490",
            "positionY": "924"
        },
        {
            "type": "step",
            "step": "Static Gain 10",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-2590",
            "positionY": "-280"
        },
        {
            "type": "step",
            "step": "Static Gain 100",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-1400",
            "positionY": "-994"
        },
        {
            "type": "step",
            "step": "Static Gain 101",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-1862",
            "positionY": "-2002"
        },
        {
            "type": "step",
            "step": "Static Gain 102",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-784",
            "positionY": "-1050"
        },
        {
            "type": "step",
            "step": "Static Gain 103",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "518",
            "positionY": "-476"
        },
        {
            "type": "step",
            "step": "Static Gain 104",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-448",
            "positionY": "-2520"
        },
        {
            "type": "step",
            "step": "Static Gain 105",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "42",
            "positionY": "-2478"
        },
        {
            "type": "step",
            "step": "Static Gain 106",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-1918",
            "positionY": "-1036"
        },
        {
            "type": "step",
            "step": "Static Gain 107",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-1288",
            "positionY": "-1330"
        },
        {
            "type": "step",
            "step": "Static Gain 108",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-1694",
            "positionY": "-896"
        },
        {
            "type": "step",
            "step": "Static Gain 109",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-1694",
            "positionY": "-952"
        },
        {
            "type": "step",
            "step": "Static Gain 11",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-1918",
            "positionY": "-280"
        },
        {
            "type": "step",
            "step": "Static Gain 110",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-1876",
            "positionY": "-1386"
        },
        {
            "type": "step",
            "step": "Static Gain 111",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-1876",
            "positionY": "-1330"
        },
        {
            "type": "step",
            "step": "Static Gain 112",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-1862",
            "positionY": "-1666"
        },
        {
            "type": "step",
            "step": "Static Gain 113",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "2114",
            "positionY": "924"
        },
        {
            "type": "step",
            "step": "Static Gain 114",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "2114",
            "positionY": "994"
        },
        {
            "type": "step",
            "step": "Static Gain 115",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "1834",
            "positionY": "994"
        },
        {
            "type": "step",
            "step": "Static Gain 116",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-1316",
            "positionY": "-1456"
        },
        {
            "type": "step",
            "step": "Static Gain 117",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-1862",
            "positionY": "-1722"
        },
        {
            "type": "step",
            "step": "Static Gain 118",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-2114",
            "positionY": "-1722"
        },
        {
            "type": "step",
            "step": "Static Gain 12",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-1722",
            "positionY": "-280"
        },
        {
            "type": "step",
            "step": "Static Gain 13",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-1442",
            "positionY": "-280"
        },
        {
            "type": "step",
            "step": "Static Gain 14",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-1246",
            "positionY": "-280"
        },
        {
            "type": "step",
            "step": "Static Gain 15",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-2282",
            "positionY": "-1064"
        },
        {
            "type": "step",
            "step": "Static Gain 16",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-868",
            "positionY": "-280"
        },
        {
            "type": "step",
            "step": "Static Gain 17",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-672",
            "positionY": "-280"
        },
        {
            "type": "step",
            "step": "Static Gain 18",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "1834",
            "positionY": "1232"
        },
        {
            "type": "step",
            "step": "Static Gain 19",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-560",
            "positionY": "-1946"
        },
        {
            "type": "step",
            "step": "Static Gain 2",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "2114",
            "positionY": "1232"
        },
        {
            "type": "step",
            "step": "Static Gain 20",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-896",
            "positionY": "-2212"
        },
        {
            "type": "step",
            "step": "Static Gain 21",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-560",
            "positionY": "-1722"
        },
        {
            "type": "step",
            "step": "Static Gain 22",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-448",
            "positionY": "-2268"
        },
        {
            "type": "step",
            "step": "Static Gain 23",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-448",
            "positionY": "-2002"
        },
        {
            "type": "step",
            "step": "Static Gain 24",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "2170",
            "positionY": "-1400"
        },
        {
            "type": "step",
            "step": "Static Gain 25",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "2478",
            "positionY": "-1442"
        },
        {
            "type": "step",
            "step": "Static Gain 26",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "2170",
            "positionY": "-1904"
        },
        {
            "type": "step",
            "step": "Static Gain 27",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "2478",
            "positionY": "-1946"
        },
        {
            "type": "step",
            "step": "Static Gain 28",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "2170",
            "positionY": "-2156"
        },
        {
            "type": "step",
            "step": "Static Gain 29",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "2478",
            "positionY": "-2198"
        },
        {
            "type": "step",
            "step": "Static Gain 3",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "2170",
            "positionY": "-1652"
        },
        {
            "type": "step",
            "step": "Static Gain 30",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "2170",
            "positionY": "-2660"
        },
        {
            "type": "step",
            "step": "Static Gain 31",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "2478",
            "positionY": "-2450"
        },
        {
            "type": "step",
            "step": "Static Gain 32",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "2478",
            "positionY": "-2702"
        },
        {
            "type": "step",
            "step": "Static Gain 33",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "2170",
            "positionY": "-2408"
        },
        {
            "type": "step",
            "step": "Static Gain 34",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "1904",
            "positionY": "-2926"
        },
        {
            "type": "step",
            "step": "Static Gain 35",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "1498",
            "positionY": "-2660"
        },
        {
            "type": "step",
            "step": "Static Gain 36",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "1498",
            "positionY": "-2730"
        },
        {
            "type": "step",
            "step": "Static Gain 37",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "1498",
            "positionY": "-2800"
        },
        {
            "type": "step",
            "step": "Static Gain 38",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "1498",
            "positionY": "-2548"
        },
        {
            "type": "step",
            "step": "Static Gain 39",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "1498",
            "positionY": "-2478"
        },
        {
            "type": "step",
            "step": "Static Gain 4",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "2478",
            "positionY": "-1694"
        },
        {
            "type": "step",
            "step": "Static Gain 40",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "1498",
            "positionY": "-2408"
        },
        {
            "type": "step",
            "step": "Static Gain 41",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "1498",
            "positionY": "-2296"
        },
        {
            "type": "step",
            "step": "Static Gain 42",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "1498",
            "positionY": "-2226"
        },
        {
            "type": "step",
            "step": "Static Gain 43",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "1498",
            "positionY": "-2156"
        },
        {
            "type": "step",
            "step": "Static Gain 44",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "1498",
            "positionY": "-2044"
        },
        {
            "type": "step",
            "step": "Static Gain 45",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "1498",
            "positionY": "-1974"
        },
        {
            "type": "step",
            "step": "Static Gain 46",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "1498",
            "positionY": "-1904"
        },
        {
            "type": "step",
            "step": "Static Gain 47",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "1498",
            "positionY": "-1792"
        },
        {
            "type": "step",
            "step": "Static Gain 48",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "1498",
            "positionY": "-1722"
        },
        {
            "type": "step",
            "step": "Static Gain 49",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "1498",
            "positionY": "-1652"
        },
        {
            "type": "step",
            "step": "Static Gain 5",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "420",
            "positionY": "868"
        },
        {
            "type": "step",
            "step": "Static Gain 50",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "1498",
            "positionY": "-1540"
        },
        {
            "type": "step",
            "step": "Static Gain 51",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "1498",
            "positionY": "-1470"
        },
        {
            "type": "step",
            "step": "Static Gain 52",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "1498",
            "positionY": "-1400"
        },
        {
            "type": "step",
            "step": "Static Gain 53",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "2114",
            "positionY": "-2716"
        },
        {
            "type": "step",
            "step": "Static Gain 54",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "2114",
            "positionY": "-2464"
        },
        {
            "type": "step",
            "step": "Static Gain 55",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "2114",
            "positionY": "-2212"
        },
        {
            "type": "step",
            "step": "Static Gain 56",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "2114",
            "positionY": "-1960"
        },
        {
            "type": "step",
            "step": "Static Gain 57",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "2114",
            "positionY": "-1708"
        },
        {
            "type": "step",
            "step": "Static Gain 58",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "2114",
            "positionY": "-1456"
        },
        {
            "type": "step",
            "step": "Static Gain 59",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "1890",
            "positionY": "-1064"
        },
        {
            "type": "step",
            "step": "Static Gain 6",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-2926",
            "positionY": "-126"
        },
        {
            "type": "step",
            "step": "Static Gain 60",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "2198",
            "positionY": "-1064"
        },
        {
            "type": "step",
            "step": "Static Gain 61",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "2772",
            "positionY": "-2716"
        },
        {
            "type": "step",
            "step": "Static Gain 62",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "2772",
            "positionY": "-2464"
        },
        {
            "type": "step",
            "step": "Static Gain 63",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "2772",
            "positionY": "-2212"
        },
        {
            "type": "step",
            "step": "Static Gain 64",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "2772",
            "positionY": "-1960"
        },
        {
            "type": "step",
            "step": "Static Gain 65",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "2772",
            "positionY": "-1708"
        },
        {
            "type": "step",
            "step": "Static Gain 66",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "2772",
            "positionY": "-1456"
        },
        {
            "type": "step",
            "step": "Static Gain 67",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-140",
            "positionY": "924"
        },
        {
            "type": "step",
            "step": "Static Gain 68",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "420",
            "positionY": "924"
        },
        {
            "type": "step",
            "step": "Static Gain 69",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-448",
            "positionY": "-1778"
        },
        {
            "type": "step",
            "step": "Static Gain 7",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "504",
            "positionY": "-588"
        },
        {
            "type": "step",
            "step": "Static Gain 70",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-1694",
            "positionY": "-1890"
        },
        {
            "type": "step",
            "step": "Static Gain 71",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "336",
            "positionY": "-2268"
        },
        {
            "type": "step",
            "step": "Static Gain 72",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-112",
            "positionY": "-1736"
        },
        {
            "type": "step",
            "step": "Static Gain 73",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-112",
            "positionY": "-2226"
        },
        {
            "type": "step",
            "step": "Static Gain 74",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "56",
            "positionY": "-2170"
        },
        {
            "type": "step",
            "step": "Static Gain 75",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "2114",
            "positionY": "1162"
        },
        {
            "type": "step",
            "step": "Static Gain 76",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "1834",
            "positionY": "602"
        },
        {
            "type": "step",
            "step": "Static Gain 77",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "56",
            "positionY": "-1680"
        },
        {
            "type": "step",
            "step": "Static Gain 78",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "70",
            "positionY": "-1778"
        },
        {
            "type": "step",
            "step": "Static Gain 79",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-112",
            "positionY": "-2114"
        },
        {
            "type": "step",
            "step": "Static Gain 8",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-2478",
            "positionY": "-1064"
        },
        {
            "type": "step",
            "step": "Static Gain 80",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-112",
            "positionY": "-1848"
        },
        {
            "type": "step",
            "step": "Static Gain 81",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-1526",
            "positionY": "-1316"
        },
        {
            "type": "step",
            "step": "Static Gain 82",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "504",
            "positionY": "-644"
        },
        {
            "type": "step",
            "step": "Static Gain 83",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "70",
            "positionY": "-2268"
        },
        {
            "type": "step",
            "step": "Static Gain 84",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "1988",
            "positionY": "854"
        },
        {
            "type": "step",
            "step": "Static Gain 85",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-112",
            "positionY": "-1960"
        },
        {
            "type": "step",
            "step": "Static Gain 86",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-112",
            "positionY": "-1624"
        },
        {
            "type": "step",
            "step": "Static Gain 87",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "56",
            "positionY": "-1904"
        },
        {
            "type": "step",
            "step": "Static Gain 88",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-1078",
            "positionY": "-1344"
        },
        {
            "type": "step",
            "step": "Static Gain 89",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-448",
            "positionY": "-2338"
        },
        {
            "type": "step",
            "step": "Static Gain 9",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-2786",
            "positionY": "-280"
        },
        {
            "type": "step",
            "step": "Static Gain 90",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-686",
            "positionY": "-1274"
        },
        {
            "type": "step",
            "step": "Static Gain 91",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "840",
            "positionY": "-1260"
        },
        {
            "type": "step",
            "step": "Static Gain 92",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "840",
            "positionY": "-1316"
        },
        {
            "type": "step",
            "step": "Static Gain 93",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "70",
            "positionY": "-2002"
        },
        {
            "type": "step",
            "step": "Static Gain 94",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "1834",
            "positionY": "560"
        },
        {
            "type": "step",
            "step": "Static Gain 95",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-644",
            "positionY": "-2338"
        },
        {
            "type": "step",
            "step": "Static Gain 96",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-1204",
            "positionY": "-1064"
        },
        {
            "type": "step",
            "step": "Static Gain 97",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-560",
            "positionY": "-896"
        },
        {
            "type": "step",
            "step": "Static Gain 98",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-560",
            "positionY": "-952"
        },
        {
            "type": "step",
            "step": "Static Gain 99",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-1008",
            "positionY": "-1064"
        },
        {
            "type": "step",
            "step": "Strategie-Gate",
            "display style": "ICON_AND_TEXT",
            "width": "124",
            "height": "40",
            "positionX": "-2086",
            "positionY": "-1036"
        },
        {
            "type": "step",
            "step": "Strategy-Habituation",
            "display style": "ICON_AND_TEXT",
            "width": "124",
            "height": "40",
            "positionX": "-1862",
            "positionY": "-896"
        },
        {
            "type": "step",
            "step": "Strategy-Perseveration",
            "display style": "ICON_AND_TEXT",
            "width": "124",
            "height": "40",
            "positionX": "-1862",
            "positionY": "-952"
        },
        {
            "type": "step",
            "step": "Strategy-Selection",
            "display style": "ICON_AND_TEXT",
            "width": "124",
            "height": "40",
            "positionX": "-1568",
            "positionY": "-1036"
        },
        {
            "type": "step",
            "step": "Supervisor-Task-Input",
            "display style": "ICON_AND_TEXT",
            "width": "124",
            "height": "40",
            "positionX": "-2436",
            "positionY": "-1876"
        },
        {
            "type": "step",
            "step": "TCP-Break-Writer",
            "display style": "ICON_AND_TEXT",
            "width": "124",
            "height": "40",
            "positionX": "-980",
            "positionY": "-112"
        },
        {
            "type": "step",
            "step": "TCP-Goal-Writer",
            "display style": "ICON_AND_TEXT",
            "width": "124",
            "height": "40",
            "positionX": "-1526",
            "positionY": "-1876"
        },
        {
            "type": "step",
            "step": "TCP-LED-Writer",
            "display style": "ICON_AND_TEXT",
            "width": "124",
            "height": "40",
            "positionX": "84",
            "positionY": "308"
        },
        {
            "type": "step",
            "step": "TCP-Motor-Writer",
            "display style": "ICON_AND_TEXT",
            "width": "124",
            "height": "40",
            "positionX": "-2198",
            "positionY": "-42"
        },
        {
            "type": "step",
            "step": "TCP-Task-reader",
            "display style": "ICON_AND_TEXT",
            "width": "124",
            "height": "40",
            "positionX": "-2604",
            "positionY": "-1876"
        },
        {
            "type": "step",
            "step": "Transfer Function",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "336",
            "positionY": "924"
        },
        {
            "type": "step",
            "step": "Transfer Function 10",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "1722",
            "positionY": "-2534"
        },
        {
            "type": "step",
            "step": "Transfer Function 11",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "1722",
            "positionY": "-2464"
        },
        {
            "type": "step",
            "step": "Transfer Function 12",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "1722",
            "positionY": "-2394"
        },
        {
            "type": "step",
            "step": "Transfer Function 14",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "1722",
            "positionY": "-2282"
        },
        {
            "type": "step",
            "step": "Transfer Function 15",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "1722",
            "positionY": "-2212"
        },
        {
            "type": "step",
            "step": "Transfer Function 16",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "1722",
            "positionY": "-2142"
        },
        {
            "type": "step",
            "step": "Transfer Function 18",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "1722",
            "positionY": "-2030"
        },
        {
            "type": "step",
            "step": "Transfer Function 19",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "1722",
            "positionY": "-1960"
        },
        {
            "type": "step",
            "step": "Transfer Function 2",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-294",
            "positionY": "924"
        },
        {
            "type": "step",
            "step": "Transfer Function 20",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "1722",
            "positionY": "-1890"
        },
        {
            "type": "step",
            "step": "Transfer Function 22",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "1722",
            "positionY": "-1778"
        },
        {
            "type": "step",
            "step": "Transfer Function 23",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "1722",
            "positionY": "-1708"
        },
        {
            "type": "step",
            "step": "Transfer Function 24",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "1722",
            "positionY": "-1638"
        },
        {
            "type": "step",
            "step": "Transfer Function 26",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "1722",
            "positionY": "-1526"
        },
        {
            "type": "step",
            "step": "Transfer Function 27",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "1722",
            "positionY": "-1456"
        },
        {
            "type": "step",
            "step": "Transfer Function 28",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "1722",
            "positionY": "-1386"
        },
        {
            "type": "step",
            "step": "Transfer Function 7",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "1722",
            "positionY": "-2786"
        },
        {
            "type": "step",
            "step": "Transfer Function 8",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "1722",
            "positionY": "-2716"
        },
        {
            "type": "step",
            "step": "Transfer Function 9",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "1722",
            "positionY": "-2646"
        },
        {
            "type": "step",
            "step": "Vector To Scalars",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-3136",
            "positionY": "-126"
        },
        {
            "type": "step",
            "step": "Vector To Scalars 2",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-2268",
            "positionY": "-1876"
        },
        {
            "type": "step",
            "step": "Vector To Scalars 3",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-560",
            "positionY": "-280"
        },
        {
            "type": "step",
            "step": "action 2",
            "display style": "ICON_AND_TEXT",
            "width": "124",
            "height": "40",
            "positionX": "1218",
            "positionY": "1148"
        },
        {
            "type": "step",
            "step": "action 3",
            "display style": "ICON_AND_TEXT",
            "width": "124",
            "height": "40",
            "positionX": "1218",
            "positionY": "1204"
        },
        {
            "type": "step",
            "step": "action1",
            "display style": "ICON_AND_TEXT",
            "width": "124",
            "height": "40",
            "positionX": "1218",
            "positionY": "1092"
        },
        {
            "type": "step",
            "step": "blue",
            "display style": "ICON_AND_TEXT",
            "width": "124",
            "height": "40",
            "positionX": "1218",
            "positionY": "952"
        },
        {
            "type": "trigger",
            "trigger": "default thread",
            "width": "30",
            "height": "30",
            "positionX": "0",
            "positionY": "0"
        },
        {
            "type": "step",
            "step": "dx",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "1610",
            "positionY": "-3052"
        },
        {
            "type": "step",
            "step": "exploration-Task",
            "display style": "ICON_AND_TEXT",
            "width": "124",
            "height": "40",
            "positionX": "-2030",
            "positionY": "-1946"
        },
        {
            "type": "step",
            "step": "goal-reaching-task",
            "display style": "ICON_AND_TEXT",
            "width": "124",
            "height": "40",
            "positionX": "-2030",
            "positionY": "-1610"
        },
        {
            "type": "step",
            "step": "green",
            "display style": "ICON_AND_TEXT",
            "width": "124",
            "height": "40",
            "positionX": "1218",
            "positionY": "896"
        },
        {
            "type": "step",
            "step": "high pitch",
            "display style": "ICON_AND_TEXT",
            "width": "124",
            "height": "40",
            "positionX": "1218",
            "positionY": "644"
        },
        {
            "type": "step",
            "step": "j",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "2086",
            "positionY": "-3052"
        },
        {
            "type": "step",
            "step": "k",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "1666",
            "positionY": "-2926"
        },
        {
            "type": "step",
            "step": "low pitch",
            "display style": "ICON_AND_TEXT",
            "width": "124",
            "height": "40",
            "positionX": "1218",
            "positionY": "532"
        },
        {
            "type": "step",
            "step": "medium pitch",
            "display style": "ICON_AND_TEXT",
            "width": "124",
            "height": "40",
            "positionX": "1218",
            "positionY": "588"
        },
        {
            "type": "step",
            "step": "orange",
            "display style": "ICON_AND_TEXT",
            "width": "124",
            "height": "40",
            "positionX": "1218",
            "positionY": "784"
        },
        {
            "type": "step",
            "step": "red",
            "display style": "ICON_AND_TEXT",
            "width": "124",
            "height": "40",
            "positionX": "1218",
            "positionY": "728"
        },
        {
            "type": "step",
            "step": "sum",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "1736",
            "positionY": "-3010"
        },
        {
            "type": "step",
            "step": "violett",
            "display style": "ICON_AND_TEXT",
            "width": "124",
            "height": "40",
            "positionX": "1218",
            "positionY": "1008"
        },
        {
            "type": "step",
            "step": "x",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "2352",
            "positionY": "-3010"
        },
        {
            "type": "step",
            "step": "yellow",
            "display style": "ICON_AND_TEXT",
            "width": "124",
            "height": "40",
            "positionX": "1218",
            "positionY": "840"
        }
    ],
    "ui view": {
        "ScrollBarX": "-1702",
        "ScrollBarY": "-1536",
        "SliderPosX": "-1702",
        "SliderPosY": "-1536",
        "Zoom": "0.64000000000000001"
    },
    "ui generic": {
        "group": "element",
        "open plots": {
            "Action-HabituationWidget0": {
                "step": "Action-Habituation",
                "position_x": "839",
                "position_y": "233",
                "width": "408",
                "height": "400",
                "position_relative_x": "0.43697916666666664",
                "position_relative_y": "0.2337011033099298",
                "width_relative": "0.21249999999999999",
                "height_relative": "0.4012036108324975",
                "data_list": [
                    {
                        "id": "INPUT",
                        "name": "input",
                        "ignoreIfMissing": "false",
                        "plotDeclaration": "cedar::aux::gui::MatDataPlot"
                    },
                    {
                        "id": "INPUT",
                        "name": "peak detector",
                        "ignoreIfMissing": "false",
                        "plotDeclaration": "cedar::aux::gui::MatDataPlot"
                    },
                    {
                        "id": "OUTPUT",
                        "name": "activation",
                        "ignoreIfMissing": "false",
                        "plotDeclaration": "cedar::aux::gui::MatDataPlot"
                    }
                ],
                "plot configurations": [
                    {
                        "row": "1",
                        "col": "0",
                        "plot configuration": {
                            "smooth scaling": "true",
                            "keep aspect ratio": "true",
                            "automatic value scaling": "false",
                            "show legend": "true",
                            "value limits": {
                                "lower limit": "0",
                                "upper limit": "1"
                            },
                            "color jet": "PlotDefault"
                        }
                    },
                    {
                        "row": "1",
                        "col": "1",
                        "plot configuration": {
                            "autoscaling": "true",
                            "major grid visible": "false",
                            "minor grid visible": "false",
                            "y axis limits": {
                                "lower limit": "0",
                                "upper limit": "1"
                            },
                            "discrete plot": "false"
                        }
                    },
                    {
                        "row": "3",
                        "col": "0",
                        "plot configuration": {
                            "smooth scaling": "true",
                            "keep aspect ratio": "true",
                            "automatic value scaling": "true",
                            "show legend": "true",
                            "value limits": {
                                "lower limit": "0",
                                "upper limit": "1"
                            },
                            "color jet": "PlotDefault"
                        }
                    }
                ]
            },
            "Action-Outcome-DetectioWidget0": {
                "step": "Action-Outcome-Detectio",
                "position_x": "633",
                "position_y": "431",
                "width": "206",
                "height": "200",
                "position_relative_x": "0.32968750000000002",
                "position_relative_y": "0.43229689067201604",
                "width_relative": "0.10729166666666666",
                "height_relative": "0.20060180541624875",
                "data_list": [
                    {
                        "id": "BUFFER",
                        "name": "input sum",
                        "ignoreIfMissing": "false",
                        "plotDeclaration": "cedar::aux::gui::MatDataPlot"
                    },
                    {
                        "id": "BUFFER",
                        "name": "activation",
                        "ignoreIfMissing": "true",
                        "plotDeclaration": ""
                    },
                    {
                        "id": "OUTPUT",
                        "name": "activation",
                        "ignoreIfMissing": "true",
                        "plotDeclaration": ""
                    },
                    {
                        "id": "OUTPUT",
                        "name": "sigmoided activation",
                        "ignoreIfMissing": "false",
                        "plotDeclaration": ""
                    }
                ],
                "plot configurations": [
                    {
                        "row": "1",
                        "col": "0",
                        "plot configuration": {
                            "autoscaling": "true",
                            "major grid visible": "false",
                            "minor grid visible": "false",
                            "y axis limits": {
                                "lower limit": "0",
                                "upper limit": "1"
                            },
                            "discrete plot": "false"
                        }
                    }
                ]
            },
            "Action-PerseverationWidget0": {
                "step": "Action-Perseveration",
                "position_x": "427",
                "position_y": "230",
                "width": "408",
                "height": "400",
                "position_relative_x": "0.22239583333333332",
                "position_relative_y": "0.23069207622868607",
                "width_relative": "0.21249999999999999",
                "height_relative": "0.4012036108324975",
                "data_list": [
                    {
                        "id": "INPUT",
                        "name": "input",
                        "ignoreIfMissing": "false",
                        "plotDeclaration": "cedar::aux::gui::MatDataPlot"
                    },
                    {
                        "id": "INPUT",
                        "name": "peak detector",
                        "ignoreIfMissing": "false",
                        "plotDeclaration": "cedar::aux::gui::MatDataPlot"
                    },
                    {
                        "id": "OUTPUT",
                        "name": "activation",
                        "ignoreIfMissing": "false",
                        "plotDeclaration": "cedar::aux::gui::MatDataPlot"
                    }
                ],
                "plot configurations": [
                    {
                        "row": "1",
                        "col": "0",
                        "plot configuration": {
                            "smooth scaling": "true",
                            "keep aspect ratio": "true",
                            "automatic value scaling": "false",
                            "show legend": "true",
                            "value limits": {
                                "lower limit": "0",
                                "upper limit": "1"
                            },
                            "color jet": "PlotDefault"
                        }
                    },
                    {
                        "row": "1",
                        "col": "1",
                        "plot configuration": {
                            "autoscaling": "true",
                            "major grid visible": "false",
                            "minor grid visible": "false",
                            "y axis limits": {
                                "lower limit": "0",
                                "upper limit": "1"
                            },
                            "discrete plot": "false"
                        }
                    },
                    {
                        "row": "3",
                        "col": "0",
                        "plot configuration": {
                            "smooth scaling": "true",
                            "keep aspect ratio": "true",
                            "automatic value scaling": "true",
                            "show legend": "true",
                            "value limits": {
                                "lower limit": "0",
                                "upper limit": "1"
                            },
                            "color jet": "PlotDefault"
                        }
                    }
                ]
            },
            "Action-RecallWidget0": {
                "step": "Action-Recall",
                "position_x": "1035",
                "position_y": "638",
                "width": "408",
                "height": "400",
                "position_relative_x": "0.5390625",
                "position_relative_y": "0.63991975927783351",
                "width_relative": "0.21249999999999999",
                "height_relative": "0.4012036108324975",
                "data_list": [
                    {
                        "id": "BUFFER",
                        "name": "input sum",
                        "ignoreIfMissing": "false",
                        "plotDeclaration": "cedar::aux::gui::MatDataPlot"
                    },
                    {
                        "id": "BUFFER",
                        "name": "activation",
                        "ignoreIfMissing": "true",
                        "plotDeclaration": "cedar::aux::gui::MatDataPlot"
                    },
                    {
                        "id": "OUTPUT",
                        "name": "activation",
                        "ignoreIfMissing": "true",
                        "plotDeclaration": ""
                    },
                    {
                        "id": "OUTPUT",
                        "name": "sigmoided activation",
                        "ignoreIfMissing": "false",
                        "plotDeclaration": "cedar::aux::gui::MatDataPlot"
                    }
                ],
                "plot configurations": [
                    {
                        "row": "1",
                        "col": "0",
                        "plot configuration": {
                            "smooth scaling": "true",
                            "keep aspect ratio": "true",
                            "automatic value scaling": "true",
                            "show legend": "true",
                            "value limits": {
                                "lower limit": "0",
                                "upper limit": "1"
                            },
                            "color jet": "PlotDefault"
                        }
                    },
                    {
                        "row": "1",
                        "col": "1",
                        "plot configuration": {
                            "smooth scaling": "true",
                            "keep aspect ratio": "true",
                            "automatic value scaling": "true",
                            "show legend": "true",
                            "value limits": {
                                "lower limit": "0",
                                "upper limit": "1"
                            },
                            "color jet": "PlotDefault"
                        }
                    },
                    {
                        "row": "3",
                        "col": "0",
                        "plot configuration": {
                            "smooth scaling": "true",
                            "keep aspect ratio": "true",
                            "automatic value scaling": "false",
                            "show legend": "true",
                            "value limits": {
                                "lower limit": "0",
                                "upper limit": "1"
                            },
                            "color jet": "PlotDefault"
                        }
                    }
                ]
            },
            "Action ConceptsWidget0": {
                "step": "Action Concepts",
                "position_x": "0",
                "position_y": "632",
                "width": "206",
                "height": "200",
                "position_relative_x": "0",
                "position_relative_y": "0.63390170511534605",
                "width_relative": "0.10729166666666666",
                "height_relative": "0.20060180541624875",
                "data_list": [
                    {
                        "id": "BUFFER",
                        "name": "input sum",
                        "ignoreIfMissing": "false",
                        "plotDeclaration": "cedar::aux::gui::MatDataPlot"
                    },
                    {
                        "id": "BUFFER",
                        "name": "activation",
                        "ignoreIfMissing": "true",
                        "plotDeclaration": ""
                    },
                    {
                        "id": "OUTPUT",
                        "name": "activation",
                        "ignoreIfMissing": "true",
                        "plotDeclaration": ""
                    },
                    {
                        "id": "OUTPUT",
                        "name": "sigmoided activation",
                        "ignoreIfMissing": "false",
                        "plotDeclaration": ""
                    }
                ],
                "plot configurations": [
                    {
                        "row": "1",
                        "col": "0",
                        "plot configuration": {
                            "autoscaling": "true",
                            "major grid visible": "false",
                            "minor grid visible": "false",
                            "y axis limits": {
                                "lower limit": "0",
                                "upper limit": "1"
                            },
                            "discrete plot": "true"
                        }
                    }
                ]
            },
            "Camera TCP ReaderWidget0": {
                "step": "Camera TCP Reader",
                "position_x": "0",
                "position_y": "833",
                "width": "206",
                "height": "200",
                "position_relative_x": "0",
                "position_relative_y": "0.83550651955867605",
                "width_relative": "0.10729166666666666",
                "height_relative": "0.20060180541624875",
                "data_list": [
                    {
                        "id": "OUTPUT",
                        "name": "output",
                        "ignoreIfMissing": "false",
                        "plotDeclaration": "cedar::aux::gui::MatDataPlot"
                    }
                ],
                "plot configurations": [
                    {
                        "row": "1",
                        "col": "0",
                        "plot configuration": {
                            "smooth scaling": "true",
                            "keep aspect ratio": "true",
                            "automatic value scaling": "true",
                            "show legend": "true",
                            "value limits": {
                                "lower limit": "0",
                                "upper limit": "1"
                            },
                            "color jet": "PlotDefault"
                        }
                    }
                ]
            },
            "Goal-SelectionWidget0": {
                "step": "Goal-Selection",
                "position_x": "214",
                "position_y": "427",
                "width": "206",
                "height": "200",
                "position_relative_x": "0.11145833333333334",
                "position_relative_y": "0.42828485456369109",
                "width_relative": "0.10729166666666666",
                "height_relative": "0.20060180541624875",
                "data_list": [
                    {
                        "id": "BUFFER",
                        "name": "input sum",
                        "ignoreIfMissing": "false",
                        "plotDeclaration": "cedar::aux::gui::MatDataPlot"
                    },
                    {
                        "id": "BUFFER",
                        "name": "activation",
                        "ignoreIfMissing": "true",
                        "plotDeclaration": ""
                    },
                    {
                        "id": "OUTPUT",
                        "name": "activation",
                        "ignoreIfMissing": "true",
                        "plotDeclaration": ""
                    },
                    {
                        "id": "OUTPUT",
                        "name": "sigmoided activation",
                        "ignoreIfMissing": "false",
                        "plotDeclaration": ""
                    }
                ],
                "plot configurations": [
                    {
                        "row": "1",
                        "col": "0",
                        "plot configuration": {
                            "autoscaling": "true",
                            "major grid visible": "false",
                            "minor grid visible": "false",
                            "y axis limits": {
                                "lower limit": "0",
                                "upper limit": "1"
                            },
                            "discrete plot": "true"
                        }
                    }
                ]
            },
            "Intention-SelectionWidget0": {
                "step": "Intention-Selection",
                "position_x": "626",
                "position_y": "638",
                "width": "408",
                "height": "400",
                "position_relative_x": "0.32604166666666667",
                "position_relative_y": "0.63991975927783351",
                "width_relative": "0.21249999999999999",
                "height_relative": "0.4012036108324975",
                "data_list": [
                    {
                        "id": "BUFFER",
                        "name": "input sum",
                        "ignoreIfMissing": "false",
                        "plotDeclaration": "cedar::aux::gui::MatDataPlot"
                    },
                    {
                        "id": "BUFFER",
                        "name": "activation",
                        "ignoreIfMissing": "true",
                        "plotDeclaration": "cedar::aux::gui::MatDataPlot"
                    },
                    {
                        "id": "OUTPUT",
                        "name": "activation",
                        "ignoreIfMissing": "true",
                        "plotDeclaration": ""
                    },
                    {
                        "id": "OUTPUT",
                        "name": "sigmoided activation",
                        "ignoreIfMissing": "false",
                        "plotDeclaration": "cedar::aux::gui::MatDataPlot"
                    }
                ],
                "plot configurations": [
                    {
                        "row": "1",
                        "col": "0",
                        "plot configuration": {
                            "smooth scaling": "true",
                            "keep aspect ratio": "true",
                            "automatic value scaling": "true",
                            "show legend": "true",
                            "value limits": {
                                "lower limit": "0",
                                "upper limit": "1"
                            },
                            "color jet": "PlotDefault"
                        }
                    },
                    {
                        "row": "1",
                        "col": "1",
                        "plot configuration": {
                            "smooth scaling": "true",
                            "keep aspect ratio": "true",
                            "automatic value scaling": "true",
                            "show legend": "true",
                            "value limits": {
                                "lower limit": "0",
                                "upper limit": "1"
                            },
                            "color jet": "PlotDefault"
                        }
                    },
                    {
                        "row": "3",
                        "col": "0",
                        "plot configuration": {
                            "smooth scaling": "true",
                            "keep aspect ratio": "true",
                            "automatic value scaling": "false",
                            "show legend": "true",
                            "value limits": {
                                "lower limit": "0",
                                "upper limit": "1"
                            },
                            "color jet": "PlotDefault"
                        }
                    }
                ]
            },
            "Learning-Reward-NodeWidget0": {
                "step": "Learning-Reward-Node",
                "position_x": "629",
                "position_y": "439",
                "width": "206",
                "height": "200",
                "position_relative_x": "0.32760416666666664",
                "position_relative_y": "0.44032096288866601",
                "width_relative": "0.10729166666666666",
                "height_relative": "0.20060180541624875",
                "data_list": [
                    {
                        "id": "BUFFER",
                        "name": "input sum",
                        "ignoreIfMissing": "false",
                        "plotDeclaration": "cedar::aux::gui::MatDataPlot"
                    },
                    {
                        "id": "BUFFER",
                        "name": "activation",
                        "ignoreIfMissing": "true",
                        "plotDeclaration": ""
                    },
                    {
                        "id": "OUTPUT",
                        "name": "activation",
                        "ignoreIfMissing": "true",
                        "plotDeclaration": ""
                    },
                    {
                        "id": "OUTPUT",
                        "name": "sigmoided activation",
                        "ignoreIfMissing": "false",
                        "plotDeclaration": ""
                    }
                ],
                "plot configurations": [
                    {
                        "row": "1",
                        "col": "0",
                        "plot configuration": {
                            "autoscaling": "true",
                            "major grid visible": "false",
                            "minor grid visible": "false",
                            "y axis limits": {
                                "lower limit": "0",
                                "upper limit": "1"
                            },
                            "discrete plot": "false"
                        }
                    }
                ]
            },
            "ObjectColor ConceptsWidget0": {
                "step": "ObjectColor Concepts",
                "position_x": "0",
                "position_y": "430",
                "width": "206",
                "height": "200",
                "position_relative_x": "0",
                "position_relative_y": "0.43129388164493482",
                "width_relative": "0.10729166666666666",
                "height_relative": "0.20060180541624875",
                "data_list": [
                    {
                        "id": "BUFFER",
                        "name": "input sum",
                        "ignoreIfMissing": "false",
                        "plotDeclaration": "cedar::aux::gui::MatDataPlot"
                    },
                    {
                        "id": "BUFFER",
                        "name": "activation",
                        "ignoreIfMissing": "true",
                        "plotDeclaration": ""
                    },
                    {
                        "id": "OUTPUT",
                        "name": "activation",
                        "ignoreIfMissing": "true",
                        "plotDeclaration": ""
                    },
                    {
                        "id": "OUTPUT",
                        "name": "sigmoided activation",
                        "ignoreIfMissing": "false",
                        "plotDeclaration": ""
                    }
                ],
                "plot configurations": [
                    {
                        "row": "1",
                        "col": "0",
                        "plot configuration": {
                            "autoscaling": "true",
                            "major grid visible": "false",
                            "minor grid visible": "false",
                            "y axis limits": {
                                "lower limit": "0",
                                "upper limit": "1"
                            },
                            "discrete plot": "true"
                        }
                    }
                ]
            },
            "Sound ConceptsWidget0": {
                "step": "Sound Concepts",
                "position_x": "0",
                "position_y": "229",
                "width": "206",
                "height": "200",
                "position_relative_x": "0",
                "position_relative_y": "0.22968906720160481",
                "width_relative": "0.10729166666666666",
                "height_relative": "0.20060180541624875",
                "data_list": [
                    {
                        "id": "BUFFER",
                        "name": "input sum",
                        "ignoreIfMissing": "false",
                        "plotDeclaration": "cedar::aux::gui::MatDataPlot"
                    },
                    {
                        "id": "BUFFER",
                        "name": "activation",
                        "ignoreIfMissing": "true",
                        "plotDeclaration": ""
                    },
                    {
                        "id": "OUTPUT",
                        "name": "activation",
                        "ignoreIfMissing": "true",
                        "plotDeclaration": ""
                    },
                    {
                        "id": "OUTPUT",
                        "name": "sigmoided activation",
                        "ignoreIfMissing": "false",
                        "plotDeclaration": ""
                    }
                ],
                "plot configurations": [
                    {
                        "row": "1",
                        "col": "0",
                        "plot configuration": {
                            "autoscaling": "true",
                            "major grid visible": "false",
                            "minor grid visible": "false",
                            "y axis limits": {
                                "lower limit": "0",
                                "upper limit": "1"
                            },
                            "discrete plot": "true"
                        }
                    }
                ]
            },
            "Sound-RecallWidget0": {
                "step": "Sound-Recall",
                "position_x": "1033",
                "position_y": "439",
                "width": "206",
                "height": "200",
                "position_relative_x": "0.53802083333333328",
                "position_relative_y": "0.44032096288866601",
                "width_relative": "0.10729166666666666",
                "height_relative": "0.20060180541624875",
                "data_list": [
                    {
                        "id": "BUFFER",
                        "name": "input sum",
                        "ignoreIfMissing": "false",
                        "plotDeclaration": "cedar::aux::gui::MatDataPlot"
                    },
                    {
                        "id": "BUFFER",
                        "name": "activation",
                        "ignoreIfMissing": "true",
                        "plotDeclaration": ""
                    },
                    {
                        "id": "OUTPUT",
                        "name": "activation",
                        "ignoreIfMissing": "true",
                        "plotDeclaration": ""
                    },
                    {
                        "id": "OUTPUT",
                        "name": "sigmoided activation",
                        "ignoreIfMissing": "false",
                        "plotDeclaration": ""
                    }
                ],
                "plot configurations": [
                    {
                        "row": "1",
                        "col": "0",
                        "plot configuration": {
                            "autoscaling": "true",
                            "major grid visible": "false",
                            "minor grid visible": "false",
                            "y axis limits": {
                                "lower limit": "0",
                                "upper limit": "1"
                            },
                            "discrete plot": "true"
                        }
                    }
                ]
            },
            "Strategy-SelectionWidget0": {
                "step": "Strategy-Selection",
                "position_x": "214",
                "position_y": "637",
                "width": "408",
                "height": "400",
                "position_relative_x": "0.11145833333333334",
                "position_relative_y": "0.63891675025075223",
                "width_relative": "0.21249999999999999",
                "height_relative": "0.4012036108324975",
                "data_list": [
                    {
                        "id": "BUFFER",
                        "name": "input sum",
                        "ignoreIfMissing": "false",
                        "plotDeclaration": "cedar::aux::gui::MatDataPlot"
                    },
                    {
                        "id": "BUFFER",
                        "name": "activation",
                        "ignoreIfMissing": "true",
                        "plotDeclaration": "cedar::aux::gui::MatDataPlot"
                    },
                    {
                        "id": "OUTPUT",
                        "name": "activation",
                        "ignoreIfMissing": "true",
                        "plotDeclaration": ""
                    },
                    {
                        "id": "OUTPUT",
                        "name": "sigmoided activation",
                        "ignoreIfMissing": "false",
                        "plotDeclaration": "cedar::aux::gui::MatDataPlot"
                    }
                ],
                "plot configurations": [
                    {
                        "row": "1",
                        "col": "0",
                        "plot configuration": {
                            "smooth scaling": "true",
                            "keep aspect ratio": "true",
                            "automatic value scaling": "true",
                            "show legend": "true",
                            "value limits": {
                                "lower limit": "0",
                                "upper limit": "1"
                            },
                            "color jet": "PlotDefault"
                        }
                    },
                    {
                        "row": "1",
                        "col": "1",
                        "plot configuration": {
                            "smooth scaling": "true",
                            "keep aspect ratio": "true",
                            "automatic value scaling": "true",
                            "show legend": "true",
                            "value limits": {
                                "lower limit": "0",
                                "upper limit": "1"
                            },
                            "color jet": "PlotDefault"
                        }
                    },
                    {
                        "row": "3",
                        "col": "0",
                        "plot configuration": {
                            "smooth scaling": "true",
                            "keep aspect ratio": "true",
                            "automatic value scaling": "false",
                            "show legend": "true",
                            "value limits": {
                                "lower limit": "0",
                                "upper limit": "1"
                            },
                            "color jet": "PlotDefault"
                        }
                    }
                ]
            },
            "Supervisor-Task-InputWidget0": {
                "step": "Supervisor-Task-Input",
                "position_x": "210",
                "position_y": "225",
                "width": "206",
                "height": "200",
                "position_relative_x": "0.109375",
                "position_relative_y": "0.22567703109327983",
                "width_relative": "0.10729166666666666",
                "height_relative": "0.20060180541624875",
                "data_list": [
                    {
                        "id": "BUFFER",
                        "name": "input sum",
                        "ignoreIfMissing": "false",
                        "plotDeclaration": "cedar::aux::gui::MatDataPlot"
                    },
                    {
                        "id": "BUFFER",
                        "name": "activation",
                        "ignoreIfMissing": "true",
                        "plotDeclaration": ""
                    },
                    {
                        "id": "OUTPUT",
                        "name": "activation",
                        "ignoreIfMissing": "true",
                        "plotDeclaration": ""
                    },
                    {
                        "id": "OUTPUT",
                        "name": "sigmoided activation",
                        "ignoreIfMissing": "false",
                        "plotDeclaration": ""
                    }
                ],
                "plot configurations": [
                    {
                        "row": "1",
                        "col": "0",
                        "plot configuration": {
                            "autoscaling": "true",
                            "major grid visible": "false",
                            "minor grid visible": "false",
                            "y axis limits": {
                                "lower limit": "0",
                                "upper limit": "1"
                            },
                            "discrete plot": "true"
                        }
                    }
                ]
            }
        },
        "plot groups": {
            "RecordedFields": {
                "Action-HabituationWidget0": {
                    "step": "Action-Habituation",
                    "position_x": "839",
                    "position_y": "233",
                    "width": "408",
                    "height": "400",
                    "position_relative_x": "0.43697916666666664",
                    "position_relative_y": "0.2337011033099298",
                    "width_relative": "0.21249999999999999",
                    "height_relative": "0.4012036108324975",
                    "data_list": [
                        {
                            "id": "INPUT",
                            "name": "input",
                            "ignoreIfMissing": "false",
                            "plotDeclaration": "cedar::aux::gui::MatDataPlot"
                        },
                        {
                            "id": "INPUT",
                            "name": "peak detector",
                            "ignoreIfMissing": "false",
                            "plotDeclaration": "cedar::aux::gui::MatDataPlot"
                        },
                        {
                            "id": "OUTPUT",
                            "name": "activation",
                            "ignoreIfMissing": "false",
                            "plotDeclaration": "cedar::aux::gui::MatDataPlot"
                        }
                    ],
                    "plot configurations": [
                        {
                            "row": "1",
                            "col": "0",
                            "plot configuration": {
                                "smooth scaling": "true",
                                "keep aspect ratio": "true",
                                "automatic value scaling": "false",
                                "show legend": "true",
                                "value limits": {
                                    "lower limit": "0",
                                    "upper limit": "1"
                                },
                                "color jet": "PlotDefault"
                            }
                        },
                        {
                            "row": "1",
                            "col": "1",
                            "plot configuration": {
                                "autoscaling": "true",
                                "major grid visible": "false",
                                "minor grid visible": "false",
                                "y axis limits": {
                                    "lower limit": "0",
                                    "upper limit": "1"
                                },
                                "discrete plot": "false"
                            }
                        },
                        {
                            "row": "3",
                            "col": "0",
                            "plot configuration": {
                                "smooth scaling": "true",
                                "keep aspect ratio": "true",
                                "automatic value scaling": "true",
                                "show legend": "true",
                                "value limits": {
                                    "lower limit": "0",
                                    "upper limit": "1"
                                },
                                "color jet": "PlotDefault"
                            }
                        }
                    ]
                },
                "Action-Outcome-DetectioWidget0": {
                    "step": "Action-Outcome-Detectio",
                    "position_x": "633",
                    "position_y": "431",
                    "width": "206",
                    "height": "200",
                    "position_relative_x": "0.32968750000000002",
                    "position_relative_y": "0.43229689067201604",
                    "width_relative": "0.10729166666666666",
                    "height_relative": "0.20060180541624875",
                    "data_list": [
                        {
                            "id": "BUFFER",
                            "name": "input sum",
                            "ignoreIfMissing": "false",
                            "plotDeclaration": "cedar::aux::gui::MatDataPlot"
                        },
                        {
                            "id": "BUFFER",
                            "name": "activation",
                            "ignoreIfMissing": "true",
                            "plotDeclaration": ""
                        },
                        {
                            "id": "OUTPUT",
                            "name": "activation",
                            "ignoreIfMissing": "true",
                            "plotDeclaration": ""
                        },
                        {
                            "id": "OUTPUT",
                            "name": "sigmoided activation",
                            "ignoreIfMissing": "false",
                            "plotDeclaration": ""
                        }
                    ],
                    "plot configurations": [
                        {
                            "row": "1",
                            "col": "0",
                            "plot configuration": {
                                "autoscaling": "true",
                                "major grid visible": "false",
                                "minor grid visible": "false",
                                "y axis limits": {
                                    "lower limit": "0",
                                    "upper limit": "1"
                                },
                                "discrete plot": "false"
                            }
                        }
                    ]
                },
                "Action-PerseverationWidget0": {
                    "step": "Action-Perseveration",
                    "position_x": "427",
                    "position_y": "230",
                    "width": "408",
                    "height": "400",
                    "position_relative_x": "0.22239583333333332",
                    "position_relative_y": "0.23069207622868607",
                    "width_relative": "0.21249999999999999",
                    "height_relative": "0.4012036108324975",
                    "data_list": [
                        {
                            "id": "INPUT",
                            "name": "input",
                            "ignoreIfMissing": "false",
                            "plotDeclaration": "cedar::aux::gui::MatDataPlot"
                        },
                        {
                            "id": "INPUT",
                            "name": "peak detector",
                            "ignoreIfMissing": "false",
                            "plotDeclaration": "cedar::aux::gui::MatDataPlot"
                        },
                        {
                            "id": "OUTPUT",
                            "name": "activation",
                            "ignoreIfMissing": "false",
                            "plotDeclaration": "cedar::aux::gui::MatDataPlot"
                        }
                    ],
                    "plot configurations": [
                        {
                            "row": "1",
                            "col": "0",
                            "plot configuration": {
                                "smooth scaling": "true",
                                "keep aspect ratio": "true",
                                "automatic value scaling": "false",
                                "show legend": "true",
                                "value limits": {
                                    "lower limit": "0",
                                    "upper limit": "1"
                                },
                                "color jet": "PlotDefault"
                            }
                        },
                        {
                            "row": "1",
                            "col": "1",
                            "plot configuration": {
                                "autoscaling": "true",
                                "major grid visible": "false",
                                "minor grid visible": "false",
                                "y axis limits": {
                                    "lower limit": "0",
                                    "upper limit": "1"
                                },
                                "discrete plot": "false"
                            }
                        },
                        {
                            "row": "3",
                            "col": "0",
                            "plot configuration": {
                                "smooth scaling": "true",
                                "keep aspect ratio": "true",
                                "automatic value scaling": "true",
                                "show legend": "true",
                                "value limits": {
                                    "lower limit": "0",
                                    "upper limit": "1"
                                },
                                "color jet": "PlotDefault"
                            }
                        }
                    ]
                },
                "Action-RecallWidget0": {
                    "step": "Action-Recall",
                    "position_x": "1035",
                    "position_y": "638",
                    "width": "408",
                    "height": "400",
                    "position_relative_x": "0.5390625",
                    "position_relative_y": "0.63991975927783351",
                    "width_relative": "0.21249999999999999",
                    "height_relative": "0.4012036108324975",
                    "data_list": [
                        {
                            "id": "BUFFER",
                            "name": "input sum",
                            "ignoreIfMissing": "false",
                            "plotDeclaration": "cedar::aux::gui::MatDataPlot"
                        },
                        {
                            "id": "BUFFER",
                            "name": "activation",
                            "ignoreIfMissing": "true",
                            "plotDeclaration": "cedar::aux::gui::MatDataPlot"
                        },
                        {
                            "id": "OUTPUT",
                            "name": "activation",
                            "ignoreIfMissing": "true",
                            "plotDeclaration": ""
                        },
                        {
                            "id": "OUTPUT",
                            "name": "sigmoided activation",
                            "ignoreIfMissing": "false",
                            "plotDeclaration": "cedar::aux::gui::MatDataPlot"
                        }
                    ],
                    "plot configurations": [
                        {
                            "row": "1",
                            "col": "0",
                            "plot configuration": {
                                "smooth scaling": "true",
                                "keep aspect ratio": "true",
                                "automatic value scaling": "true",
                                "show legend": "true",
                                "value limits": {
                                    "lower limit": "0",
                                    "upper limit": "1"
                                },
                                "color jet": "PlotDefault"
                            }
                        },
                        {
                            "row": "1",
                            "col": "1",
                            "plot configuration": {
                                "smooth scaling": "true",
                                "keep aspect ratio": "true",
                                "automatic value scaling": "true",
                                "show legend": "true",
                                "value limits": {
                                    "lower limit": "0",
                                    "upper limit": "1"
                                },
                                "color jet": "PlotDefault"
                            }
                        },
                        {
                            "row": "3",
                            "col": "0",
                            "plot configuration": {
                                "smooth scaling": "true",
                                "keep aspect ratio": "true",
                                "automatic value scaling": "false",
                                "show legend": "true",
                                "value limits": {
                                    "lower limit": "0",
                                    "upper limit": "1"
                                },
                                "color jet": "PlotDefault"
                            }
                        }
                    ]
                },
                "Action ConceptsWidget0": {
                    "step": "Action Concepts",
                    "position_x": "0",
                    "position_y": "632",
                    "width": "206",
                    "height": "200",
                    "position_relative_x": "0",
                    "position_relative_y": "0.63390170511534605",
                    "width_relative": "0.10729166666666666",
                    "height_relative": "0.20060180541624875",
                    "data_list": [
                        {
                            "id": "BUFFER",
                            "name": "input sum",
                            "ignoreIfMissing": "false",
                            "plotDeclaration": "cedar::aux::gui::MatDataPlot"
                        },
                        {
                            "id": "BUFFER",
                            "name": "activation",
                            "ignoreIfMissing": "true",
                            "plotDeclaration": ""
                        },
                        {
                            "id": "OUTPUT",
                            "name": "activation",
                            "ignoreIfMissing": "true",
                            "plotDeclaration": ""
                        },
                        {
                            "id": "OUTPUT",
                            "name": "sigmoided activation",
                            "ignoreIfMissing": "false",
                            "plotDeclaration": ""
                        }
                    ],
                    "plot configurations": [
                        {
                            "row": "1",
                            "col": "0",
                            "plot configuration": {
                                "autoscaling": "true",
                                "major grid visible": "false",
                                "minor grid visible": "false",
                                "y axis limits": {
                                    "lower limit": "0",
                                    "upper limit": "1"
                                },
                                "discrete plot": "true"
                            }
                        }
                    ]
                },
                "Camera TCP ReaderWidget0": {
                    "step": "Camera TCP Reader",
                    "position_x": "0",
                    "position_y": "833",
                    "width": "206",
                    "height": "200",
                    "position_relative_x": "0",
                    "position_relative_y": "0.83550651955867605",
                    "width_relative": "0.10729166666666666",
                    "height_relative": "0.20060180541624875",
                    "data_list": [
                        {
                            "id": "OUTPUT",
                            "name": "output",
                            "ignoreIfMissing": "false",
                            "plotDeclaration": "cedar::aux::gui::MatDataPlot"
                        }
                    ],
                    "plot configurations": [
                        {
                            "row": "1",
                            "col": "0",
                            "plot configuration": {
                                "smooth scaling": "true",
                                "keep aspect ratio": "true",
                                "automatic value scaling": "true",
                                "show legend": "true",
                                "value limits": {
                                    "lower limit": "0",
                                    "upper limit": "1"
                                },
                                "color jet": "PlotDefault"
                            }
                        }
                    ]
                },
                "Goal-SelectionWidget0": {
                    "step": "Goal-Selection",
                    "position_x": "214",
                    "position_y": "427",
                    "width": "206",
                    "height": "200",
                    "position_relative_x": "0.11145833333333334",
                    "position_relative_y": "0.42828485456369109",
                    "width_relative": "0.10729166666666666",
                    "height_relative": "0.20060180541624875",
                    "data_list": [
                        {
                            "id": "BUFFER",
                            "name": "input sum",
                            "ignoreIfMissing": "false",
                            "plotDeclaration": "cedar::aux::gui::MatDataPlot"
                        },
                        {
                            "id": "BUFFER",
                            "name": "activation",
                            "ignoreIfMissing": "true",
                            "plotDeclaration": ""
                        },
                        {
                            "id": "OUTPUT",
                            "name": "activation",
                            "ignoreIfMissing": "true",
                            "plotDeclaration": ""
                        },
                        {
                            "id": "OUTPUT",
                            "name": "sigmoided activation",
                            "ignoreIfMissing": "false",
                            "plotDeclaration": ""
                        }
                    ],
                    "plot configurations": [
                        {
                            "row": "1",
                            "col": "0",
                            "plot configuration": {
                                "autoscaling": "true",
                                "major grid visible": "false",
                                "minor grid visible": "false",
                                "y axis limits": {
                                    "lower limit": "0",
                                    "upper limit": "1"
                                },
                                "discrete plot": "true"
                            }
                        }
                    ]
                },
                "Intention-SelectionWidget0": {
                    "step": "Intention-Selection",
                    "position_x": "626",
                    "position_y": "638",
                    "width": "408",
                    "height": "400",
                    "position_relative_x": "0.32604166666666667",
                    "position_relative_y": "0.63991975927783351",
                    "width_relative": "0.21249999999999999",
                    "height_relative": "0.4012036108324975",
                    "data_list": [
                        {
                            "id": "BUFFER",
                            "name": "input sum",
                            "ignoreIfMissing": "false",
                            "plotDeclaration": "cedar::aux::gui::MatDataPlot"
                        },
                        {
                            "id": "BUFFER",
                            "name": "activation",
                            "ignoreIfMissing": "true",
                            "plotDeclaration": "cedar::aux::gui::MatDataPlot"
                        },
                        {
                            "id": "OUTPUT",
                            "name": "activation",
                            "ignoreIfMissing": "true",
                            "plotDeclaration": ""
                        },
                        {
                            "id": "OUTPUT",
                            "name": "sigmoided activation",
                            "ignoreIfMissing": "false",
                            "plotDeclaration": "cedar::aux::gui::MatDataPlot"
                        }
                    ],
                    "plot configurations": [
                        {
                            "row": "1",
                            "col": "0",
                            "plot configuration": {
                                "smooth scaling": "true",
                                "keep aspect ratio": "true",
                                "automatic value scaling": "true",
                                "show legend": "true",
                                "value limits": {
                                    "lower limit": "0",
                                    "upper limit": "1"
                                },
                                "color jet": "PlotDefault"
                            }
                        },
                        {
                            "row": "1",
                            "col": "1",
                            "plot configuration": {
                                "smooth scaling": "true",
                                "keep aspect ratio": "true",
                                "automatic value scaling": "true",
                                "show legend": "true",
                                "value limits": {
                                    "lower limit": "0",
                                    "upper limit": "1"
                                },
                                "color jet": "PlotDefault"
                            }
                        },
                        {
                            "row": "3",
                            "col": "0",
                            "plot configuration": {
                                "smooth scaling": "true",
                                "keep aspect ratio": "true",
                                "automatic value scaling": "false",
                                "show legend": "true",
                                "value limits": {
                                    "lower limit": "0",
                                    "upper limit": "1"
                                },
                                "color jet": "PlotDefault"
                            }
                        }
                    ]
                },
                "Learning-Reward-NodeWidget0": {
                    "step": "Learning-Reward-Node",
                    "position_x": "629",
                    "position_y": "439",
                    "width": "206",
                    "height": "200",
                    "position_relative_x": "0.32760416666666664",
                    "position_relative_y": "0.44032096288866601",
                    "width_relative": "0.10729166666666666",
                    "height_relative": "0.20060180541624875",
                    "data_list": [
                        {
                            "id": "BUFFER",
                            "name": "input sum",
                            "ignoreIfMissing": "false",
                            "plotDeclaration": "cedar::aux::gui::MatDataPlot"
                        },
                        {
                            "id": "BUFFER",
                            "name": "activation",
                            "ignoreIfMissing": "true",
                            "plotDeclaration": ""
                        },
                        {
                            "id": "OUTPUT",
                            "name": "activation",
                            "ignoreIfMissing": "true",
                            "plotDeclaration": ""
                        },
                        {
                            "id": "OUTPUT",
                            "name": "sigmoided activation",
                            "ignoreIfMissing": "false",
                            "plotDeclaration": ""
                        }
                    ],
                    "plot configurations": [
                        {
                            "row": "1",
                            "col": "0",
                            "plot configuration": {
                                "autoscaling": "true",
                                "major grid visible": "false",
                                "minor grid visible": "false",
                                "y axis limits": {
                                    "lower limit": "0",
                                    "upper limit": "1"
                                },
                                "discrete plot": "false"
                            }
                        }
                    ]
                },
                "ObjectColor ConceptsWidget0": {
                    "step": "ObjectColor Concepts",
                    "position_x": "0",
                    "position_y": "430",
                    "width": "206",
                    "height": "200",
                    "position_relative_x": "0",
                    "position_relative_y": "0.43129388164493482",
                    "width_relative": "0.10729166666666666",
                    "height_relative": "0.20060180541624875",
                    "data_list": [
                        {
                            "id": "BUFFER",
                            "name": "input sum",
                            "ignoreIfMissing": "false",
                            "plotDeclaration": "cedar::aux::gui::MatDataPlot"
                        },
                        {
                            "id": "BUFFER",
                            "name": "activation",
                            "ignoreIfMissing": "true",
                            "plotDeclaration": ""
                        },
                        {
                            "id": "OUTPUT",
                            "name": "activation",
                            "ignoreIfMissing": "true",
                            "plotDeclaration": ""
                        },
                        {
                            "id": "OUTPUT",
                            "name": "sigmoided activation",
                            "ignoreIfMissing": "false",
                            "plotDeclaration": ""
                        }
                    ],
                    "plot configurations": [
                        {
                            "row": "1",
                            "col": "0",
                            "plot configuration": {
                                "autoscaling": "true",
                                "major grid visible": "false",
                                "minor grid visible": "false",
                                "y axis limits": {
                                    "lower limit": "0",
                                    "upper limit": "1"
                                },
                                "discrete plot": "true"
                            }
                        }
                    ]
                },
                "Sound ConceptsWidget0": {
                    "step": "Sound Concepts",
                    "position_x": "0",
                    "position_y": "229",
                    "width": "206",
                    "height": "200",
                    "position_relative_x": "0",
                    "position_relative_y": "0.22968906720160481",
                    "width_relative": "0.10729166666666666",
                    "height_relative": "0.20060180541624875",
                    "data_list": [
                        {
                            "id": "BUFFER",
                            "name": "input sum",
                            "ignoreIfMissing": "false",
                            "plotDeclaration": "cedar::aux::gui::MatDataPlot"
                        },
                        {
                            "id": "BUFFER",
                            "name": "activation",
                            "ignoreIfMissing": "true",
                            "plotDeclaration": ""
                        },
                        {
                            "id": "OUTPUT",
                            "name": "activation",
                            "ignoreIfMissing": "true",
                            "plotDeclaration": ""
                        },
                        {
                            "id": "OUTPUT",
                            "name": "sigmoided activation",
                            "ignoreIfMissing": "false",
                            "plotDeclaration": ""
                        }
                    ],
                    "plot configurations": [
                        {
                            "row": "1",
                            "col": "0",
                            "plot configuration": {
                                "autoscaling": "true",
                                "major grid visible": "false",
                                "minor grid visible": "false",
                                "y axis limits": {
                                    "lower limit": "0",
                                    "upper limit": "1"
                                },
                                "discrete plot": "true"
                            }
                        }
                    ]
                },
                "Sound-RecallWidget0": {
                    "step": "Sound-Recall",
                    "position_x": "1033",
                    "position_y": "439",
                    "width": "206",
                    "height": "200",
                    "position_relative_x": "0.53802083333333328",
                    "position_relative_y": "0.44032096288866601",
                    "width_relative": "0.10729166666666666",
                    "height_relative": "0.20060180541624875",
                    "data_list": [
                        {
                            "id": "BUFFER",
                            "name": "input sum",
                            "ignoreIfMissing": "false",
                            "plotDeclaration": "cedar::aux::gui::MatDataPlot"
                        },
                        {
                            "id": "BUFFER",
                            "name": "activation",
                            "ignoreIfMissing": "true",
                            "plotDeclaration": ""
                        },
                        {
                            "id": "OUTPUT",
                            "name": "activation",
                            "ignoreIfMissing": "true",
                            "plotDeclaration": ""
                        },
                        {
                            "id": "OUTPUT",
                            "name": "sigmoided activation",
                            "ignoreIfMissing": "false",
                            "plotDeclaration": ""
                        }
                    ],
                    "plot configurations": [
                        {
                            "row": "1",
                            "col": "0",
                            "plot configuration": {
                                "autoscaling": "true",
                                "major grid visible": "false",
                                "minor grid visible": "false",
                                "y axis limits": {
                                    "lower limit": "0",
                                    "upper limit": "1"
                                },
                                "discrete plot": "true"
                            }
                        }
                    ]
                },
                "Strategy-SelectionWidget0": {
                    "step": "Strategy-Selection",
                    "position_x": "214",
                    "position_y": "637",
                    "width": "408",
                    "height": "400",
                    "position_relative_x": "0.11145833333333334",
                    "position_relative_y": "0.63891675025075223",
                    "width_relative": "0.21249999999999999",
                    "height_relative": "0.4012036108324975",
                    "data_list": [
                        {
                            "id": "BUFFER",
                            "name": "input sum",
                            "ignoreIfMissing": "false",
                            "plotDeclaration": "cedar::aux::gui::MatDataPlot"
                        },
                        {
                            "id": "BUFFER",
                            "name": "activation",
                            "ignoreIfMissing": "true",
                            "plotDeclaration": "cedar::aux::gui::MatDataPlot"
                        },
                        {
                            "id": "OUTPUT",
                            "name": "activation",
                            "ignoreIfMissing": "true",
                            "plotDeclaration": ""
                        },
                        {
                            "id": "OUTPUT",
                            "name": "sigmoided activation",
                            "ignoreIfMissing": "false",
                            "plotDeclaration": "cedar::aux::gui::MatDataPlot"
                        }
                    ],
                    "plot configurations": [
                        {
                            "row": "1",
                            "col": "0",
                            "plot configuration": {
                                "smooth scaling": "true",
                                "keep aspect ratio": "true",
                                "automatic value scaling": "true",
                                "show legend": "true",
                                "value limits": {
                                    "lower limit": "0",
                                    "upper limit": "1"
                                },
                                "color jet": "PlotDefault"
                            }
                        },
                        {
                            "row": "1",
                            "col": "1",
                            "plot configuration": {
                                "smooth scaling": "true",
                                "keep aspect ratio": "true",
                                "automatic value scaling": "true",
                                "show legend": "true",
                                "value limits": {
                                    "lower limit": "0",
                                    "upper limit": "1"
                                },
                                "color jet": "PlotDefault"
                            }
                        },
                        {
                            "row": "3",
                            "col": "0",
                            "plot configuration": {
                                "smooth scaling": "true",
                                "keep aspect ratio": "true",
                                "automatic value scaling": "false",
                                "show legend": "true",
                                "value limits": {
                                    "lower limit": "0",
                                    "upper limit": "1"
                                },
                                "color jet": "PlotDefault"
                            }
                        }
                    ]
                },
                "Supervisor-Task-InputWidget0": {
                    "step": "Supervisor-Task-Input",
                    "position_x": "210",
                    "position_y": "225",
                    "width": "206",
                    "height": "200",
                    "position_relative_x": "0.109375",
                    "position_relative_y": "0.22567703109327983",
                    "width_relative": "0.10729166666666666",
                    "height_relative": "0.20060180541624875",
                    "data_list": [
                        {
                            "id": "BUFFER",
                            "name": "input sum",
                            "ignoreIfMissing": "false",
                            "plotDeclaration": "cedar::aux::gui::MatDataPlot"
                        },
                        {
                            "id": "BUFFER",
                            "name": "activation",
                            "ignoreIfMissing": "true",
                            "plotDeclaration": ""
                        },
                        {
                            "id": "OUTPUT",
                            "name": "activation",
                            "ignoreIfMissing": "true",
                            "plotDeclaration": ""
                        },
                        {
                            "id": "OUTPUT",
                            "name": "sigmoided activation",
                            "ignoreIfMissing": "false",
                            "plotDeclaration": ""
                        }
                    ],
                    "plot configurations": [
                        {
                            "row": "1",
                            "col": "0",
                            "plot configuration": {
                                "autoscaling": "true",
                                "major grid visible": "false",
                                "minor grid visible": "false",
                                "y axis limits": {
                                    "lower limit": "0",
                                    "upper limit": "1"
                                },
                                "discrete plot": "true"
                            }
                        }
                    ]
                },
                "visible": "true"
            }
        },
        "architecture widgets": "",
        "robots": "",
        "width": "250",
        "height": "250",
        "smart mode": "true",
        "collapsed": "false",
        "lock geometry": "false",
        "uncollapsed width": "250",
        "uncollapsed height": "250",
        "positionX": "0",
        "positionY": "0"
    }
}
