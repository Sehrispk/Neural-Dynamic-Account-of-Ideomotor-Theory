{
    "meta": {
        "format": "1"
    },
    "steps": {
        "cedar.dynamics.NeuralField": {
            "name": "Action-Attention-Field",
            "activation as output": "false",
            "discrete metric (workaround)": "true",
            "update stepIcon according to output": "true",
            "threshold for updating the stepIcon": "0.80000000000000004",
            "dimensionality": "1",
            "sizes": [
                "5"
            ],
            "time scale": "100",
            "resting level": "-2.75",
            "input noise gain": "0.10000000000000001",
            "multiplicative noise (input)": "false",
            "multiplicative noise (activation)": "false",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0",
                "beta": "100"
            },
            "global inhibition": "-1",
            "lateral kernels": {
                "cedar.aux.kernel.Gauss": {
                    "dimensionality": "1",
                    "anchor": [
                        "0"
                    ],
                    "amplitude": "1.1000000000000001",
                    "sigmas": [
                        "0.10000000000000001"
                    ],
                    "normalize": "true",
                    "shifts": [
                        "0"
                    ],
                    "limit": "5"
                }
            },
            "lateral kernel convolution": {
                "borderType": "Zero",
                "mode": "Same",
                "engine": {
                    "type": "cedar.aux.conv.OpenCV"
                },
                "alternate even kernel center": "false"
            },
            "noise correlation kernel": {
                "dimensionality": "1",
                "anchor": [
                    "0"
                ],
                "amplitude": "0",
                "sigmas": [
                    "3"
                ],
                "normalize": "true",
                "shifts": [
                    "0"
                ],
                "limit": "5"
            },
            "comments": ""
        },
        "cedar.dynamics.NeuralField": {
            "name": "Action-Impact-Interval",
            "activation as output": "false",
            "discrete metric (workaround)": "true",
            "update stepIcon according to output": "true",
            "threshold for updating the stepIcon": "0.80000000000000004",
            "dimensionality": "1",
            "sizes": [
                "5"
            ],
            "time scale": "100",
            "resting level": "-0.75",
            "input noise gain": "0.10000000000000001",
            "multiplicative noise (input)": "false",
            "multiplicative noise (activation)": "false",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0",
                "beta": "100"
            },
            "global inhibition": "0",
            "lateral kernels": "",
            "lateral kernel convolution": {
                "borderType": "Zero",
                "mode": "Same",
                "engine": {
                    "type": "cedar.aux.conv.OpenCV"
                },
                "alternate even kernel center": "false"
            },
            "noise correlation kernel": {
                "dimensionality": "1",
                "anchor": [
                    "0"
                ],
                "amplitude": "0",
                "sigmas": [
                    "3"
                ],
                "normalize": "true",
                "shifts": [
                    "0"
                ],
                "limit": "5"
            },
            "comments": ""
        },
        "cedar.dynamics.NeuralField": {
            "name": "Action-Introception-Field",
            "activation as output": "false",
            "discrete metric (workaround)": "true",
            "update stepIcon according to output": "true",
            "threshold for updating the stepIcon": "0.80000000000000004",
            "dimensionality": "1",
            "sizes": [
                "5"
            ],
            "time scale": "100",
            "resting level": "-0.75",
            "input noise gain": "0.10000000000000001",
            "multiplicative noise (input)": "false",
            "multiplicative noise (activation)": "false",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0",
                "beta": "100"
            },
            "global inhibition": "-0.01",
            "lateral kernels": {
                "cedar.aux.kernel.Gauss": {
                    "dimensionality": "1",
                    "anchor": [
                        "0"
                    ],
                    "amplitude": "1",
                    "sigmas": [
                        "0.10000000000000001"
                    ],
                    "normalize": "true",
                    "shifts": [
                        "0"
                    ],
                    "limit": "5"
                }
            },
            "lateral kernel convolution": {
                "borderType": "Zero",
                "mode": "Same",
                "engine": {
                    "type": "cedar.aux.conv.OpenCV"
                },
                "alternate even kernel center": "false"
            },
            "noise correlation kernel": {
                "dimensionality": "1",
                "anchor": [
                    "0"
                ],
                "amplitude": "0",
                "sigmas": [
                    "3"
                ],
                "normalize": "true",
                "shifts": [
                    "0"
                ],
                "limit": "5"
            },
            "comments": ""
        },
        "cedar.dynamics.Preshape": {
            "name": "Action-Memory-Trace",
            "dimensionality": "1",
            "sizes": [
                "5"
            ],
            "time scale build up": "100",
            "time scale decay": "8000",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0.5",
                "beta": "1000"
            },
            "comments": ""
        },
        "cedar.dynamics.NeuralField": {
            "name": "Action-Selection-Field",
            "activation as output": "false",
            "discrete metric (workaround)": "true",
            "update stepIcon according to output": "true",
            "threshold for updating the stepIcon": "0.80000000000000004",
            "dimensionality": "1",
            "sizes": [
                "5"
            ],
            "time scale": "100",
            "resting level": "-1.75",
            "input noise gain": "0.10000000000000001",
            "multiplicative noise (input)": "false",
            "multiplicative noise (activation)": "false",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0",
                "beta": "100"
            },
            "global inhibition": "-1",
            "lateral kernels": {
                "cedar.aux.kernel.Gauss": {
                    "dimensionality": "1",
                    "anchor": [
                        "0"
                    ],
                    "amplitude": "1.1000000000000001",
                    "sigmas": [
                        "0.10000000000000001"
                    ],
                    "normalize": "true",
                    "shifts": [
                        "0"
                    ],
                    "limit": "5"
                }
            },
            "lateral kernel convolution": {
                "borderType": "Zero",
                "mode": "Same",
                "engine": {
                    "type": "cedar.aux.conv.OpenCV"
                },
                "alternate even kernel center": "false"
            },
            "noise correlation kernel": {
                "dimensionality": "1",
                "anchor": [
                    "0"
                ],
                "amplitude": "0",
                "sigmas": [
                    "3"
                ],
                "normalize": "true",
                "shifts": [
                    "0"
                ],
                "limit": "5"
            },
            "comments": ""
        },
        "cedar.dynamics.NeuralField": {
            "name": "ActionChange Detection",
            "activation as output": "false",
            "discrete metric (workaround)": "false",
            "update stepIcon according to output": "true",
            "threshold for updating the stepIcon": "0.80000000000000004",
            "dimensionality": "0",
            "sizes": "",
            "time scale": "100",
            "resting level": "-1.75",
            "input noise gain": "0.10000000000000001",
            "multiplicative noise (input)": "false",
            "multiplicative noise (activation)": "false",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0",
                "beta": "100"
            },
            "global inhibition": "0",
            "lateral kernels": "",
            "lateral kernel convolution": {
                "borderType": "Zero",
                "mode": "Same",
                "engine": {
                    "type": "cedar.aux.conv.OpenCV"
                },
                "alternate even kernel center": "false"
            },
            "noise correlation kernel": {
                "dimensionality": "1",
                "anchor": [
                    "0"
                ],
                "amplitude": "0",
                "sigmas": [
                    "3"
                ],
                "normalize": "true",
                "shifts": [
                    "0"
                ],
                "limit": "5"
            },
            "comments": ""
        },
        "cedar.processing.steps.AddConstant": {
            "name": "Add Constant",
            "constant": "1",
            "comments": ""
        },
        "cedar.dynamics.NeuralField": {
            "name": "Attention-Color-Binding-Field",
            "activation as output": "false",
            "discrete metric (workaround)": "false",
            "update stepIcon according to output": "true",
            "threshold for updating the stepIcon": "0.80000000000000004",
            "dimensionality": "2",
            "sizes": [
                "50",
                "52"
            ],
            "time scale": "100",
            "resting level": "-1.75",
            "input noise gain": "0.10000000000000001",
            "multiplicative noise (input)": "false",
            "multiplicative noise (activation)": "false",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0",
                "beta": "100"
            },
            "global inhibition": "0",
            "lateral kernels": "",
            "lateral kernel convolution": {
                "borderType": "Cyclic",
                "mode": "Same",
                "engine": {
                    "type": "cedar.aux.conv.OpenCV"
                },
                "alternate even kernel center": "false"
            },
            "noise correlation kernel": {
                "dimensionality": "2",
                "anchor": [
                    "0",
                    "0"
                ],
                "amplitude": "0",
                "sigmas": [
                    "3",
                    "3"
                ],
                "normalize": "true",
                "shifts": [
                    "0",
                    "0"
                ],
                "limit": "5"
            },
            "comments": ""
        },
        "cedar.dynamics.NeuralField": {
            "name": "Belief-Node",
            "activation as output": "false",
            "discrete metric (workaround)": "false",
            "update stepIcon according to output": "true",
            "threshold for updating the stepIcon": "0.80000000000000004",
            "dimensionality": "0",
            "sizes": "",
            "time scale": "100",
            "resting level": "-0.75",
            "input noise gain": "0.10000000000000001",
            "multiplicative noise (input)": "false",
            "multiplicative noise (activation)": "false",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0",
                "beta": "100"
            },
            "global inhibition": "0",
            "lateral kernels": "",
            "lateral kernel convolution": {
                "borderType": "Zero",
                "mode": "Same",
                "engine": {
                    "type": "cedar.aux.conv.OpenCV"
                },
                "alternate even kernel center": "false"
            },
            "noise correlation kernel": {
                "dimensionality": "1",
                "anchor": [
                    "0"
                ],
                "amplitude": "0",
                "sigmas": [
                    "3"
                ],
                "normalize": "true",
                "shifts": [
                    "0"
                ],
                "limit": "5"
            },
            "comments": ""
        },
        "cedar.processing.sources.TCPReader": {
            "name": "Camera TCP Reader",
            "buffer size": "32768",
            "port": "50020",
            "packet timeout (ms)": "500",
            "message timeout (ms)": "50",
            "accept interval (steps)": "30",
            "comments": ""
        },
        "cedar.processing.steps.ChannelSplit": {
            "name": "Channel Split",
            "comments": ""
        },
        "cedar.dynamics.NeuralField": {
            "name": "CoS-Action1",
            "activation as output": "false",
            "discrete metric (workaround)": "false",
            "update stepIcon according to output": "true",
            "threshold for updating the stepIcon": "0.80000000000000004",
            "dimensionality": "0",
            "sizes": "",
            "time scale": "100",
            "resting level": "-1.75",
            "input noise gain": "0.10000000000000001",
            "multiplicative noise (input)": "false",
            "multiplicative noise (activation)": "false",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0",
                "beta": "100"
            },
            "global inhibition": "0",
            "lateral kernels": {
                "cedar.aux.kernel.Box": {
                    "dimensionality": "1",
                    "anchor": [
                        "0"
                    ],
                    "amplitude": "1",
                    "widths": [
                        "5"
                    ]
                }
            },
            "lateral kernel convolution": {
                "borderType": "Zero",
                "mode": "Same",
                "engine": {
                    "type": "cedar.aux.conv.OpenCV"
                },
                "alternate even kernel center": "false"
            },
            "noise correlation kernel": {
                "dimensionality": "1",
                "anchor": [
                    "0"
                ],
                "amplitude": "0",
                "sigmas": [
                    "3"
                ],
                "normalize": "true",
                "shifts": [
                    "0"
                ],
                "limit": "5"
            },
            "comments": ""
        },
        "cedar.dynamics.NeuralField": {
            "name": "CoS-Action2",
            "activation as output": "false",
            "discrete metric (workaround)": "false",
            "update stepIcon according to output": "true",
            "threshold for updating the stepIcon": "0.80000000000000004",
            "dimensionality": "0",
            "sizes": "",
            "time scale": "100",
            "resting level": "-1.75",
            "input noise gain": "0.10000000000000001",
            "multiplicative noise (input)": "false",
            "multiplicative noise (activation)": "false",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0",
                "beta": "100"
            },
            "global inhibition": "0",
            "lateral kernels": {
                "cedar.aux.kernel.Box": {
                    "dimensionality": "1",
                    "anchor": [
                        "0"
                    ],
                    "amplitude": "1",
                    "widths": [
                        "5"
                    ]
                }
            },
            "lateral kernel convolution": {
                "borderType": "Zero",
                "mode": "Same",
                "engine": {
                    "type": "cedar.aux.conv.OpenCV"
                },
                "alternate even kernel center": "false"
            },
            "noise correlation kernel": {
                "dimensionality": "1",
                "anchor": [
                    "0"
                ],
                "amplitude": "0",
                "sigmas": [
                    "3"
                ],
                "normalize": "true",
                "shifts": [
                    "0"
                ],
                "limit": "5"
            },
            "comments": ""
        },
        "cedar.dynamics.NeuralField": {
            "name": "CoS-Action3",
            "activation as output": "false",
            "discrete metric (workaround)": "false",
            "update stepIcon according to output": "true",
            "threshold for updating the stepIcon": "0.80000000000000004",
            "dimensionality": "0",
            "sizes": "",
            "time scale": "100",
            "resting level": "-1.75",
            "input noise gain": "0.10000000000000001",
            "multiplicative noise (input)": "false",
            "multiplicative noise (activation)": "false",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0",
                "beta": "100"
            },
            "global inhibition": "0",
            "lateral kernels": {
                "cedar.aux.kernel.Box": {
                    "dimensionality": "1",
                    "anchor": [
                        "0"
                    ],
                    "amplitude": "1",
                    "widths": [
                        "5"
                    ]
                }
            },
            "lateral kernel convolution": {
                "borderType": "Zero",
                "mode": "Same",
                "engine": {
                    "type": "cedar.aux.conv.OpenCV"
                },
                "alternate even kernel center": "false"
            },
            "noise correlation kernel": {
                "dimensionality": "1",
                "anchor": [
                    "0"
                ],
                "amplitude": "0",
                "sigmas": [
                    "3"
                ],
                "normalize": "true",
                "shifts": [
                    "0"
                ],
                "limit": "5"
            },
            "comments": ""
        },
        "cedar.dynamics.NeuralField": {
            "name": "CoS-Break",
            "activation as output": "false",
            "discrete metric (workaround)": "false",
            "update stepIcon according to output": "true",
            "threshold for updating the stepIcon": "0.80000000000000004",
            "dimensionality": "0",
            "sizes": "",
            "time scale": "100",
            "resting level": "-1.75",
            "input noise gain": "0.10000000000000001",
            "multiplicative noise (input)": "false",
            "multiplicative noise (activation)": "false",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0",
                "beta": "100"
            },
            "global inhibition": "0",
            "lateral kernels": "",
            "lateral kernel convolution": {
                "borderType": "Zero",
                "mode": "Same",
                "engine": {
                    "type": "cedar.aux.conv.OpenCV"
                },
                "alternate even kernel center": "false"
            },
            "noise correlation kernel": {
                "dimensionality": "1",
                "anchor": [
                    "0"
                ],
                "amplitude": "0",
                "sigmas": [
                    "3"
                ],
                "normalize": "true",
                "shifts": [
                    "0"
                ],
                "limit": "5"
            },
            "comments": ""
        },
        "cedar.dynamics.NeuralField": {
            "name": "CoS-Color In Attention",
            "activation as output": "false",
            "discrete metric (workaround)": "false",
            "update stepIcon according to output": "true",
            "threshold for updating the stepIcon": "0.80000000000000004",
            "dimensionality": "0",
            "sizes": "",
            "time scale": "100",
            "resting level": "-1.75",
            "input noise gain": "0.10000000000000001",
            "multiplicative noise (input)": "false",
            "multiplicative noise (activation)": "false",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0",
                "beta": "100"
            },
            "global inhibition": "0",
            "lateral kernels": "",
            "lateral kernel convolution": {
                "borderType": "Zero",
                "mode": "Same",
                "engine": {
                    "type": "cedar.aux.conv.OpenCV"
                },
                "alternate even kernel center": "false"
            },
            "noise correlation kernel": {
                "dimensionality": "1",
                "anchor": [
                    "0"
                ],
                "amplitude": "0",
                "sigmas": [
                    "3"
                ],
                "normalize": "true",
                "shifts": [
                    "0"
                ],
                "limit": "5"
            },
            "comments": ""
        },
        "cedar.dynamics.NeuralField": {
            "name": "CoS-Is In Front Of",
            "activation as output": "false",
            "discrete metric (workaround)": "false",
            "update stepIcon according to output": "true",
            "threshold for updating the stepIcon": "0.80000000000000004",
            "dimensionality": "0",
            "sizes": "",
            "time scale": "100",
            "resting level": "-1.75",
            "input noise gain": "0.10000000000000001",
            "multiplicative noise (input)": "false",
            "multiplicative noise (activation)": "false",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0",
                "beta": "100"
            },
            "global inhibition": "0",
            "lateral kernels": "",
            "lateral kernel convolution": {
                "borderType": "Zero",
                "mode": "Same",
                "engine": {
                    "type": "cedar.aux.conv.OpenCV"
                },
                "alternate even kernel center": "false"
            },
            "noise correlation kernel": {
                "dimensionality": "1",
                "anchor": [
                    "0"
                ],
                "amplitude": "0",
                "sigmas": [
                    "3"
                ],
                "normalize": "true",
                "shifts": [
                    "0"
                ],
                "limit": "5"
            },
            "comments": ""
        },
        "cedar.dynamics.NeuralField": {
            "name": "CoS-Orient To Object",
            "activation as output": "false",
            "discrete metric (workaround)": "false",
            "update stepIcon according to output": "true",
            "threshold for updating the stepIcon": "0.80000000000000004",
            "dimensionality": "0",
            "sizes": "",
            "time scale": "100",
            "resting level": "-1.75",
            "input noise gain": "0.10000000000000001",
            "multiplicative noise (input)": "false",
            "multiplicative noise (activation)": "false",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0",
                "beta": "100"
            },
            "global inhibition": "0",
            "lateral kernels": "",
            "lateral kernel convolution": {
                "borderType": "Zero",
                "mode": "Same",
                "engine": {
                    "type": "cedar.aux.conv.OpenCV"
                },
                "alternate even kernel center": "false"
            },
            "noise correlation kernel": {
                "dimensionality": "1",
                "anchor": [
                    "0"
                ],
                "amplitude": "0",
                "sigmas": [
                    "3"
                ],
                "normalize": "true",
                "shifts": [
                    "0"
                ],
                "limit": "5"
            },
            "comments": ""
        },
        "cedar.dynamics.Preshape": {
            "name": "CoS1-Trace",
            "dimensionality": "0",
            "sizes": "",
            "time scale build up": "100",
            "time scale decay": "8000",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0.5",
                "beta": "1000"
            },
            "comments": ""
        },
        "cedar.dynamics.Preshape": {
            "name": "CoS2-Trace",
            "dimensionality": "0",
            "sizes": "",
            "time scale build up": "100",
            "time scale decay": "8000",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0.5",
                "beta": "1000"
            },
            "comments": ""
        },
        "cedar.dynamics.Preshape": {
            "name": "CoS3-Trace",
            "dimensionality": "0",
            "sizes": "",
            "time scale build up": "100",
            "time scale decay": "8000",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0.5",
                "beta": "1000"
            },
            "comments": ""
        },
        "cedar.processing.steps.ColorConversion": {
            "name": "Color Conversion",
            "source type": "BGR",
            "target type": "HSV",
            "comments": ""
        },
        "cedar.dynamics.NeuralField": {
            "name": "Color-Action-Field",
            "activation as output": "false",
            "discrete metric (workaround)": "false",
            "update stepIcon according to output": "true",
            "threshold for updating the stepIcon": "0.80000000000000004",
            "dimensionality": "1",
            "sizes": [
                "50"
            ],
            "time scale": "100",
            "resting level": "-1.75",
            "input noise gain": "0.10000000000000001",
            "multiplicative noise (input)": "false",
            "multiplicative noise (activation)": "false",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0",
                "beta": "100"
            },
            "global inhibition": "-0.10000000000000001",
            "lateral kernels": {
                "cedar.aux.kernel.Gauss": {
                    "dimensionality": "1",
                    "anchor": [
                        "0"
                    ],
                    "amplitude": "1.1000000000000001",
                    "sigmas": [
                        "3"
                    ],
                    "normalize": "true",
                    "shifts": [
                        "0"
                    ],
                    "limit": "5"
                }
            },
            "lateral kernel convolution": {
                "borderType": "Cyclic",
                "mode": "Same",
                "engine": {
                    "type": "cedar.aux.conv.OpenCV"
                },
                "alternate even kernel center": "false"
            },
            "noise correlation kernel": {
                "dimensionality": "1",
                "anchor": [
                    "0"
                ],
                "amplitude": "0",
                "sigmas": [
                    "3"
                ],
                "normalize": "true",
                "shifts": [
                    "0"
                ],
                "limit": "5"
            },
            "comments": ""
        },
        "cedar.dynamics.NeuralField": {
            "name": "Color-Attention-Field",
            "activation as output": "false",
            "discrete metric (workaround)": "false",
            "update stepIcon according to output": "true",
            "threshold for updating the stepIcon": "0.80000000000000004",
            "dimensionality": "1",
            "sizes": [
                "50"
            ],
            "time scale": "100",
            "resting level": "-2.0750000000000002",
            "input noise gain": "0.10000000000000001",
            "multiplicative noise (input)": "false",
            "multiplicative noise (activation)": "false",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0",
                "beta": "100"
            },
            "global inhibition": "-0.2400000000000001",
            "lateral kernels": {
                "cedar.aux.kernel.Gauss": {
                    "dimensionality": "1",
                    "anchor": [
                        "0"
                    ],
                    "amplitude": "1.1000000000000001",
                    "sigmas": [
                        "0.01"
                    ],
                    "normalize": "true",
                    "shifts": [
                        "0"
                    ],
                    "limit": "5"
                },
                "cedar.aux.kernel.Gauss": {
                    "dimensionality": "1",
                    "anchor": [
                        "0"
                    ],
                    "amplitude": "-6",
                    "sigmas": [
                        "10"
                    ],
                    "normalize": "true",
                    "shifts": [
                        "0"
                    ],
                    "limit": "5"
                }
            },
            "lateral kernel convolution": {
                "borderType": "Cyclic",
                "mode": "Same",
                "engine": {
                    "type": "cedar.aux.conv.OpenCV"
                },
                "alternate even kernel center": "false"
            },
            "noise correlation kernel": {
                "dimensionality": "1",
                "anchor": [
                    "0"
                ],
                "amplitude": "0",
                "sigmas": [
                    "3"
                ],
                "normalize": "true",
                "shifts": [
                    "0"
                ],
                "limit": "5"
            },
            "comments": ""
        },
        "cedar.dynamics.NeuralField": {
            "name": "Color-Change-Detection",
            "activation as output": "false",
            "discrete metric (workaround)": "false",
            "update stepIcon according to output": "true",
            "threshold for updating the stepIcon": "0.80000000000000004",
            "dimensionality": "1",
            "sizes": [
                "50"
            ],
            "time scale": "100",
            "resting level": "-0.75",
            "input noise gain": "0.10000000000000001",
            "multiplicative noise (input)": "false",
            "multiplicative noise (activation)": "false",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0",
                "beta": "100"
            },
            "global inhibition": "0",
            "lateral kernels": "",
            "lateral kernel convolution": {
                "borderType": "Cyclic",
                "mode": "Same",
                "engine": {
                    "type": "cedar.aux.conv.OpenCV"
                },
                "alternate even kernel center": "false"
            },
            "noise correlation kernel": {
                "dimensionality": "1",
                "anchor": [
                    "0"
                ],
                "amplitude": "0",
                "sigmas": [
                    "3"
                ],
                "normalize": "true",
                "shifts": [
                    "0"
                ],
                "limit": "5"
            },
            "comments": ""
        },
        "cedar.dynamics.Preshape": {
            "name": "Color-Memory-Trace",
            "dimensionality": "1",
            "sizes": [
                "50"
            ],
            "time scale build up": "4000",
            "time scale decay": "1000",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0.5",
                "beta": "1000"
            },
            "comments": ""
        },
        "cedar.dynamics.NeuralField": {
            "name": "Color-Space-Perception",
            "activation as output": "false",
            "discrete metric (workaround)": "false",
            "update stepIcon according to output": "true",
            "threshold for updating the stepIcon": "0.80000000000000004",
            "dimensionality": "2",
            "sizes": [
                "50",
                "52"
            ],
            "time scale": "100",
            "resting level": "-0.75",
            "input noise gain": "0.10000000000000001",
            "multiplicative noise (input)": "false",
            "multiplicative noise (activation)": "false",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0",
                "beta": "100"
            },
            "global inhibition": "-0.0099999999999999967",
            "lateral kernels": {
                "cedar.aux.kernel.Gauss": {
                    "dimensionality": "2",
                    "anchor": [
                        "0",
                        "0"
                    ],
                    "amplitude": "1",
                    "sigmas": [
                        "3",
                        "3"
                    ],
                    "normalize": "true",
                    "shifts": [
                        "0",
                        "0"
                    ],
                    "limit": "5"
                }
            },
            "lateral kernel convolution": {
                "borderType": "Cyclic",
                "mode": "Same",
                "engine": {
                    "type": "cedar.aux.conv.OpenCV"
                },
                "alternate even kernel center": "false"
            },
            "noise correlation kernel": {
                "dimensionality": "2",
                "anchor": [
                    "0",
                    "0"
                ],
                "amplitude": "0",
                "sigmas": [
                    "3",
                    "3"
                ],
                "normalize": "true",
                "shifts": [
                    "0",
                    "0"
                ],
                "limit": "5"
            },
            "comments": ""
        },
        "cedar.dynamics.NeuralField": {
            "name": "Color-matching-Field",
            "activation as output": "false",
            "discrete metric (workaround)": "false",
            "update stepIcon according to output": "true",
            "threshold for updating the stepIcon": "0.80000000000000004",
            "dimensionality": "1",
            "sizes": [
                "50"
            ],
            "time scale": "100",
            "resting level": "-1.75",
            "input noise gain": "0.10000000000000001",
            "multiplicative noise (input)": "false",
            "multiplicative noise (activation)": "false",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0",
                "beta": "100"
            },
            "global inhibition": "0",
            "lateral kernels": "",
            "lateral kernel convolution": {
                "borderType": "Cyclic",
                "mode": "Same",
                "engine": {
                    "type": "cedar.aux.conv.OpenCV"
                },
                "alternate even kernel center": "false"
            },
            "noise correlation kernel": {
                "dimensionality": "1",
                "anchor": [
                    "0"
                ],
                "amplitude": "0",
                "sigmas": [
                    "3"
                ],
                "normalize": "true",
                "shifts": [
                    "0"
                ],
                "limit": "5"
            },
            "comments": ""
        },
        "cedar.processing.steps.Convolution": {
            "name": "Convolution",
            "kernels": "",
            "convolution": {
                "borderType": "Cyclic",
                "mode": "Same",
                "engine": {
                    "type": "cedar.aux.conv.FFTW"
                },
                "alternate even kernel center": "false"
            },
            "comments": ""
        },
        "cedar.processing.steps.Convolution": {
            "name": "Convolution 2",
            "kernels": "",
            "convolution": {
                "borderType": "Zero",
                "mode": "Same",
                "engine": {
                    "type": "cedar.aux.conv.OpenCV"
                },
                "alternate even kernel center": "false"
            },
            "comments": ""
        },
        "cedar.processing.sources.GaussInput": {
            "name": "Distance-Matching-Field",
            "dimensionality": "1",
            "sizes": [
                "52"
            ],
            "amplitude": "0.029999999999999999",
            "centers": [
                "26"
            ],
            "sigma": [
                "12"
            ],
            "cyclic": "false",
            "comments": ""
        },
        "cedar.dynamics.NeuralField": {
            "name": "Distance-matching-Field",
            "activation as output": "false",
            "discrete metric (workaround)": "false",
            "update stepIcon according to output": "true",
            "threshold for updating the stepIcon": "0.80000000000000004",
            "dimensionality": "1",
            "sizes": [
                "52"
            ],
            "time scale": "100",
            "resting level": "-0.75",
            "input noise gain": "0.10000000000000001",
            "multiplicative noise (input)": "false",
            "multiplicative noise (activation)": "false",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0",
                "beta": "100"
            },
            "global inhibition": "-0.01",
            "lateral kernels": {
                "cedar.aux.kernel.Gauss": {
                    "dimensionality": "1",
                    "anchor": [
                        "0"
                    ],
                    "amplitude": "1",
                    "sigmas": [
                        "3"
                    ],
                    "normalize": "true",
                    "shifts": [
                        "0"
                    ],
                    "limit": "5"
                }
            },
            "lateral kernel convolution": {
                "borderType": "Zero",
                "mode": "Same",
                "engine": {
                    "type": "cedar.aux.conv.OpenCV"
                },
                "alternate even kernel center": "false"
            },
            "noise correlation kernel": {
                "dimensionality": "1",
                "anchor": [
                    "0"
                ],
                "amplitude": "0",
                "sigmas": [
                    "3"
                ],
                "normalize": "true",
                "shifts": [
                    "0"
                ],
                "limit": "5"
            },
            "comments": ""
        },
        "cedar.processing.sources.Boost": {
            "name": "Exploration-Boost",
            "strength": "6",
            "active": "false",
            "deactivate on reset": "false",
            "comments": ""
        },
        "cedar.dynamics.NeuralField": {
            "name": "Exploration-Goal-Node",
            "activation as output": "false",
            "discrete metric (workaround)": "false",
            "update stepIcon according to output": "true",
            "threshold for updating the stepIcon": "0.80000000000000004",
            "dimensionality": "0",
            "sizes": "",
            "time scale": "100",
            "resting level": "-5",
            "input noise gain": "0.10000000000000001",
            "multiplicative noise (input)": "false",
            "multiplicative noise (activation)": "false",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0",
                "beta": "100"
            },
            "global inhibition": "0",
            "lateral kernels": "",
            "lateral kernel convolution": {
                "borderType": "Zero",
                "mode": "Same",
                "engine": {
                    "type": "cedar.aux.conv.OpenCV"
                },
                "alternate even kernel center": "false"
            },
            "noise correlation kernel": {
                "dimensionality": "1",
                "anchor": [
                    "0"
                ],
                "amplitude": "0",
                "sigmas": [
                    "3"
                ],
                "normalize": "true",
                "shifts": [
                    "0"
                ],
                "limit": "5"
            },
            "comments": ""
        },
        "cedar.processing.sources.GaussInput": {
            "name": "Goal-Boost",
            "dimensionality": "1",
            "sizes": [
                "10"
            ],
            "amplitude": "1",
            "centers": [
                "5"
            ],
            "sigma": [
                "1"
            ],
            "cyclic": "false",
            "comments": ""
        },
        "cedar.processing.sources.Boost": {
            "name": "Goal-Directed-Mode",
            "strength": "5",
            "active": "false",
            "deactivate on reset": "false",
            "comments": ""
        },
        "cedar.processing.steps.HopfOscillatorRHS": {
            "name": "Hopf Oscillator RHS",
            "bank size": "1",
            "bank omega": "1",
            "bank alpha": "1",
            "bank gamma": "0.99999999999999989",
            "initialize on reset": "true",
            "shift u by radius fraction": "-0.0001",
            "comments": ""
        },
        "cedar.processing.steps.HopfOscillatorRHS": {
            "name": "Hopf Oscillator RHS 2",
            "bank size": "1",
            "bank omega": "1",
            "bank alpha": "1",
            "bank gamma": "0.99999999999999989",
            "initialize on reset": "true",
            "shift u by radius fraction": "-0.0001",
            "comments": ""
        },
        "cedar.processing.steps.HopfOscillatorRHS": {
            "name": "Hopf Oscillator RHS 3",
            "bank size": "1",
            "bank omega": "1",
            "bank alpha": "1",
            "bank gamma": "1.0000000000000002",
            "initialize on reset": "true",
            "shift u by radius fraction": "-0.0001",
            "comments": ""
        },
        "cedar.dynamics.NeuralField": {
            "name": "Intention In Action-Action1",
            "activation as output": "false",
            "discrete metric (workaround)": "false",
            "update stepIcon according to output": "true",
            "threshold for updating the stepIcon": "0.80000000000000004",
            "dimensionality": "0",
            "sizes": "",
            "time scale": "100",
            "resting level": "-0.75",
            "input noise gain": "0.10000000000000001",
            "multiplicative noise (input)": "false",
            "multiplicative noise (activation)": "false",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0",
                "beta": "100"
            },
            "global inhibition": "0",
            "lateral kernels": "",
            "lateral kernel convolution": {
                "borderType": "Zero",
                "mode": "Same",
                "engine": {
                    "type": "cedar.aux.conv.OpenCV"
                },
                "alternate even kernel center": "false"
            },
            "noise correlation kernel": {
                "dimensionality": "1",
                "anchor": [
                    "0"
                ],
                "amplitude": "0",
                "sigmas": [
                    "3"
                ],
                "normalize": "true",
                "shifts": [
                    "0"
                ],
                "limit": "5"
            },
            "comments": ""
        },
        "cedar.dynamics.NeuralField": {
            "name": "Intention In Action-Action2",
            "activation as output": "false",
            "discrete metric (workaround)": "false",
            "update stepIcon according to output": "true",
            "threshold for updating the stepIcon": "0.80000000000000004",
            "dimensionality": "0",
            "sizes": "",
            "time scale": "100",
            "resting level": "-0.75",
            "input noise gain": "0.10000000000000001",
            "multiplicative noise (input)": "false",
            "multiplicative noise (activation)": "false",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0",
                "beta": "100"
            },
            "global inhibition": "0",
            "lateral kernels": "",
            "lateral kernel convolution": {
                "borderType": "Zero",
                "mode": "Same",
                "engine": {
                    "type": "cedar.aux.conv.OpenCV"
                },
                "alternate even kernel center": "false"
            },
            "noise correlation kernel": {
                "dimensionality": "1",
                "anchor": [
                    "0"
                ],
                "amplitude": "0",
                "sigmas": [
                    "3"
                ],
                "normalize": "true",
                "shifts": [
                    "0"
                ],
                "limit": "5"
            },
            "comments": ""
        },
        "cedar.dynamics.NeuralField": {
            "name": "Intention In Action-Break",
            "activation as output": "false",
            "discrete metric (workaround)": "false",
            "update stepIcon according to output": "true",
            "threshold for updating the stepIcon": "0.80000000000000004",
            "dimensionality": "0",
            "sizes": "",
            "time scale": "100",
            "resting level": "-0.75",
            "input noise gain": "0.10000000000000001",
            "multiplicative noise (input)": "false",
            "multiplicative noise (activation)": "false",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0",
                "beta": "100"
            },
            "global inhibition": "0",
            "lateral kernels": "",
            "lateral kernel convolution": {
                "borderType": "Zero",
                "mode": "Same",
                "engine": {
                    "type": "cedar.aux.conv.OpenCV"
                },
                "alternate even kernel center": "false"
            },
            "noise correlation kernel": {
                "dimensionality": "1",
                "anchor": [
                    "0"
                ],
                "amplitude": "0",
                "sigmas": [
                    "3"
                ],
                "normalize": "true",
                "shifts": [
                    "0"
                ],
                "limit": "5"
            },
            "comments": ""
        },
        "cedar.dynamics.NeuralField": {
            "name": "Intention In Action-Orient To Object",
            "activation as output": "false",
            "discrete metric (workaround)": "false",
            "update stepIcon according to output": "true",
            "threshold for updating the stepIcon": "0.80000000000000004",
            "dimensionality": "0",
            "sizes": "",
            "time scale": "100",
            "resting level": "-0.75",
            "input noise gain": "0.10000000000000001",
            "multiplicative noise (input)": "false",
            "multiplicative noise (activation)": "false",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0",
                "beta": "100"
            },
            "global inhibition": "0",
            "lateral kernels": "",
            "lateral kernel convolution": {
                "borderType": "Zero",
                "mode": "Same",
                "engine": {
                    "type": "cedar.aux.conv.OpenCV"
                },
                "alternate even kernel center": "false"
            },
            "noise correlation kernel": {
                "dimensionality": "1",
                "anchor": [
                    "0"
                ],
                "amplitude": "0",
                "sigmas": [
                    "3"
                ],
                "normalize": "true",
                "shifts": [
                    "0"
                ],
                "limit": "5"
            },
            "comments": ""
        },
        "cedar.dynamics.NeuralField": {
            "name": "Intention-In-Action-Node6",
            "activation as output": "false",
            "discrete metric (workaround)": "false",
            "update stepIcon according to output": "true",
            "threshold for updating the stepIcon": "0.80000000000000004",
            "dimensionality": "0",
            "sizes": "",
            "time scale": "100",
            "resting level": "-0.75",
            "input noise gain": "0.10000000000000001",
            "multiplicative noise (input)": "false",
            "multiplicative noise (activation)": "false",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0",
                "beta": "100"
            },
            "global inhibition": "0",
            "lateral kernels": "",
            "lateral kernel convolution": {
                "borderType": "Zero",
                "mode": "Same",
                "engine": {
                    "type": "cedar.aux.conv.OpenCV"
                },
                "alternate even kernel center": "false"
            },
            "noise correlation kernel": {
                "dimensionality": "1",
                "anchor": [
                    "0"
                ],
                "amplitude": "0",
                "sigmas": [
                    "3"
                ],
                "normalize": "true",
                "shifts": [
                    "0"
                ],
                "limit": "5"
            },
            "comments": ""
        },
        "cedar.processing.steps.MatrixTypeConverter": {
            "name": "Matrix Type Converter",
            "target type": "Float",
            "comments": ""
        },
        "cedar.processing.sources.TCPReader": {
            "name": "Microphone TCP Reader",
            "buffer size": "32768",
            "port": "50021",
            "packet timeout (ms)": "500",
            "message timeout (ms)": "50",
            "accept interval (steps)": "30",
            "comments": ""
        },
        "cedar.dynamics.NeuralField": {
            "name": "Motor-Attractor",
            "activation as output": "false",
            "discrete metric (workaround)": "false",
            "update stepIcon according to output": "true",
            "threshold for updating the stepIcon": "0.80000000000000004",
            "dimensionality": "1",
            "sizes": [
                "52"
            ],
            "time scale": "100",
            "resting level": "-1.75",
            "input noise gain": "0.10000000000000001",
            "multiplicative noise (input)": "false",
            "multiplicative noise (activation)": "false",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0",
                "beta": "100"
            },
            "global inhibition": "-0.01",
            "lateral kernels": "",
            "lateral kernel convolution": {
                "borderType": "Zero",
                "mode": "Same",
                "engine": {
                    "type": "cedar.aux.conv.OpenCV"
                },
                "alternate even kernel center": "false"
            },
            "noise correlation kernel": {
                "dimensionality": "1",
                "anchor": [
                    "0"
                ],
                "amplitude": "0",
                "sigmas": [
                    "3"
                ],
                "normalize": "true",
                "shifts": [
                    "0"
                ],
                "limit": "5"
            },
            "comments": ""
        },
        "cedar.processing.Norm": {
            "name": "Norm",
            "comments": ""
        },
        "cedar.processing.Norm": {
            "name": "Norm 2",
            "comments": ""
        },
        "cedar.processing.Norm": {
            "name": "Norm 3",
            "comments": ""
        },
        "cedar.processing.steps.NumericalIntegration": {
            "name": "Numerical Integration",
            "initialize on reset": "true",
            "use BDF5": "false",
            "comments": ""
        },
        "cedar.processing.steps.NumericalIntegration": {
            "name": "Numerical Integration 2",
            "initialize on reset": "true",
            "use BDF5": "false",
            "comments": ""
        },
        "cedar.processing.steps.NumericalIntegration": {
            "name": "Numerical Integration 3",
            "initialize on reset": "true",
            "use BDF5": "false",
            "comments": ""
        },
        "cedar.dynamics.NeuralField": {
            "name": "Precondition-Break In Front Of Object",
            "activation as output": "false",
            "discrete metric (workaround)": "false",
            "update stepIcon according to output": "true",
            "threshold for updating the stepIcon": "0.80000000000000004",
            "dimensionality": "0",
            "sizes": "",
            "time scale": "100",
            "resting level": "-0.75",
            "input noise gain": "0.10000000000000001",
            "multiplicative noise (input)": "false",
            "multiplicative noise (activation)": "false",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0",
                "beta": "100"
            },
            "global inhibition": "0",
            "lateral kernels": "",
            "lateral kernel convolution": {
                "borderType": "Zero",
                "mode": "Same",
                "engine": {
                    "type": "cedar.aux.conv.OpenCV"
                },
                "alternate even kernel center": "false"
            },
            "noise correlation kernel": {
                "dimensionality": "1",
                "anchor": [
                    "0"
                ],
                "amplitude": "0",
                "sigmas": [
                    "3"
                ],
                "normalize": "true",
                "shifts": [
                    "0"
                ],
                "limit": "5"
            },
            "comments": ""
        },
        "cedar.dynamics.NeuralField": {
            "name": "Precondition-Color In Attention",
            "activation as output": "false",
            "discrete metric (workaround)": "false",
            "update stepIcon according to output": "true",
            "threshold for updating the stepIcon": "0.80000000000000004",
            "dimensionality": "0",
            "sizes": "",
            "time scale": "100",
            "resting level": "-0.75",
            "input noise gain": "0.10000000000000001",
            "multiplicative noise (input)": "false",
            "multiplicative noise (activation)": "false",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0",
                "beta": "100"
            },
            "global inhibition": "0",
            "lateral kernels": "",
            "lateral kernel convolution": {
                "borderType": "Zero",
                "mode": "Same",
                "engine": {
                    "type": "cedar.aux.conv.OpenCV"
                },
                "alternate even kernel center": "false"
            },
            "noise correlation kernel": {
                "dimensionality": "1",
                "anchor": [
                    "0"
                ],
                "amplitude": "0",
                "sigmas": [
                    "3"
                ],
                "normalize": "true",
                "shifts": [
                    "0"
                ],
                "limit": "5"
            },
            "comments": ""
        },
        "cedar.dynamics.NeuralField": {
            "name": "Precondition-Is In Front Of",
            "activation as output": "false",
            "discrete metric (workaround)": "false",
            "update stepIcon according to output": "true",
            "threshold for updating the stepIcon": "0.80000000000000004",
            "dimensionality": "0",
            "sizes": "",
            "time scale": "100",
            "resting level": "-0.75",
            "input noise gain": "0.10000000000000001",
            "multiplicative noise (input)": "false",
            "multiplicative noise (activation)": "false",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0",
                "beta": "100"
            },
            "global inhibition": "0",
            "lateral kernels": "",
            "lateral kernel convolution": {
                "borderType": "Zero",
                "mode": "Same",
                "engine": {
                    "type": "cedar.aux.conv.OpenCV"
                },
                "alternate even kernel center": "false"
            },
            "noise correlation kernel": {
                "dimensionality": "1",
                "anchor": [
                    "0"
                ],
                "amplitude": "0",
                "sigmas": [
                    "3"
                ],
                "normalize": "true",
                "shifts": [
                    "0"
                ],
                "limit": "5"
            },
            "comments": ""
        },
        "cedar.dynamics.NeuralField": {
            "name": "Precondition-Oriented To Object",
            "activation as output": "false",
            "discrete metric (workaround)": "false",
            "update stepIcon according to output": "true",
            "threshold for updating the stepIcon": "0.80000000000000004",
            "dimensionality": "0",
            "sizes": "",
            "time scale": "100",
            "resting level": "-0.75",
            "input noise gain": "0.10000000000000001",
            "multiplicative noise (input)": "false",
            "multiplicative noise (activation)": "false",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0",
                "beta": "100"
            },
            "global inhibition": "0",
            "lateral kernels": "",
            "lateral kernel convolution": {
                "borderType": "Zero",
                "mode": "Same",
                "engine": {
                    "type": "cedar.aux.conv.OpenCV"
                },
                "alternate even kernel center": "false"
            },
            "noise correlation kernel": {
                "dimensionality": "1",
                "anchor": [
                    "0"
                ],
                "amplitude": "0",
                "sigmas": [
                    "3"
                ],
                "normalize": "true",
                "shifts": [
                    "0"
                ],
                "limit": "5"
            },
            "comments": ""
        },
        "cedar.processing.Projection": {
            "name": "Projection",
            "dimension mapping": {
                "0": "4294967295",
                "1": "1",
                "2": "0"
            },
            "output dimensionality": "2",
            "output dimension sizes": [
                "50",
                "52"
            ],
            "compression type": "SUM",
            "comments": ""
        },
        "cedar.processing.Projection": {
            "name": "Projection 10",
            "dimension mapping": {
                "0": "4294967295"
            },
            "output dimensionality": "0",
            "output dimension sizes": "",
            "compression type": "MAXIMUM",
            "comments": ""
        },
        "cedar.processing.Projection": {
            "name": "Projection 2",
            "dimension mapping": {
                "0": "0",
                "1": "4294967295"
            },
            "output dimensionality": "1",
            "output dimension sizes": [
                "50"
            ],
            "compression type": "AVERAGE",
            "comments": ""
        },
        "cedar.processing.Projection": {
            "name": "Projection 3",
            "dimension mapping": {
                "0": "4294967295"
            },
            "output dimensionality": "0",
            "output dimension sizes": "",
            "compression type": "MAXIMUM",
            "comments": ""
        },
        "cedar.processing.Projection": {
            "name": "Projection 4",
            "dimension mapping": {
                "0": "4294967295"
            },
            "output dimensionality": "0",
            "output dimension sizes": "",
            "compression type": "MAXIMUM",
            "comments": ""
        },
        "cedar.processing.Projection": {
            "name": "Projection 5",
            "dimension mapping": {
                "0": "4294967295"
            },
            "output dimensionality": "0",
            "output dimension sizes": "",
            "compression type": "MAXIMUM",
            "comments": ""
        },
        "cedar.processing.Projection": {
            "name": "Projection 6",
            "dimension mapping": {
                "0": "4294967295"
            },
            "output dimensionality": "0",
            "output dimension sizes": "",
            "compression type": "MAXIMUM",
            "comments": ""
        },
        "cedar.processing.Projection": {
            "name": "Projection 7",
            "dimension mapping": {
                "0": "0"
            },
            "output dimensionality": "2",
            "output dimension sizes": [
                "50",
                "52"
            ],
            "compression type": "MAXIMUM",
            "comments": ""
        },
        "cedar.processing.Projection": {
            "name": "Projection 8",
            "dimension mapping": {
                "0": "4294967295",
                "1": "0"
            },
            "output dimensionality": "1",
            "output dimension sizes": [
                "52"
            ],
            "compression type": "MAXIMUM",
            "comments": ""
        },
        "cedar.processing.Projection": {
            "name": "Projection 9",
            "dimension mapping": {
                "0": "4294967295"
            },
            "output dimensionality": "0",
            "output dimension sizes": "",
            "compression type": "MAXIMUM",
            "comments": ""
        },
        "cedar.dynamics.RateMatrixToSpaceCode": {
            "name": "Rate Matrix To Space Code",
            "number of bins": "50",
            "lower limit": "0",
            "upper limit": "255",
            "comments": ""
        },
        "cedar.processing.ScalarsToVector": {
            "name": "Scalars To Vector",
            "number of vector entries": "3",
            "comments": ""
        },
        "cedar.processing.ScalarsToVector": {
            "name": "Scalars To Vector 2",
            "number of vector entries": "5",
            "comments": ""
        },
        "cedar.processing.ScalarsToVector": {
            "name": "Scalars To Vector 3",
            "number of vector entries": "5",
            "comments": ""
        },
        "cedar.processing.ScalarsToVector": {
            "name": "Scalars To Vector 4",
            "number of vector entries": "5",
            "comments": ""
        },
        "cedar.processing.ScalarsToVector": {
            "name": "Scalars To Vector 5",
            "number of vector entries": "5",
            "comments": ""
        },
        "cedar.processing.ScalarsToVector": {
            "name": "Scalars To Vector 6",
            "number of vector entries": "5",
            "comments": ""
        },
        "cedar.dynamics.NeuralField": {
            "name": "Sound-Action-Field",
            "activation as output": "false",
            "discrete metric (workaround)": "false",
            "update stepIcon according to output": "true",
            "threshold for updating the stepIcon": "0.80000000000000004",
            "dimensionality": "1",
            "sizes": [
                "10"
            ],
            "time scale": "100",
            "resting level": "-1.75",
            "input noise gain": "0.10000000000000001",
            "multiplicative noise (input)": "false",
            "multiplicative noise (activation)": "false",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0",
                "beta": "100"
            },
            "global inhibition": "-1",
            "lateral kernels": {
                "cedar.aux.kernel.Gauss": {
                    "dimensionality": "1",
                    "anchor": [
                        "0"
                    ],
                    "amplitude": "1.1000000000000001",
                    "sigmas": [
                        "1"
                    ],
                    "normalize": "true",
                    "shifts": [
                        "0"
                    ],
                    "limit": "5"
                }
            },
            "lateral kernel convolution": {
                "borderType": "Zero",
                "mode": "Same",
                "engine": {
                    "type": "cedar.aux.conv.OpenCV"
                },
                "alternate even kernel center": "false"
            },
            "noise correlation kernel": {
                "dimensionality": "1",
                "anchor": [
                    "0"
                ],
                "amplitude": "0",
                "sigmas": [
                    "3"
                ],
                "normalize": "true",
                "shifts": [
                    "0"
                ],
                "limit": "5"
            },
            "comments": ""
        },
        "cedar.dynamics.NeuralField": {
            "name": "Sound-Attention-Field",
            "activation as output": "false",
            "discrete metric (workaround)": "false",
            "update stepIcon according to output": "true",
            "threshold for updating the stepIcon": "0.80000000000000004",
            "dimensionality": "1",
            "sizes": [
                "10"
            ],
            "time scale": "100",
            "resting level": "-2.75",
            "input noise gain": "0.10000000000000001",
            "multiplicative noise (input)": "false",
            "multiplicative noise (activation)": "false",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0",
                "beta": "100"
            },
            "global inhibition": "-1.0000000000000007",
            "lateral kernels": {
                "cedar.aux.kernel.Gauss": {
                    "dimensionality": "1",
                    "anchor": [
                        "0"
                    ],
                    "amplitude": "1.1000000000000001",
                    "sigmas": [
                        "1"
                    ],
                    "normalize": "true",
                    "shifts": [
                        "0"
                    ],
                    "limit": "5"
                }
            },
            "lateral kernel convolution": {
                "borderType": "Zero",
                "mode": "Same",
                "engine": {
                    "type": "cedar.aux.conv.OpenCV"
                },
                "alternate even kernel center": "false"
            },
            "noise correlation kernel": {
                "dimensionality": "1",
                "anchor": [
                    "0"
                ],
                "amplitude": "0",
                "sigmas": [
                    "3"
                ],
                "normalize": "true",
                "shifts": [
                    "0"
                ],
                "limit": "5"
            },
            "comments": ""
        },
        "cedar.dynamics.NeuralField": {
            "name": "Sound-Change-Detection",
            "activation as output": "false",
            "discrete metric (workaround)": "false",
            "update stepIcon according to output": "true",
            "threshold for updating the stepIcon": "0.80000000000000004",
            "dimensionality": "1",
            "sizes": [
                "10"
            ],
            "time scale": "100",
            "resting level": "-0.75",
            "input noise gain": "0.10000000000000001",
            "multiplicative noise (input)": "false",
            "multiplicative noise (activation)": "false",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0",
                "beta": "100"
            },
            "global inhibition": "0",
            "lateral kernels": "",
            "lateral kernel convolution": {
                "borderType": "Zero",
                "mode": "Same",
                "engine": {
                    "type": "cedar.aux.conv.OpenCV"
                },
                "alternate even kernel center": "false"
            },
            "noise correlation kernel": {
                "dimensionality": "1",
                "anchor": [
                    "0"
                ],
                "amplitude": "0",
                "sigmas": [
                    "3"
                ],
                "normalize": "true",
                "shifts": [
                    "0"
                ],
                "limit": "5"
            },
            "comments": ""
        },
        "cedar.dynamics.NeuralField": {
            "name": "Sound-Goal-Field",
            "activation as output": "false",
            "discrete metric (workaround)": "false",
            "update stepIcon according to output": "true",
            "threshold for updating the stepIcon": "0.80000000000000004",
            "dimensionality": "1",
            "sizes": [
                "10"
            ],
            "time scale": "100",
            "resting level": "-5",
            "input noise gain": "0.10000000000000001",
            "multiplicative noise (input)": "false",
            "multiplicative noise (activation)": "false",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0",
                "beta": "100"
            },
            "global inhibition": "-0.01",
            "lateral kernels": "",
            "lateral kernel convolution": {
                "borderType": "Zero",
                "mode": "Same",
                "engine": {
                    "type": "cedar.aux.conv.OpenCV"
                },
                "alternate even kernel center": "false"
            },
            "noise correlation kernel": {
                "dimensionality": "1",
                "anchor": [
                    "0"
                ],
                "amplitude": "0",
                "sigmas": [
                    "3"
                ],
                "normalize": "true",
                "shifts": [
                    "0"
                ],
                "limit": "5"
            },
            "comments": ""
        },
        "cedar.dynamics.Preshape": {
            "name": "Sound-Memory-Trace",
            "dimensionality": "1",
            "sizes": [
                "10"
            ],
            "time scale build up": "4000",
            "time scale decay": "1000",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0.5",
                "beta": "1000"
            },
            "comments": ""
        },
        "cedar.dynamics.NeuralField": {
            "name": "Sound-Perception",
            "activation as output": "false",
            "discrete metric (workaround)": "false",
            "update stepIcon according to output": "true",
            "threshold for updating the stepIcon": "0.80000000000000004",
            "dimensionality": "1",
            "sizes": [
                "10"
            ],
            "time scale": "100",
            "resting level": "-0.75",
            "input noise gain": "0.10000000000000001",
            "multiplicative noise (input)": "false",
            "multiplicative noise (activation)": "false",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0",
                "beta": "100"
            },
            "global inhibition": "-0.01",
            "lateral kernels": {
                "cedar.aux.kernel.Gauss": {
                    "dimensionality": "1",
                    "anchor": [
                        "0"
                    ],
                    "amplitude": "1",
                    "sigmas": [
                        "1"
                    ],
                    "normalize": "true",
                    "shifts": [
                        "0"
                    ],
                    "limit": "5"
                }
            },
            "lateral kernel convolution": {
                "borderType": "Zero",
                "mode": "Same",
                "engine": {
                    "type": "cedar.aux.conv.OpenCV"
                },
                "alternate even kernel center": "false"
            },
            "noise correlation kernel": {
                "dimensionality": "1",
                "anchor": [
                    "0"
                ],
                "amplitude": "0",
                "sigmas": [
                    "3"
                ],
                "normalize": "true",
                "shifts": [
                    "0"
                ],
                "limit": "5"
            },
            "comments": ""
        },
        "cedar.dynamics.SpaceToRateCode": {
            "name": "Space To Rate Code",
            "tau": "0.1 s",
            "lowerLimit": "0",
            "upperLimit": "52",
            "jump to fixed point": "false",
            "use cyclic mean": "false",
            "comments": ""
        },
        "cedar.processing.sources.GaussInput": {
            "name": "Space-Action-Field",
            "dimensionality": "1",
            "sizes": [
                "52"
            ],
            "amplitude": "1",
            "centers": [
                "26"
            ],
            "sigma": [
                "2"
            ],
            "cyclic": "false",
            "comments": ""
        },
        "cedar.dynamics.NeuralField": {
            "name": "Space-Attention-Field",
            "activation as output": "false",
            "discrete metric (workaround)": "false",
            "update stepIcon according to output": "true",
            "threshold for updating the stepIcon": "0.80000000000000004",
            "dimensionality": "1",
            "sizes": [
                "52"
            ],
            "time scale": "100",
            "resting level": "-0.75",
            "input noise gain": "0.10000000000000001",
            "multiplicative noise (input)": "false",
            "multiplicative noise (activation)": "false",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0",
                "beta": "100"
            },
            "global inhibition": "0",
            "lateral kernels": "",
            "lateral kernel convolution": {
                "borderType": "Zero",
                "mode": "Same",
                "engine": {
                    "type": "cedar.aux.conv.OpenCV"
                },
                "alternate even kernel center": "false"
            },
            "noise correlation kernel": {
                "dimensionality": "1",
                "anchor": [
                    "0"
                ],
                "amplitude": "0",
                "sigmas": [
                    "3"
                ],
                "normalize": "true",
                "shifts": [
                    "0"
                ],
                "limit": "5"
            },
            "comments": ""
        },
        "cedar.dynamics.NeuralField": {
            "name": "Space-matching-Field",
            "activation as output": "false",
            "discrete metric (workaround)": "false",
            "update stepIcon according to output": "true",
            "threshold for updating the stepIcon": "0.80000000000000004",
            "dimensionality": "1",
            "sizes": [
                "52"
            ],
            "time scale": "100",
            "resting level": "-1.75",
            "input noise gain": "0.10000000000000001",
            "multiplicative noise (input)": "false",
            "multiplicative noise (activation)": "false",
            "sigmoid": {
                "type": "cedar.aux.math.AbsSigmoid",
                "threshold": "0",
                "beta": "100"
            },
            "global inhibition": "0",
            "lateral kernels": "",
            "lateral kernel convolution": {
                "borderType": "Zero",
                "mode": "Same",
                "engine": {
                    "type": "cedar.aux.conv.OpenCV"
                },
                "alternate even kernel center": "false"
            },
            "noise correlation kernel": {
                "dimensionality": "1",
                "anchor": [
                    "0"
                ],
                "amplitude": "0",
                "sigmas": [
                    "3"
                ],
                "normalize": "true",
                "shifts": [
                    "0"
                ],
                "limit": "5"
            },
            "comments": ""
        },
        "cedar.processing.StaticGain": {
            "name": "Static Gain",
            "gain factor": "0.002",
            "comments": ""
        },
        "cedar.processing.StaticGain": {
            "name": "Static Gain 10",
            "gain factor": "-1",
            "comments": ""
        },
        "cedar.processing.StaticGain": {
            "name": "Static Gain 11",
            "gain factor": "-1",
            "comments": ""
        },
        "cedar.processing.StaticGain": {
            "name": "Static Gain 12",
            "gain factor": "-1",
            "comments": ""
        },
        "cedar.processing.StaticGain": {
            "name": "Static Gain 13",
            "gain factor": "-1",
            "comments": ""
        },
        "cedar.processing.StaticGain": {
            "name": "Static Gain 14",
            "gain factor": "-1",
            "comments": ""
        },
        "cedar.processing.StaticGain": {
            "name": "Static Gain 15",
            "gain factor": "-1",
            "comments": ""
        },
        "cedar.processing.StaticGain": {
            "name": "Static Gain 16",
            "gain factor": "-1",
            "comments": ""
        },
        "cedar.processing.StaticGain": {
            "name": "Static Gain 17",
            "gain factor": "-1",
            "comments": ""
        },
        "cedar.processing.StaticGain": {
            "name": "Static Gain 18",
            "gain factor": "-1",
            "comments": ""
        },
        "cedar.processing.StaticGain": {
            "name": "Static Gain 19",
            "gain factor": "-1",
            "comments": ""
        },
        "cedar.processing.StaticGain": {
            "name": "Static Gain 20",
            "gain factor": "-5",
            "comments": ""
        },
        "cedar.processing.StaticGain": {
            "name": "Static Gain 21",
            "gain factor": "-5",
            "comments": ""
        },
        "cedar.processing.StaticGain": {
            "name": "Static Gain 22",
            "gain factor": "-5",
            "comments": ""
        },
        "cedar.processing.StaticGain": {
            "name": "Static Gain 23",
            "gain factor": "-1",
            "comments": ""
        },
        "cedar.processing.StaticGain": {
            "name": "Static Gain 5",
            "gain factor": "2",
            "comments": ""
        },
        "cedar.processing.StaticGain": {
            "name": "Static Gain 6",
            "gain factor": "2",
            "comments": ""
        },
        "cedar.processing.StaticGain": {
            "name": "Static Gain 7",
            "gain factor": "-1",
            "comments": ""
        },
        "cedar.processing.StaticGain": {
            "name": "Static Gain 8",
            "gain factor": "-1",
            "comments": ""
        },
        "cedar.processing.StaticGain": {
            "name": "Static Gain 9",
            "gain factor": "-1",
            "comments": ""
        },
        "cedar.processing.sinks.TCPWriter": {
            "name": "TCP-Break-Writer",
            "port": "50031",
            "ip_adress": "10.0.2.15",
            "timeout (ms)": "3000",
            "max timeouts": "50",
            "send interval (timesteps)": "1",
            "comments": ""
        },
        "cedar.processing.sinks.TCPWriter": {
            "name": "TCP-LED-Writer",
            "port": "50032",
            "ip_adress": "10.0.2.15",
            "timeout (ms)": "3000",
            "max timeouts": "50",
            "send interval (timesteps)": "1",
            "comments": ""
        },
        "cedar.processing.sinks.TCPWriter": {
            "name": "TCP-Motor-Writer",
            "port": "50030",
            "ip_adress": "10.0.2.15",
            "timeout (ms)": "3000",
            "max timeouts": "50",
            "send interval (timesteps)": "1",
            "comments": ""
        },
        "cedar.processing.TransferFunction": {
            "name": "Transfer Function 3",
            "function": {
                "type": "cedar.aux.math.HeavisideSigmoid",
                "threshold": "4"
            },
            "comments": ""
        },
        "cedar.processing.VectorToScalars": {
            "name": "Vector To Scalars",
            "number of vector entries": "5",
            "comments": ""
        }
    },
    "triggers": {
        "cedar.processing.LoopedTrigger": {
            "name": "default thread",
            "step size": "0.02 s",
            "fake Euler step size": "0.02 s",
            "minimum sleep time": "0.0002 s",
            "idle time": "1e-05 s",
            "simulated time": "0.001 s",
            "loop mode": "real deltaT",
            "start with all": "true",
            "listeners": [
                "Belief-Node",
                "Exploration-Goal-Node",
                "Sound-Goal-Field",
                "CoS-Color In Attention",
                "Precondition-Color In Attention",
                "Intention In Action-Orient To Object",
                "CoS-Orient To Object",
                "Precondition-Oriented To Object",
                "CoS-Is In Front Of",
                "Precondition-Is In Front Of",
                "Intention In Action-Action1",
                "CoS-Action1",
                "Color-matching-Field",
                "Attention-Color-Binding-Field",
                "Space-Attention-Field",
                "Space-matching-Field",
                "Distance-matching-Field",
                "Camera TCP Reader",
                "Microphone TCP Reader",
                "Color-Space-Perception",
                "Sound-Perception",
                "Color-Attention-Field",
                "Sound-Attention-Field",
                "Action-Introception-Field",
                "Action-Attention-Field",
                "Sound-Action-Field",
                "Color-Action-Field",
                "Action-Selection-Field",
                "TCP-Motor-Writer",
                "TCP-Break-Writer",
                "CoS-Action2",
                "Intention In Action-Action2",
                "CoS-Action3",
                "Intention-In-Action-Node6",
                "TCP-LED-Writer",
                "Space To Rate Code",
                "Intention In Action-Break",
                "CoS-Break",
                "Precondition-Break In Front Of Object",
                "Numerical Integration",
                "Numerical Integration 2",
                "Numerical Integration 3",
                "Motor-Attractor",
                "Action-Memory-Trace",
                "Action-Impact-Interval",
                "ActionChange Detection",
                "Sound-Change-Detection",
                "Sound-Memory-Trace",
                "CoS1-Trace",
                "CoS2-Trace",
                "CoS3-Trace",
                "Color-Memory-Trace",
                "Color-Change-Detection"
            ]
        }
    },
    "connections": [
        {
            "source": "Rate Matrix To Space Code.output",
            "target": "Static Gain.input"
        },
        {
            "source": "Static Gain.output",
            "target": "Convolution.matrix"
        },
        {
            "source": "Color Conversion.converted image",
            "target": "Matrix Type Converter.matrix"
        },
        {
            "source": "Matrix Type Converter.converted matrix",
            "target": "Channel Split.three channel input"
        },
        {
            "source": "Channel Split.channel 1",
            "target": "Rate Matrix To Space Code.bin map"
        },
        {
            "source": "Channel Split.channel 2",
            "target": "Rate Matrix To Space Code.values"
        },
        {
            "source": "Camera TCP Reader.output",
            "target": "Color Conversion.input image"
        },
        {
            "source": "Color-Space-Perception.sigmoided activation",
            "target": "Projection 2.input"
        },
        {
            "source": "Convolution.result",
            "target": "Projection.input"
        },
        {
            "source": "Goal-Boost.Gauss input",
            "target": "Sound-Goal-Field.input"
        },
        {
            "source": "Goal-Directed-Mode.boost",
            "target": "Sound-Goal-Field.input"
        },
        {
            "source": "Exploration-Goal-Node.sigmoided activation",
            "target": "Color-Attention-Field.input"
        },
        {
            "source": "Exploration-Goal-Node.sigmoided activation",
            "target": "Sound-Attention-Field.input"
        },
        {
            "source": "Exploration-Boost.boost",
            "target": "Exploration-Goal-Node.input"
        },
        {
            "source": "Color-Attention-Field.sigmoided activation",
            "target": "Color-Action-Field.input"
        },
        {
            "source": "Sound-Attention-Field.sigmoided activation",
            "target": "Sound-Action-Field.input"
        },
        {
            "source": "Action-Attention-Field.sigmoided activation",
            "target": "Action-Selection-Field.input"
        },
        {
            "source": "Sound-Action-Field.sigmoided activation",
            "target": "Sound-Attention-Field.input"
        },
        {
            "source": "Color-Action-Field.sigmoided activation",
            "target": "Color-Attention-Field.input"
        },
        {
            "source": "Action-Selection-Field.sigmoided activation",
            "target": "Action-Attention-Field.input"
        },
        {
            "source": "Exploration-Goal-Node.sigmoided activation",
            "target": "Sound-Action-Field.input"
        },
        {
            "source": "Exploration-Goal-Node.sigmoided activation",
            "target": "Color-Action-Field.input"
        },
        {
            "source": "Sound-Perception.sigmoided activation",
            "target": "Static Gain 5.input"
        },
        {
            "source": "Static Gain 5.output",
            "target": "Sound-Attention-Field.input"
        },
        {
            "source": "Action-Introception-Field.sigmoided activation",
            "target": "Static Gain 6.input"
        },
        {
            "source": "Static Gain 6.output",
            "target": "Action-Attention-Field.input"
        },
        {
            "source": "Color-matching-Field.sigmoided activation",
            "target": "Projection 6.input"
        },
        {
            "source": "Projection 6.output",
            "target": "CoS-Color In Attention.input"
        },
        {
            "source": "CoS-Color In Attention.sigmoided activation",
            "target": "Static Gain 9.input"
        },
        {
            "source": "Precondition-Color In Attention.sigmoided activation",
            "target": "Static Gain 10.input"
        },
        {
            "source": "Static Gain 10.output",
            "target": "Intention In Action-Orient To Object.input"
        },
        {
            "source": "Projection 7.output",
            "target": "Attention-Color-Binding-Field.input"
        },
        {
            "source": "Attention-Color-Binding-Field.sigmoided activation",
            "target": "Projection 8.input"
        },
        {
            "source": "Projection 8.output",
            "target": "Space-Attention-Field.input"
        },
        {
            "source": "Space-Action-Field.Gauss input",
            "target": "Space-matching-Field.input"
        },
        {
            "source": "Space-Attention-Field.sigmoided activation",
            "target": "Space-matching-Field.input"
        },
        {
            "source": "Space-matching-Field.sigmoided activation",
            "target": "Projection 9.input"
        },
        {
            "source": "Projection 9.output",
            "target": "CoS-Orient To Object.input"
        },
        {
            "source": "CoS-Orient To Object.sigmoided activation",
            "target": "Static Gain 11.input"
        },
        {
            "source": "Distance-matching-Field.sigmoided activation",
            "target": "Projection 10.input"
        },
        {
            "source": "Projection 10.output",
            "target": "CoS-Is In Front Of.input"
        },
        {
            "source": "CoS-Is In Front Of.sigmoided activation",
            "target": "Static Gain 13.input"
        },
        {
            "source": "Precondition-Is In Front Of.sigmoided activation",
            "target": "Static Gain 14.input"
        },
        {
            "source": "Space To Rate Code.output",
            "target": "TCP-Motor-Writer.input"
        },
        {
            "source": "Convolution 2.result",
            "target": "Distance-matching-Field.input"
        },
        {
            "source": "Projection.output",
            "target": "Transfer Function 3.input"
        },
        {
            "source": "Exploration-Goal-Node.sigmoided activation",
            "target": "Action-Selection-Field.input"
        },
        {
            "source": "Static Gain 11.output",
            "target": "Intention In Action-Orient To Object.input"
        },
        {
            "source": "CoS-Action2.sigmoided activation",
            "target": "Static Gain 8.input"
        },
        {
            "source": "CoS-Action3.sigmoided activation",
            "target": "Static Gain 15.input"
        },
        {
            "source": "Static Gain 8.output",
            "target": "Intention In Action-Action2.input"
        },
        {
            "source": "Static Gain 15.output",
            "target": "Intention-In-Action-Node6.input"
        },
        {
            "source": "Static Gain 13.output",
            "target": "Precondition-Is In Front Of.input"
        },
        {
            "source": "Precondition-Oriented To Object.sigmoided activation",
            "target": "Static Gain 12.input"
        },
        {
            "source": "Static Gain 12.output",
            "target": "CoS-Is In Front Of.input"
        },
        {
            "source": "Static Gain 11.output",
            "target": "Precondition-Oriented To Object.input"
        },
        {
            "source": "Static Gain 9.output",
            "target": "Precondition-Color In Attention.input"
        },
        {
            "source": "Static Gain 14.output",
            "target": "Intention In Action-Break.input"
        },
        {
            "source": "Intention In Action-Break.sigmoided activation",
            "target": "TCP-Break-Writer.input"
        },
        {
            "source": "Intention In Action-Break.sigmoided activation",
            "target": "CoS-Break.input"
        },
        {
            "source": "CoS-Break.sigmoided activation",
            "target": "Static Gain 16.input"
        },
        {
            "source": "Static Gain 16.output",
            "target": "Precondition-Break In Front Of Object.input"
        },
        {
            "source": "Precondition-Break In Front Of Object.sigmoided activation",
            "target": "Static Gain 17.input"
        },
        {
            "source": "Static Gain 17.output",
            "target": "Intention In Action-Action1.input"
        },
        {
            "source": "Distance-Matching-Field.Gauss input",
            "target": "Convolution 2.kernel"
        },
        {
            "source": "Space-Attention-Field.sigmoided activation",
            "target": "Convolution 2.matrix"
        },
        {
            "source": "Static Gain 17.output",
            "target": "Intention In Action-Action2.input"
        },
        {
            "source": "Static Gain 17.output",
            "target": "Intention-In-Action-Node6.input"
        },
        {
            "source": "Hopf Oscillator RHS.state change",
            "target": "Numerical Integration.input"
        },
        {
            "source": "Numerical Integration.integration result",
            "target": "Hopf Oscillator RHS.state"
        },
        {
            "source": "Intention In Action-Action1.sigmoided activation",
            "target": "Hopf Oscillator RHS.alphas (bank) (optional)"
        },
        {
            "source": "Numerical Integration.integration result",
            "target": "Norm.input"
        },
        {
            "source": "Norm.output",
            "target": "CoS-Action1.input"
        },
        {
            "source": "Intention In Action-Action1.sigmoided activation",
            "target": "Hopf Oscillator RHS.omegas (bank) (optional)"
        },
        {
            "source": "Intention In Action-Action2.sigmoided activation",
            "target": "Hopf Oscillator RHS 2.omegas (bank) (optional)"
        },
        {
            "source": "Intention In Action-Action2.sigmoided activation",
            "target": "Hopf Oscillator RHS 2.alphas (bank) (optional)"
        },
        {
            "source": "Hopf Oscillator RHS 2.state change",
            "target": "Numerical Integration 2.input"
        },
        {
            "source": "Numerical Integration 2.integration result",
            "target": "Hopf Oscillator RHS 2.state"
        },
        {
            "source": "Hopf Oscillator RHS 3.state change",
            "target": "Numerical Integration 3.input"
        },
        {
            "source": "Numerical Integration 3.integration result",
            "target": "Hopf Oscillator RHS 3.state"
        },
        {
            "source": "Intention-In-Action-Node6.sigmoided activation",
            "target": "Hopf Oscillator RHS 3.omegas (bank) (optional)"
        },
        {
            "source": "Intention-In-Action-Node6.sigmoided activation",
            "target": "Hopf Oscillator RHS 3.alphas (bank) (optional)"
        },
        {
            "source": "Numerical Integration 2.integration result",
            "target": "Norm 3.input"
        },
        {
            "source": "Numerical Integration 3.integration result",
            "target": "Norm 2.input"
        },
        {
            "source": "Norm 2.output",
            "target": "CoS-Action3.input"
        },
        {
            "source": "Norm 3.output",
            "target": "CoS-Action2.input"
        },
        {
            "source": "Norm.output",
            "target": "Scalars To Vector.scalar 0"
        },
        {
            "source": "Norm 3.output",
            "target": "Scalars To Vector.scalar 1"
        },
        {
            "source": "Norm 2.output",
            "target": "Scalars To Vector.scalar 2"
        },
        {
            "source": "Scalars To Vector.vector",
            "target": "TCP-LED-Writer.input"
        },
        {
            "source": "Color-Attention-Field.sigmoided activation",
            "target": "Color-matching-Field.input"
        },
        {
            "source": "Space-Attention-Field.sigmoided activation",
            "target": "Motor-Attractor.input"
        },
        {
            "source": "Intention In Action-Orient To Object.sigmoided activation",
            "target": "Motor-Attractor.input"
        },
        {
            "source": "Motor-Attractor.sigmoided activation",
            "target": "Space To Rate Code.input"
        },
        {
            "source": "Action-Selection-Field.sigmoided activation",
            "target": "Vector To Scalars.input vector"
        },
        {
            "source": "Exploration-Goal-Node.sigmoided activation",
            "target": "Scalars To Vector 2.scalar 4"
        },
        {
            "source": "Exploration-Goal-Node.sigmoided activation",
            "target": "Scalars To Vector 2.scalar 3"
        },
        {
            "source": "Exploration-Goal-Node.sigmoided activation",
            "target": "Scalars To Vector 2.scalar 2"
        },
        {
            "source": "Scalars To Vector 2.vector",
            "target": "Action-Selection-Field.input"
        },
        {
            "source": "Color-Action-Field.sigmoided activation",
            "target": "Color-matching-Field.input"
        },
        {
            "source": "Intention In Action-Orient To Object.sigmoided activation",
            "target": "Scalars To Vector 3.scalar 0"
        },
        {
            "source": "Intention In Action-Break.sigmoided activation",
            "target": "Scalars To Vector 3.scalar 1"
        },
        {
            "source": "Intention In Action-Action1.sigmoided activation",
            "target": "Scalars To Vector 3.scalar 2"
        },
        {
            "source": "Intention In Action-Action2.sigmoided activation",
            "target": "Scalars To Vector 3.scalar 3"
        },
        {
            "source": "Intention-In-Action-Node6.sigmoided activation",
            "target": "Scalars To Vector 3.scalar 4"
        },
        {
            "source": "Scalars To Vector 3.vector",
            "target": "Action-Introception-Field.input"
        },
        {
            "source": "Color-Attention-Field.sigmoided activation",
            "target": "Projection 7.input"
        },
        {
            "source": "Vector To Scalars.scalar 2",
            "target": "CoS-Color In Attention.input"
        },
        {
            "source": "Vector To Scalars.scalar 2",
            "target": "Precondition-Color In Attention.input"
        },
        {
            "source": "Vector To Scalars.scalar 2",
            "target": "Intention In Action-Orient To Object.input"
        },
        {
            "source": "Vector To Scalars.scalar 2",
            "target": "CoS-Orient To Object.input"
        },
        {
            "source": "Vector To Scalars.scalar 2",
            "target": "Precondition-Oriented To Object.input"
        },
        {
            "source": "Vector To Scalars.scalar 2",
            "target": "CoS-Is In Front Of.input"
        },
        {
            "source": "Vector To Scalars.scalar 2",
            "target": "Precondition-Is In Front Of.input"
        },
        {
            "source": "Vector To Scalars.scalar 2",
            "target": "Intention In Action-Break.input"
        },
        {
            "source": "Vector To Scalars.scalar 2",
            "target": "CoS-Break.input"
        },
        {
            "source": "Vector To Scalars.scalar 2",
            "target": "Precondition-Break In Front Of Object.input"
        },
        {
            "source": "Vector To Scalars.scalar 2",
            "target": "Intention In Action-Action1.input"
        },
        {
            "source": "Vector To Scalars.scalar 2",
            "target": "CoS-Action1.input"
        },
        {
            "source": "Vector To Scalars.scalar 3",
            "target": "CoS-Color In Attention.input"
        },
        {
            "source": "Vector To Scalars.scalar 3",
            "target": "Precondition-Color In Attention.input"
        },
        {
            "source": "Vector To Scalars.scalar 3",
            "target": "Intention In Action-Orient To Object.input"
        },
        {
            "source": "Vector To Scalars.scalar 3",
            "target": "CoS-Orient To Object.input"
        },
        {
            "source": "Vector To Scalars.scalar 3",
            "target": "Precondition-Oriented To Object.input"
        },
        {
            "source": "Vector To Scalars.scalar 3",
            "target": "CoS-Is In Front Of.input"
        },
        {
            "source": "Vector To Scalars.scalar 3",
            "target": "Precondition-Is In Front Of.input"
        },
        {
            "source": "Vector To Scalars.scalar 3",
            "target": "Intention In Action-Break.input"
        },
        {
            "source": "Vector To Scalars.scalar 3",
            "target": "CoS-Break.input"
        },
        {
            "source": "Vector To Scalars.scalar 3",
            "target": "Precondition-Break In Front Of Object.input"
        },
        {
            "source": "Vector To Scalars.scalar 3",
            "target": "Intention In Action-Action2.input"
        },
        {
            "source": "Vector To Scalars.scalar 3",
            "target": "CoS-Action2.input"
        },
        {
            "source": "Vector To Scalars.scalar 4",
            "target": "CoS-Color In Attention.input"
        },
        {
            "source": "Vector To Scalars.scalar 4",
            "target": "Precondition-Color In Attention.input"
        },
        {
            "source": "Vector To Scalars.scalar 4",
            "target": "Intention In Action-Orient To Object.input"
        },
        {
            "source": "Vector To Scalars.scalar 4",
            "target": "CoS-Orient To Object.input"
        },
        {
            "source": "Vector To Scalars.scalar 4",
            "target": "Precondition-Oriented To Object.input"
        },
        {
            "source": "Vector To Scalars.scalar 4",
            "target": "CoS-Is In Front Of.input"
        },
        {
            "source": "Vector To Scalars.scalar 4",
            "target": "Precondition-Is In Front Of.input"
        },
        {
            "source": "Vector To Scalars.scalar 4",
            "target": "Intention In Action-Break.input"
        },
        {
            "source": "Vector To Scalars.scalar 4",
            "target": "CoS-Break.input"
        },
        {
            "source": "Vector To Scalars.scalar 4",
            "target": "Precondition-Break In Front Of Object.input"
        },
        {
            "source": "Vector To Scalars.scalar 4",
            "target": "Intention-In-Action-Node6.input"
        },
        {
            "source": "Vector To Scalars.scalar 4",
            "target": "CoS-Action3.input"
        },
        {
            "source": "Color-Space-Perception.sigmoided activation",
            "target": "Attention-Color-Binding-Field.input"
        },
        {
            "source": "Scalars To Vector 2.vector",
            "target": "Action-Attention-Field.input"
        },
        {
            "source": "Action-Attention-Field.sigmoided activation",
            "target": "Action-Memory-Trace.input"
        },
        {
            "source": "Action-Attention-Field.sigmoided activation",
            "target": "Static Gain 18.input"
        },
        {
            "source": "Static Gain 18.output",
            "target": "Action-Impact-Interval.input"
        },
        {
            "source": "Action-Memory-Trace.activation",
            "target": "Action-Impact-Interval.input"
        },
        {
            "source": "Sound-Attention-Field.sigmoided activation",
            "target": "Sound-Memory-Trace.input"
        },
        {
            "source": "Sound-Memory-Trace.activation",
            "target": "Static Gain 19.input"
        },
        {
            "source": "Static Gain 19.output",
            "target": "Sound-Change-Detection.input"
        },
        {
            "source": "Sound-Attention-Field.sigmoided activation",
            "target": "Sound-Change-Detection.input"
        },
        {
            "source": "Sound-Change-Detection.sigmoided activation",
            "target": "Projection 3.input"
        },
        {
            "source": "Projection 3.output",
            "target": "ActionChange Detection.input"
        },
        {
            "source": "Action-Impact-Interval.sigmoided activation",
            "target": "Projection 4.input"
        },
        {
            "source": "Projection 4.output",
            "target": "ActionChange Detection.input"
        },
        {
            "source": "Static Gain 7.output",
            "target": "Intention In Action-Action1.input"
        },
        {
            "source": "CoS-Action1.sigmoided activation",
            "target": "Static Gain 7.input"
        },
        {
            "source": "CoS-Action1.sigmoided activation",
            "target": "CoS1-Trace.input"
        },
        {
            "source": "CoS1-Trace.activation",
            "target": "Scalars To Vector 4.scalar 2"
        },
        {
            "source": "CoS1-Trace.activation",
            "target": "Scalars To Vector 4.scalar 3"
        },
        {
            "source": "CoS1-Trace.activation",
            "target": "Scalars To Vector 4.scalar 4"
        },
        {
            "source": "CoS-Action2.sigmoided activation",
            "target": "CoS2-Trace.input"
        },
        {
            "source": "CoS2-Trace.activation",
            "target": "Scalars To Vector 5.scalar 2"
        },
        {
            "source": "CoS2-Trace.activation",
            "target": "Scalars To Vector 5.scalar 3"
        },
        {
            "source": "CoS2-Trace.activation",
            "target": "Scalars To Vector 5.scalar 4"
        },
        {
            "source": "CoS-Action3.sigmoided activation",
            "target": "CoS3-Trace.input"
        },
        {
            "source": "CoS3-Trace.activation",
            "target": "Scalars To Vector 6.scalar 2"
        },
        {
            "source": "CoS3-Trace.activation",
            "target": "Scalars To Vector 6.scalar 3"
        },
        {
            "source": "CoS3-Trace.activation",
            "target": "Scalars To Vector 6.scalar 4"
        },
        {
            "source": "Scalars To Vector 4.vector",
            "target": "Static Gain 20.input"
        },
        {
            "source": "Scalars To Vector 5.vector",
            "target": "Static Gain 21.input"
        },
        {
            "source": "Scalars To Vector 6.vector",
            "target": "Static Gain 22.input"
        },
        {
            "source": "Static Gain 20.output",
            "target": "Action-Selection-Field.input"
        },
        {
            "source": "Static Gain 21.output",
            "target": "Action-Selection-Field.input"
        },
        {
            "source": "Static Gain 22.output",
            "target": "Action-Selection-Field.input"
        },
        {
            "source": "Color-Memory-Trace.activation",
            "target": "Static Gain 23.input"
        },
        {
            "source": "Static Gain 23.output",
            "target": "Color-Change-Detection.input"
        },
        {
            "source": "Color-Attention-Field.sigmoided activation",
            "target": "Color-Memory-Trace.input"
        },
        {
            "source": "Color-Change-Detection.sigmoided activation",
            "target": "Projection 5.input"
        },
        {
            "source": "Projection 5.output",
            "target": "ActionChange Detection.input"
        },
        {
            "source": "Color-Attention-Field.sigmoided activation",
            "target": "Color-Change-Detection.input"
        },
        {
            "source": "Transfer Function 3.sigmoided output",
            "target": "Color-Space-Perception.input"
        },
        {
            "source": "Microphone TCP Reader.output",
            "target": "Sound-Perception.input"
        },
        {
            "source": "Add Constant.output",
            "target": "Color-Attention-Field.input"
        },
        {
            "source": "Projection 2.output",
            "target": "Add Constant.input"
        }
    ],
    "name": "element",
    "connectors": "",
    "is looped": "false",
    "time factor": "1",
    "ui": [
        {
            "type": "connections",
            "connections": ""
        },
        {
            "type": "step",
            "step": "Action-Attention-Field",
            "display style": "ICON_AND_TEXT",
            "width": "124",
            "height": "40",
            "positionX": "658",
            "positionY": "546"
        },
        {
            "type": "step",
            "step": "Action-Impact-Interval",
            "display style": "ICON_AND_TEXT",
            "width": "124",
            "height": "40",
            "positionX": "938",
            "positionY": "224"
        },
        {
            "type": "step",
            "step": "Action-Introception-Field",
            "display style": "ICON_AND_TEXT",
            "width": "124",
            "height": "40",
            "positionX": "490",
            "positionY": "966"
        },
        {
            "type": "step",
            "step": "Action-Memory-Trace",
            "display style": "ICON_AND_TEXT",
            "width": "124",
            "height": "40",
            "positionX": "938",
            "positionY": "280"
        },
        {
            "type": "step",
            "step": "Action-Selection-Field",
            "display style": "ICON_AND_TEXT",
            "width": "124",
            "height": "40",
            "positionX": "-1386",
            "positionY": "-42"
        },
        {
            "type": "step",
            "step": "ActionChange Detection",
            "display style": "ICON_AND_TEXT",
            "width": "124",
            "height": "40",
            "positionX": "840",
            "positionY": "84"
        },
        {
            "type": "step",
            "step": "Add Constant",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "224",
            "positionY": "644"
        },
        {
            "type": "step",
            "step": "Attention-Color-Binding-Field",
            "display style": "ICON_AND_TEXT",
            "width": "124",
            "height": "40",
            "positionX": "-4088",
            "positionY": "1092"
        },
        {
            "type": "step",
            "step": "Belief-Node",
            "display style": "ICON_AND_TEXT",
            "width": "124",
            "height": "40",
            "positionX": "770",
            "positionY": "-126"
        },
        {
            "type": "step",
            "step": "Camera TCP Reader",
            "display style": "ICON_AND_TEXT",
            "width": "124",
            "height": "40",
            "positionX": "-938",
            "positionY": "1372"
        },
        {
            "type": "step",
            "step": "Channel Split",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-560",
            "positionY": "1372"
        },
        {
            "type": "step",
            "step": "CoS-Action1",
            "display style": "ICON_AND_TEXT",
            "width": "124",
            "height": "40",
            "positionX": "-1582",
            "positionY": "728"
        },
        {
            "type": "step",
            "step": "CoS-Action2",
            "display style": "ICON_AND_TEXT",
            "width": "124",
            "height": "40",
            "positionX": "-1582",
            "positionY": "938"
        },
        {
            "type": "step",
            "step": "CoS-Action3",
            "display style": "ICON_AND_TEXT",
            "width": "124",
            "height": "40",
            "positionX": "-1582",
            "positionY": "1148"
        },
        {
            "type": "step",
            "step": "CoS-Break",
            "display style": "ICON_AND_TEXT",
            "width": "124",
            "height": "40",
            "positionX": "-2422",
            "positionY": "952"
        },
        {
            "type": "step",
            "step": "CoS-Color In Attention",
            "display style": "ICON_AND_TEXT",
            "width": "124",
            "height": "40",
            "positionX": "-4340",
            "positionY": "952"
        },
        {
            "type": "step",
            "step": "CoS-Is In Front Of",
            "display style": "ICON_AND_TEXT",
            "width": "124",
            "height": "40",
            "positionX": "-2996",
            "positionY": "952"
        },
        {
            "type": "step",
            "step": "CoS-Orient To Object",
            "display style": "ICON_AND_TEXT",
            "width": "124",
            "height": "40",
            "positionX": "-3472",
            "positionY": "952"
        },
        {
            "type": "step",
            "step": "CoS1-Trace",
            "display style": "ICON_AND_TEXT",
            "width": "124",
            "height": "40",
            "positionX": "-1442",
            "positionY": "784"
        },
        {
            "type": "step",
            "step": "CoS2-Trace",
            "display style": "ICON_AND_TEXT",
            "width": "124",
            "height": "40",
            "positionX": "-1442",
            "positionY": "994"
        },
        {
            "type": "step",
            "step": "CoS3-Trace",
            "display style": "ICON_AND_TEXT",
            "width": "124",
            "height": "40",
            "positionX": "-1442",
            "positionY": "1204"
        },
        {
            "type": "step",
            "step": "Color Conversion",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-756.54873477038439",
            "positionY": "1375.3436426116848"
        },
        {
            "type": "step",
            "step": "Color-Action-Field",
            "display style": "ICON_AND_TEXT",
            "width": "124",
            "height": "40",
            "positionX": "-1386",
            "positionY": "-112"
        },
        {
            "type": "step",
            "step": "Color-Attention-Field",
            "display style": "ICON_AND_TEXT",
            "width": "124",
            "height": "40",
            "positionX": "264.38356164383544",
            "positionY": "542.46575342465769"
        },
        {
            "type": "step",
            "step": "Color-Change-Detection",
            "display style": "ICON_AND_TEXT",
            "width": "124",
            "height": "40",
            "positionX": "406",
            "positionY": "224"
        },
        {
            "type": "step",
            "step": "Color-Memory-Trace",
            "display style": "ICON_AND_TEXT",
            "width": "124",
            "height": "40",
            "positionX": "406",
            "positionY": "280"
        },
        {
            "type": "step",
            "step": "Color-Space-Perception",
            "display style": "ICON_AND_TEXT",
            "width": "124",
            "height": "40",
            "positionX": "11.561643835616437",
            "positionY": "963.2602739726027"
        },
        {
            "type": "step",
            "step": "Color-matching-Field",
            "display style": "ICON_AND_TEXT",
            "width": "124",
            "height": "40",
            "positionX": "-4536",
            "positionY": "980"
        },
        {
            "type": "step",
            "step": "Convolution",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-271.1834843278142",
            "positionY": "1371.6625013016774"
        },
        {
            "type": "step",
            "step": "Convolution 2",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-3276",
            "positionY": "1050"
        },
        {
            "type": "step",
            "step": "Distance-Matching-Field",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-3346",
            "positionY": "1064"
        },
        {
            "type": "step",
            "step": "Distance-matching-Field",
            "display style": "ICON_AND_TEXT",
            "width": "124",
            "height": "40",
            "positionX": "-3206",
            "positionY": "1050"
        },
        {
            "type": "step",
            "step": "Exploration-Boost",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-1456",
            "positionY": "-546"
        },
        {
            "type": "step",
            "step": "Exploration-Goal-Node",
            "display style": "ICON_AND_TEXT",
            "width": "124",
            "height": "40",
            "positionX": "-1400",
            "positionY": "-434"
        },
        {
            "type": "step",
            "step": "Goal-Boost",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-1246",
            "positionY": "-546"
        },
        {
            "type": "step",
            "step": "Goal-Directed-Mode",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-1148",
            "positionY": "-546"
        },
        {
            "type": "step",
            "step": "Hopf Oscillator RHS",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-1862",
            "positionY": "798"
        },
        {
            "type": "step",
            "step": "Hopf Oscillator RHS 2",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-1862",
            "positionY": "1008"
        },
        {
            "type": "step",
            "step": "Hopf Oscillator RHS 3",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-1862",
            "positionY": "1218"
        },
        {
            "type": "step",
            "step": "Intention In Action-Action1",
            "display style": "ICON_AND_TEXT",
            "width": "124",
            "height": "40",
            "positionX": "-2002",
            "positionY": "728"
        },
        {
            "type": "step",
            "step": "Intention In Action-Action2",
            "display style": "ICON_AND_TEXT",
            "width": "124",
            "height": "40",
            "positionX": "-2002",
            "positionY": "938"
        },
        {
            "type": "step",
            "step": "Intention In Action-Break",
            "display style": "ICON_AND_TEXT",
            "width": "124",
            "height": "40",
            "positionX": "-2604",
            "positionY": "952"
        },
        {
            "type": "step",
            "step": "Intention In Action-Orient To Object",
            "display style": "ICON_AND_TEXT",
            "width": "124",
            "height": "40",
            "positionX": "-3948",
            "positionY": "952"
        },
        {
            "type": "step",
            "step": "Intention-In-Action-Node6",
            "display style": "ICON_AND_TEXT",
            "width": "124",
            "height": "40",
            "positionX": "-2002",
            "positionY": "1148"
        },
        {
            "type": "step",
            "step": "Matrix Type Converter",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-644.00447776736428",
            "positionY": "1374.186452150371"
        },
        {
            "type": "step",
            "step": "Microphone TCP Reader",
            "display style": "ICON_AND_TEXT",
            "width": "124",
            "height": "40",
            "positionX": "14",
            "positionY": "1372"
        },
        {
            "type": "step",
            "step": "Motor-Attractor",
            "display style": "ICON_AND_TEXT",
            "width": "124",
            "height": "40",
            "positionX": "-3752",
            "positionY": "1106"
        },
        {
            "type": "step",
            "step": "Norm",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-1638",
            "positionY": "798"
        },
        {
            "type": "step",
            "step": "Norm 2",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-1638",
            "positionY": "1218"
        },
        {
            "type": "step",
            "step": "Norm 3",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-1638",
            "positionY": "1008"
        },
        {
            "type": "step",
            "step": "Numerical Integration",
            "display style": "ICON_AND_TEXT",
            "width": "124",
            "height": "40",
            "positionX": "-1792",
            "positionY": "798"
        },
        {
            "type": "step",
            "step": "Numerical Integration 2",
            "display style": "ICON_AND_TEXT",
            "width": "124",
            "height": "40",
            "positionX": "-1792",
            "positionY": "1008"
        },
        {
            "type": "step",
            "step": "Numerical Integration 3",
            "display style": "ICON_AND_TEXT",
            "width": "124",
            "height": "40",
            "positionX": "-1792",
            "positionY": "1218"
        },
        {
            "type": "step",
            "step": "Precondition-Break In Front Of Object",
            "display style": "ICON_AND_TEXT",
            "width": "124",
            "height": "40",
            "positionX": "-2226",
            "positionY": "924"
        },
        {
            "type": "step",
            "step": "Precondition-Color In Attention",
            "display style": "ICON_AND_TEXT",
            "width": "124",
            "height": "40",
            "positionX": "-4144",
            "positionY": "924"
        },
        {
            "type": "step",
            "step": "Precondition-Is In Front Of",
            "display style": "ICON_AND_TEXT",
            "width": "124",
            "height": "40",
            "positionX": "-2800",
            "positionY": "924"
        },
        {
            "type": "step",
            "step": "Precondition-Oriented To Object",
            "display style": "ICON_AND_TEXT",
            "width": "124",
            "height": "40",
            "positionX": "-3276",
            "positionY": "924"
        },
        {
            "type": "step",
            "step": "Projection",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-184.56341768197419",
            "positionY": "1372.3992502343024"
        },
        {
            "type": "step",
            "step": "Projection 10",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-3052",
            "positionY": "1050"
        },
        {
            "type": "step",
            "step": "Projection 2",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "140",
            "positionY": "868"
        },
        {
            "type": "step",
            "step": "Projection 3",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "784",
            "positionY": "182"
        },
        {
            "type": "step",
            "step": "Projection 4",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "1022",
            "positionY": "168"
        },
        {
            "type": "step",
            "step": "Projection 5",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "546",
            "positionY": "182"
        },
        {
            "type": "step",
            "step": "Projection 6",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-4396",
            "positionY": "966"
        },
        {
            "type": "step",
            "step": "Projection 7",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-4144",
            "positionY": "1106"
        },
        {
            "type": "step",
            "step": "Projection 8",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-3948",
            "positionY": "1064"
        },
        {
            "type": "step",
            "step": "Projection 9",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-3528",
            "positionY": "966"
        },
        {
            "type": "step",
            "step": "Rate Matrix To Space Code",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-448",
            "positionY": "1372"
        },
        {
            "type": "step",
            "step": "Scalars To Vector",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-1022",
            "positionY": "994"
        },
        {
            "type": "step",
            "step": "Scalars To Vector 2",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-1484",
            "positionY": "-42"
        },
        {
            "type": "step",
            "step": "Scalars To Vector 3",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "434",
            "positionY": "1246"
        },
        {
            "type": "step",
            "step": "Scalars To Vector 4",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-1288",
            "positionY": "784"
        },
        {
            "type": "step",
            "step": "Scalars To Vector 5",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-1288",
            "positionY": "994"
        },
        {
            "type": "step",
            "step": "Scalars To Vector 6",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-1288",
            "positionY": "1204"
        },
        {
            "type": "step",
            "step": "Sound-Action-Field",
            "display style": "ICON_AND_TEXT",
            "width": "124",
            "height": "40",
            "positionX": "-1386",
            "positionY": "-182"
        },
        {
            "type": "step",
            "step": "Sound-Attention-Field",
            "display style": "ICON_AND_TEXT",
            "width": "124",
            "height": "40",
            "positionX": "462",
            "positionY": "546"
        },
        {
            "type": "step",
            "step": "Sound-Change-Detection",
            "display style": "ICON_AND_TEXT",
            "width": "124",
            "height": "40",
            "positionX": "644",
            "positionY": "224"
        },
        {
            "type": "step",
            "step": "Sound-Goal-Field",
            "display style": "ICON_AND_TEXT",
            "width": "124",
            "height": "40",
            "positionX": "-1176",
            "positionY": "-434"
        },
        {
            "type": "step",
            "step": "Sound-Memory-Trace",
            "display style": "ICON_AND_TEXT",
            "width": "124",
            "height": "40",
            "positionX": "644",
            "positionY": "280"
        },
        {
            "type": "step",
            "step": "Sound-Perception",
            "display style": "ICON_AND_TEXT",
            "width": "124",
            "height": "40",
            "positionX": "196",
            "positionY": "966"
        },
        {
            "type": "step",
            "step": "Space To Rate Code",
            "display style": "ICON_AND_TEXT",
            "width": "124",
            "height": "40",
            "positionX": "-3752",
            "positionY": "1162"
        },
        {
            "type": "step",
            "step": "Space-Action-Field",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-3724",
            "positionY": "994"
        },
        {
            "type": "step",
            "step": "Space-Attention-Field",
            "display style": "ICON_AND_TEXT",
            "width": "124",
            "height": "40",
            "positionX": "-3892",
            "positionY": "1050"
        },
        {
            "type": "step",
            "step": "Space-matching-Field",
            "display style": "ICON_AND_TEXT",
            "width": "124",
            "height": "40",
            "positionX": "-3668",
            "positionY": "980"
        },
        {
            "type": "step",
            "step": "Static Gain",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-364",
            "positionY": "1372"
        },
        {
            "type": "step",
            "step": "Static Gain 10",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-4004",
            "positionY": "938"
        },
        {
            "type": "step",
            "step": "Static Gain 11",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-3332",
            "positionY": "938"
        },
        {
            "type": "step",
            "step": "Static Gain 12",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-3136",
            "positionY": "938"
        },
        {
            "type": "step",
            "step": "Static Gain 13",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-2856",
            "positionY": "938"
        },
        {
            "type": "step",
            "step": "Static Gain 14",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-2660",
            "positionY": "938"
        },
        {
            "type": "step",
            "step": "Static Gain 15",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-1442",
            "positionY": "1134"
        },
        {
            "type": "step",
            "step": "Static Gain 16",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-2282",
            "positionY": "938"
        },
        {
            "type": "step",
            "step": "Static Gain 17",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-2086",
            "positionY": "938"
        },
        {
            "type": "step",
            "step": "Static Gain 18",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "812",
            "positionY": "546"
        },
        {
            "type": "step",
            "step": "Static Gain 19",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "798",
            "positionY": "280"
        },
        {
            "type": "step",
            "step": "Static Gain 20",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-1218",
            "positionY": "784"
        },
        {
            "type": "step",
            "step": "Static Gain 21",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-1218",
            "positionY": "994"
        },
        {
            "type": "step",
            "step": "Static Gain 22",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-1218",
            "positionY": "1204"
        },
        {
            "type": "step",
            "step": "Static Gain 23",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "560",
            "positionY": "280"
        },
        {
            "type": "step",
            "step": "Static Gain 5",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "406",
            "positionY": "616"
        },
        {
            "type": "step",
            "step": "Static Gain 6",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "602",
            "positionY": "616"
        },
        {
            "type": "step",
            "step": "Static Gain 7",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-1428",
            "positionY": "728"
        },
        {
            "type": "step",
            "step": "Static Gain 8",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-1442",
            "positionY": "924"
        },
        {
            "type": "step",
            "step": "Static Gain 9",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-4200",
            "positionY": "938"
        },
        {
            "type": "step",
            "step": "TCP-Break-Writer",
            "display style": "ICON_AND_TEXT",
            "width": "124",
            "height": "40",
            "positionX": "-2464",
            "positionY": "1106"
        },
        {
            "type": "step",
            "step": "TCP-LED-Writer",
            "display style": "ICON_AND_TEXT",
            "width": "124",
            "height": "40",
            "positionX": "-952",
            "positionY": "994"
        },
        {
            "type": "step",
            "step": "TCP-Motor-Writer",
            "display style": "ICON_AND_TEXT",
            "width": "124",
            "height": "40",
            "positionX": "-3612",
            "positionY": "1176"
        },
        {
            "type": "step",
            "step": "Transfer Function 3",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-98",
            "positionY": "1372"
        },
        {
            "type": "step",
            "step": "Vector To Scalars",
            "display style": "ICON_ONLY",
            "width": "40",
            "height": "40",
            "positionX": "-1848",
            "positionY": "210"
        },
        {
            "type": "trigger",
            "trigger": "default thread",
            "width": "30",
            "height": "30",
            "positionX": "0",
            "positionY": "0"
        }
    ],
    "ui view": {
        "ScrollBarX": "-771",
        "ScrollBarY": "-394",
        "SliderPosX": "-771",
        "SliderPosY": "-394",
        "Zoom": "0.71999999999999997"
    },
    "ui generic": {
        "group": "element",
        "open plots": "",
        "plot groups": "",
        "architecture widgets": "",
        "robots": "",
        "width": "250",
        "height": "250",
        "smart mode": "false",
        "collapsed": "false",
        "lock geometry": "false",
        "uncollapsed width": "250",
        "uncollapsed height": "250",
        "positionX": "0",
        "positionY": "0"
    }
}
